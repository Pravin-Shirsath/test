{"version":3,"sources":["Routes/dashboard/Admin/CustomerDetails/Table.js","Routes/dashboard/Admin/CustomerDetails/index.js","Routes/dashboard/ReuseComponent/CustomBreadcrumbs.js"],"names":["Table","useRef","useState","project","setProject","filterProject","setFilteredProject","searchText","setSearchText","activePage","setActivePage","totalPageCount","setTotalPageCount","type","JSON","parse","localStorage","getItem","ProjectList","accessToken","CustomerID","CustomerProjects","then","res","status","data","results","parseInt","count","console","log","catch","err","response","useEffect","className","style","justifyContent","placeholder","border","borderBottom","value","onChange","e","target","Button","variant","color","onClick","SearchCustomerProjects","length","NotificationManager","error","map","Project","i","created","getFormatDate2","date_created","id","project_name","size","itemsCountPerPage","pageRangeDisplayed","pageNumber","GetAlLProjectList","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","CustomerDetails","props","location","setAccout","useData","setUseData","totalData","setTotalData","state","AccountStatus","Tdata","Udata","Number","GetAccountStatus","Helmet","name","content","CustomBreadcrumbs","currentPage","breadcrumbData","RctCollapsibleCard","position","src","profile_image","process","BASE_URL","alt","width","height","username","email","Progress","bar","marginTop","multi","toFixed","history","useHistory","HandleNavigate","item","index","myarray","push","url","undefined","cursor"],"mappings":"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","file":"static/js/80.6bbcec8c.chunk.js","sourcesContent":["\n\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Button from '@material-ui/core/Button'\n\nimport { NotificationManager } from 'react-notifications'\nimport Pagination from \"react-js-pagination\";\n\nimport '../../../.././Assets/css/user.css'\nimport {\n  CustomerProjects,\n  DeleteProject, GetAlLProjectList, GetSearchProjectList, SearchCustomerProjects,\n\n\n} from '../../../.././Api/'\nimport { getFormatDate2 } from 'Constants/DateFormator'\n\n\n\nconst Table = () => {\n\n  const deleteConfirmationDialog = useRef()\n  const [project, setProject] = useState([])\n  //  const [filteredUsers, setFilteredProject] = useState() // use when the data is coming fom api\n  const [filterProject, setFilteredProject] = useState([])\n  const [searchText, setSearchText] = useState('');\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState('');\n  const [selected, setSelectedItem] = useState({})\n  const type = JSON.parse(localStorage.getItem('user_type'));\n  const [openEditProject, setOpenEditProject] = useState(false)\n\n\n\n\n\n  const ProjectList = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    const CustomerID = JSON.parse(localStorage.getItem('CustomerId'))\n    if (accessToken !== null) {\n      CustomerProjects(accessToken, activePage, CustomerID)\n        .then((res) => {\n          if (res?.status === 200) {\n            setProject(res?.data?.results);\n            setFilteredProject(res?.data?.results);\n            setTotalPageCount(parseInt(res?.data?.count));\n            console.log('Response from PROJECTlist :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n          }\n        })\n        .catch((err) => {\n          // console.log(\"status of invalid token\", err?.response?.data, err?.response?.status)\n          if (err?.response?.status == 401) {\n            // conditional rendring\n            // localStorage.clear();\n            // history.push(\"/login\");\n            // window.location.reload();\n          } else {\n            // console.log('Response from customerlist:', err)\n          }\n        })\n    }\n  }\n\n\n\n\n  const handlePageChange = (pageNumber) => {\n    // console.log(\"pagination\", pageNumber)\n    if (activePage !== pageNumber) {\n      const accessToken = JSON.parse(localStorage.getItem('token'))\n      if (accessToken !== null) {\n        GetAlLProjectList(accessToken, pageNumber)\n          .then((res) => {\n            if (res?.status === 200) {\n              setProject(res?.data?.results);\n              setFilteredProject(res?.data?.results);\n              setTotalPageCount(parseInt(res?.data?.count));\n              console.log('Response from handle change :', res)\n            } else {\n              // console.log('Response from customerlist:', res)\n            }\n          })\n          .catch((err) => {\n            // console.log('Response from customerlist:', err)\n          })\n      }\n\n      setActivePage(pageNumber)\n    }\n  }\n\n\n  const getSearchedProjectData = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'));\n    const CustomerID = JSON.parse(localStorage.getItem('CustomerId'))\n    if (accessToken !== null) {\n      SearchCustomerProjects(accessToken, searchText, CustomerID)\n        .then((res) => {\n          if (res?.status === 200 && res?.data?.results.length > 0) {\n            setFilteredProject(res?.data?.results);\n            setSearchText('')\n            console.log('Response from search  :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n            setFilteredProject(project);\n            setSearchText('');\n            NotificationManager.error(\"No Project found!\")\n          }\n        })\n        .catch((err) => {\n          // console.log('Response from customerlist:', err)\n        })\n    }\n  }\n\n  //  alert(\"hello\")\n  useEffect(() => {\n\n    ProjectList()\n    console.log(\"type\", type);\n  }, [])\n\n\n  const DeletModalOpen = (item) => {\n    setSelectedItem(item)\n    deleteConfirmationDialog.current.open()\n  }\n  const Delete_project = () => {\n\n\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      DeleteProject(accessToken, selected?.id)\n        .then((res) => {\n          if (res?.status === 200) {\n            deleteConfirmationDialog.current.close()\n            ProjectList()\n            NotificationManager.success(\"Project deleted !\")\n            console.log('Response from search  :', res)\n          } else {\n            NotificationManager.error(\"Project deleting process unsucess!\")\n          }\n        })\n        .catch((err) => {\n          NotificationManager.error(\"Project deleting process unsucess!\")\n        })\n    }\n  }\n\n\n\n  return (\n    <div>\n      <div className=\"table-responsive\">\n        <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n          <div className='search-row'>\n            <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n            <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" onClick={getSearchedProjectData} >Search</Button>\n          </div>\n\n          {/* <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\"  style={{ cursor: \"pointer\"}}   onClick={(e) => opnAddNewUserModal(e)}> <i className=\"zmdi zmdi-plus mx-2\"></i>Users</Button> */}\n\n\n\n\n        </div>\n        <table className=\"table table-middle table-hover mb-0\">\n          <thead>\n            <tr>\n              <th></th>\n              <th>Project Id</th>\n              <th>Project Name </th>\n              <th>Size</th>\n              <th>Created Date</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n\n          {/****** mine filtered Table body, without ternary conditional value  *****/}\n          <tbody>\n            {filterProject &&\n              filterProject.map((Project, i, data) => {\n                let created = getFormatDate2(Project.date_created)\n                return (\n\n                  <tr key={i}>\n                    <td></td>\n                    <td>{Project?.id}</td>\n                    <td>\n                      <div className=\"media\">\n                        <div className=\"media-body\">\n                          <h5 className=\"mb-5 fw-bold\">\n                            {Project?.project_name}\n                          </h5>\n                        </div>\n                      </div>\n                    </td>\n                    <td>{Project?.size != null ? Project?.size : \"-\"}</td>\n                    <td>\n                      {created}\n                    </td>\n                    <td>\n                      {Project?.status != null ? Project?.status : \"-\"}\n                    </td>\n\n                  </tr>\n                )\n              })}\n          </tbody>\n\n        </table>\n        {\n          project?.length > 0 &&\n          <div className='paginationDiv'>\n            <Pagination\n              activePage={activePage}\n              itemsCountPerPage={6}\n              pageRangeDisplayed={5}\n              onChange={(e) => handlePageChange(e)}\n              itemClass=\"page-item\"\n              linkClass=\"page-link\"\n              hideFirstLastPages={true}\n              totalItemsCount={totalPageCount}\n            />\n\n\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Table\n","import { AccountStatus, UserAccountStatus } from 'Api';\nimport React, { useEffect, useState } from 'react'\n\nimport {\n  Progress, \n} from 'reactstrap';\nimport { Helmet } from \"react-helmet\";\n\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\nimport { str } from 'Constants/stringConst';\nimport { BASE_URL } from 'Api/APIConst';\nimport Table from \"./Table\"\nimport CustomBreadcrumbs from 'Routes/dashboard/ReuseComponent/CustomBreadcrumbs';\nconst CustomerDetails = (props) => {\n\n  const { location } = props\n  console.log(location,\">>>>>>>\")\n\n  const [Accout, setAccout] = useState()\n  const [useData, setUseData] = useState(0)\n  const [totalData, setTotalData] = useState(0)\n\n\n  const GetAccountStatus = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    const id = location?.state?.id\n    if (accessToken !== null) {\n      AccountStatus(accessToken,id).then((res) => {\n        if (res?.status === 200) {\n          if (res?.data) {\n            setAccout(res?.data)\n            const Tdata = res?.data[\"total_allowed_size\"]\n            const Udata = res?.data[\"total_size_consumed\"]\n            if (Udata) {\n              setUseData(Number(Udata))\n            }\n\n            if (Tdata) {\n\n              setTotalData(Number(Tdata))\n            }\n          }\n        } else {\n\n        }\n      })\n    }\n  }\n\n  useEffect(() => {\n\n\n    GetAccountStatus()\n\n\n  }, [])\n\n  return (\n    <div className=\"ecom-dashboard-wrapper\">\n      <Helmet>\n        <title>Custoumer Details</title>\n        <meta name=\"description\" content=\"\" />\n      </Helmet>\n\n\n      <div className=\"charts-widgets-wrapper\">\n       \n     <CustomBreadcrumbs    currentPage={\"Customer Details\"} data={location?.state?.breadcrumbData}  />\n\n\n        <RctCollapsibleCard\n         \n\n        >\n          {/* user Profile Start */}\n\n          <div className=\"profile-content\">\n            <div className=\"media d-flex justify-content-center align-items-center\">\n              <div style={{ position: \"relative\" }}>\n                <img src={location?.state?.profile_image == null ? `${process.env.PUBLIC_URL}/assets/images/avatars/user-15.jpg` : `${BASE_URL + location?.state?.profile_image}`} alt=\"user profile\" className=\"rounded-circle bordered\" width=\"90\" height=\"90\" />\n              </div>\n              <div className=\"media-body\">\n                <div className=\"d-flex flex-column align-items-baseline\">\n                  {/* <h2 className=\"user-name text-white\">{profileData?.first_name} {profileData?.last_name}</h2> */}\n                  <h2>{location?.state?.username}</h2>\n                  <p>{location?.state?.email}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"w-100 d-flex justify-content-between px-40 mt-30\">\n            <h3>Used </h3> <h3>Available </h3>\n          </div>\n          <div>\n            {\n              totalData == 0 ? <Progress bar color=\"danger\" value={100} style={{ height: \"50px\" }} ><h2 style={{ marginTop: \"6px\" }}>0GB</h2></Progress>\n                :\n                <Progress multi style={{ height: \"50px\" }}>\n                <Progress bar color=\"danger\" value={useData *(100/totalData) } className=\"progress-bar progress-bar-striped progress-bar-animated\" ><p className=\"account-gb-text \"  >{useData.toFixed(3)}GB</p></Progress>\n               <Progress bar color=\"success\" value={(totalData-useData)*(100/totalData)}   className=\"progress-bar progress-bar-striped progress-bar-animated\" > <p className=\"account-gb-text\" >{(totalData-useData).toFixed(3)}GB </p></Progress>\n                </Progress>\n            }\n\n          </div>\n          {/* user Profile end */}\n\n         <Table />\n         \n\n\n\n        </RctCollapsibleCard>\n\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default CustomerDetails\n","import React, { useEffect,useState } from 'react';\nimport { useHistory } from 'react-router';\nimport \"./CustomBreadcrumbs.css\"\n\nconst CustomBreadcrumbs = ({ currentPage, data =[] ,props}) => {\n\nconst [navData,setNavData]=useState(data)\n\n\nuseEffect(()=>{\n\n},[])\n\n  const history = useHistory();\n      console.log(data,\"daaata..\")\n  \n  const HandleNavigate = async (item,index)=>{\n    // const Data = [...navData]\n    let myarray=[]\n    // console.log(index,\"Data=\",Data)\n\n\n     for (let i = 0; i < index; i++) {\n       \n      myarray.push(data[i])\n     }\nconsole.log(myarray,\"myarray\")\n    \n    history.push(item.url,{breadcrumbData:myarray})\n  }\n\n  return (\n    <div className=\"page-title d-flex  align-items-center\">\n      {data != undefined  && data.length > 0 &&data.map((item, index) => (\n        <div key={index} className=\"page-title-wrap  d-flex  align-items-center mr-1 bread-titile-box\" style={{cursor:\"pointer\"}}>\n          \n        <i className=\"ti-angle-left text-dark  custombredcrum-icon\"></i> <span onClick={()=>HandleNavigate(item,index)} className=\"globalFontFamily custombredcrum-heding\">{item.name}</span>\n         \n        </div>\n      ))}\n      <div className=\"page-title-wrap   d-flex  align-items-center text-white m-0\"  style={{cursor:\"pointer\"}}><i className=\"ti-angle-left  text-white custombredcrum-icon\"></i><span className=\"globalFontFamily custombredcrum-heding\">{currentPage}</span></div>\n    </div>\n  );\n};\n\nexport default CustomBreadcrumbs;\n"],"sourceRoot":""}