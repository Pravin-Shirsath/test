{"version":3,"sources":["Components/Widgets/EmployeePayroll.js"],"names":["EmployPayroll","useState","employPayrollReload","setEmployPayrollReload","employeePayroll","setEmployeePayroll","useEffect","getEmployeePayrolls","api","get","then","response","data","catch","error","console","log","className","map","employee","key","src","employeeAvatar","alt","width","height","employeeName","designation","salary","status","color","id","href","onClick","e","preventDefault","index","indexOf","setTimeout","update","$set","onCheckBoxClick","$splice","deleteEmployePayroll"],"mappings":"qMA4GeA,UA5Ff,WACG,MAAsDC,oBAAS,GAAM,mBAA9DC,EAAmB,KAAEC,EAAsB,KAClD,EAA8CF,mBAAS,MAAK,mBAArDG,EAAe,KAAEC,EAAkB,KAE1CC,qBAAU,WACPC,GACH,GAAE,IAGJ,IAAMA,EAAsB,WAC3BC,IAAIC,IAAI,sBACNC,MAAK,SAACC,GACNN,EAAmBM,EAASC,KAC7B,IACCC,OAAM,SAAAC,GACNC,QAAQC,IAAIF,EACb,GACF,EAyBE,OACG,eAAC,WAAQ,WACLZ,GACE,cAAC,IAAgB,IAEpB,qBAAKe,UAAU,mBAAkB,SAC9B,wBAAOA,UAAU,sCAAqC,UACnD,gCACG,+BACG,6BAAI,SACJ,6BAAI,gBACJ,6BAAI,WACJ,6BAAI,WACJ,6BAAI,gBAGV,gCACIb,GAAmBA,EAAgBc,KAAI,SAACC,EAAUC,GAAG,OACnD,+BACG,6BACG,sBAAKH,UAAU,QAAO,UACnB,qBAAKA,UAAU,gCAA+B,SAC3C,qBAAKI,IAAKF,EAASG,eAAgBC,IAAI,eAAeN,UAAU,8BAA8BO,MAAM,KAAKC,OAAO,SAEnH,qBAAKR,UAAU,mBAAkB,SAC9B,oBAAIA,UAAU,wBAAuB,SAAEE,EAASO,sBAIzD,6BAAKP,EAASQ,cACd,+BAAI,IAAER,EAASS,UACf,6BACwB,IAApBT,EAASU,OACP,cAAC,IAAK,CAACC,MAAM,UAAS,SAAC,cAAC,IAAY,CAACC,GAAG,mBACtC,cAAC,IAAK,CAACD,MAAM,UAAS,SAAC,cAAC,IAAY,CAACC,GAAG,wBAGhD,qBAAId,UAAU,eAAc,UACJ,IAApBE,EAASU,QAAgB,mBAAGG,KAAK,KAAKC,QAAS,SAACC,GAAC,OAjDpD,SAACA,EAAGf,GACvBe,EAAEC,iBACFhC,GAAuB,GACvB,IAAIiC,EAAQhC,EAAgBiC,QAAQlB,GACpCmB,YAAW,WACRjC,EAAmBkC,IAAOnC,EAAgB,eAAIgC,EAAQ,CAAEP,OAAQ,CAAEW,KAAM,OACxErC,GAAuB,EAC1B,GAAG,KAEN,CAwC+EsC,CAAgBP,EAAGf,EAAS,EAAC,SAAC,mBAAGF,UAAU,eAClG,mBAAGe,KAAK,KAAKC,QAAS,SAACC,GAAC,OA7DrB,SAACA,EAAGf,GAChCe,EAAEC,iBACFhC,GAAuB,GACvB,IAAIiC,EAAQhC,EAAgBiC,QAAQlB,GACpCmB,YAAW,WACVjC,EAAmBkC,IAAOnC,EAAiB,CAAEsC,QAAS,CAAC,CAACN,EAAO,OACzDjC,GAAuB,EAC1B,GAAG,KACR,CAqDuDwC,CAAqBT,EAAGf,EAAS,EAAC,SAAC,mBAAGF,UAAU,oBArB1EG,EAuBJ,aAO1B,C","file":"static/js/147.c9ccb9bf.chunk.js","sourcesContent":["/**\n * Employ Payroll\n */\nimport React, { Fragment, useState, useEffect } from 'react';\nimport update from 'react-addons-update';\nimport { Badge } from 'reactstrap';\n\n// api\nimport api from 'Api';\n\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction EmployPayroll() {\n   const [employPayrollReload, setEmployPayrollReload] = useState(false);\n   const [employeePayroll, setEmployeePayroll] = useState(null);\n\n   useEffect(() => {\n      getEmployeePayrolls();\n   },[])\n\n\t// get employee payrols\n\tconst getEmployeePayrolls = () => {\n\t\tapi.get('employeePayrols.js')\n\t\t\t.then((response) => {\n\t\t\t\tsetEmployeePayroll(response.data);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\t}\n\n\t// delete employee payroll\n\tconst deleteEmployePayroll = (e, employee) => {\n\t\te.preventDefault();\n\t\tsetEmployPayrollReload(true);\n\t\tlet index = employeePayroll.indexOf(employee);\n\t\tsetTimeout(() => {\n\t\t\tsetEmployeePayroll(update(employeePayroll, { $splice: [[index, 1]] }));\n         setEmployPayrollReload(false)\n      }, 1500);\n\t}\n\n\t// on check box click\n\tconst onCheckBoxClick = (e, employee) => {\n      e.preventDefault();\n      setEmployPayrollReload(true);\n      let index = employeePayroll.indexOf(employee);\n      setTimeout(() => {\n         setEmployeePayroll(update(employeePayroll, { [index]: { status: { $set: 1 } } }));\n         setEmployPayrollReload(false)\n      }, 1500);\n      \n   }\n   \n   return (\n      <Fragment>\n         {employPayrollReload &&\n            <RctSectionLoader />\n         }\n         <div className=\"table-responsive\">\n            <table className=\"table table-hover table-middle mb-0\">\n               <thead>\n                  <tr>\n                     <th>Name</th>\n                     <th>Designation</th>\n                     <th>Salary</th>\n                     <th>Status</th>\n                     <th>Action</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {employeePayroll && employeePayroll.map((employee, key) => (\n                     <tr key={key}>\n                        <td>\n                           <div className=\"media\">\n                              <div className=\"media-left media-middle mr-15\">\n                                 <img src={employee.employeeAvatar} alt=\"user profile\" className=\"media-object rounded-circle\" width=\"35\" height=\"35\" />\n                              </div>\n                              <div className=\"media-body pt-10\">\n                                 <h6 className=\"m-0 fw-bold text-dark\">{employee.employeeName}</h6>\n                              </div>\n                           </div>\n                        </td>\n                        <td>{employee.designation}</td>\n                        <td>${employee.salary}</td>\n                        <td>\n                           {employee.status === 1 ?\n                              <Badge color=\"primary\"><IntlMessages id=\"widgets.done\" /></Badge>\n                              : <Badge color=\"warning\"><IntlMessages id=\"widgets.pending\" /></Badge>\n                           }\n                        </td>\n                        <td className=\"table-action\">\n                           {employee.status === 0 && <a href=\"!#\" onClick={(e) => onCheckBoxClick(e, employee)}><i className=\"ti-check\"></i></a>}\n                           <a href=\"!#\" onClick={(e) => deleteEmployePayroll(e, employee)}><i className=\"ti-close\"></i></a>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n      </Fragment>\n   );\n}\n\nexport default EmployPayroll;\n"],"sourceRoot":""}