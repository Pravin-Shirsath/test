{"version":3,"sources":["../node_modules/@mui/icons-material/Upload.js","../node_modules/@uppy/utils/lib/AbortController.js","../node_modules/@uppy/aws-s3-multipart/lib/MultipartUploader.js","../node_modules/@uppy/aws-s3-multipart/lib/index.js","../node_modules/reactstrap/es/Col.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","AbortController","globalThis","createAbortError","AbortSignal","message","options","err","DOMException","hasOwnProperty","__proto__","configurable","writable","cause","_classPrivateFieldLooseBase","receiver","privateKey","prototype","call","TypeError","id","_classPrivateFieldLooseKey","name","MB","defaultOptions","getChunkSize","file","Math","ceil","size","onProgress","onPartComplete","onSuccess","onError","pausingUploadReason","Symbol","_abortController","_chunks","_chunkState","_data","_file","_uploadPromise","_onError","_onSuccess","_onReject","_initChunks","_createUpload","_resumeUpload","_onPartProgress","_onPartComplete","_abortUpload","_initChunks2","desiredChunkSize","this","fileSize","minChunkSize","max","chunkSize","onComplete","arraySize","Array","j","i","end","min","chunk","slice","map","uploaded","_createUpload2","companionComm","uploadFile","signal","then","_resumeUpload2","resumeUploadFile","_abortUpload2","abort","abortFileUpload","catch","log","MultipartUploader","_Symbol$for","data","_this$options","index","ev","lengthComputable","sent","loaded","parseInt","ensureInt","totalUploaded","reduce","n","c","etag","done","part","PartNumber","ETag","aborted","opts","_opts","undefined","really","pause","assertServerError","res","error","Error","assign","throwIfAborted","reason","_abortMultipartUpload","_cache","_createMultipartUpload","_fetchSignature","_listParts","_previousRetryDelay","_requests","_retryDelayIterator","_sendCompletionRequest","_setS3MultipartState","_uploadPartBytes","_shouldRetry","HTTPCommunicationQueue","_requests2","setS3MultipartState","_shouldRetry2","WeakMap","setOptions","_options$retryDelays","requests","wrapPromiseFunction","abortMultipartUpload","createMultipartUpload","priority","signPart","listParts","completeMultipartUpload","retryDelays","values","uploadPartBytes","Infinity","cachedResult","get","promise","abortPromise","delete","addEventListener","once","set","result","removeEventListener","chunks","getUploadId","uploadId","key","Promise","all","uploadChunk","parts","abortOn","alreadyUploadedParts","partNumber","alreadyUploadedInfo","find","_ref","body","signature","status","_err$source","source","isPaused","limit","next","_classPrivateFieldLoo","rateLimit","resolve","setTimeout","_classPrivateFieldLoo2","navigator","onLine","window","resume","_classPrivateFieldLoo3","_queueRequestSocketToken","_companionCommunicationQueue","_client","_setS3MultipartState2","_requestSocketToken","_setCompanionHeaders","for","AwsS3Multipart","uppy","_this$opts$rateLimite","_ref2","cFile","getFile","setFileState","s3Multipart","Client","remote","providerOptions","provider","Provider","RequestClient","client","tus","url","post","protocol","metadata","meta","token","setCompanionHeaders","companionHeaders","type","title","allowedMetaFields","bind","prepareUploadParts","_ref3","number","presignedUrls","headers","upload","rateLimitedQueue","RateLimitedQueue","uploaders","create","uploaderEvents","uploaderSockets","newOptions","fileID","remove","close","method","companionUrl","_this$opts$allowedMet","assertHost","fromEntries","keys","filter","String","filename","_ref4","encodeURIComponent","_ref5","uploadIdEnc","_ref6","_ref7","_this","reject","arguments","bytesUploaded","bytesTotal","emit","uploader","resetUploaderReferences","uploadObject","uploadResp","uploadURL","location","EventTracker","onFileRemove","removed","onCancelAll","_temp","onFilePause","start","onPauseAll","onResumeAll","progress","uploadStarted","isRestored","serverToken","connectToServerSocket","getState","files","_this2","queuedRequest","host","getSocketHost","socket","Socket","target","autoOpen","send","run","open","_temp2","onRetry","isOpen","onRetryAll","on","progressData","emitSocketProgress","errData","fileIDs","length","promises","isRemote","uploadRemote","cb","targetFileID","eventHandler","_this3","capabilities","setState","resumableUploads","addPreProcessor","addUploader","removePreProcessor","removeUploader","_ref8","expires","xhr","XMLHttpRequest","onabort","cleanup","forEach","setRequestHeader","responseType","timeout","responseText","includes","getResponseHeader","BasePlugin","VERSION","_excluded","stringOrNumberProp","PropTypes","oneOfType","string","columnProps","bool","shape","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","className","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","mapToCssModules","classNames","_colClass","classes","React","createElement","_extends"],"mappings":"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","file":"static/js/94.41150078.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zm0-10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Upload');\nexports.default = _default;","import hasOwnProperty from './hasProperty.js';\n/**\n * Little AbortController proxy module so we can swap out the implementation easily later.\n */\n\nexport const {\n  AbortController\n} = globalThis;\nexport const {\n  AbortSignal\n} = globalThis;\nexport const createAbortError = function (message, options) {\n  if (message === void 0) {\n    message = 'Aborted';\n  }\n\n  const err = new DOMException(message, 'AbortError');\n\n  if (options != null && hasOwnProperty(options, 'cause')) {\n    Object.defineProperty(err, 'cause', {\n      __proto__: null,\n      configurable: true,\n      writable: true,\n      value: options.cause\n    });\n  }\n\n  return err;\n};","function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nimport { AbortController } from '@uppy/utils/lib/AbortController';\nconst MB = 1024 * 1024;\nconst defaultOptions = {\n  getChunkSize(file) {\n    return Math.ceil(file.size / 10000);\n  },\n\n  onProgress() {},\n\n  onPartComplete() {},\n\n  onSuccess() {},\n\n  onError(err) {\n    throw err;\n  }\n\n};\n\nfunction ensureInt(value) {\n  if (typeof value === 'string') {\n    return parseInt(value, 10);\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  throw new TypeError('Expected a number');\n}\n\nconst pausingUploadReason = Symbol('pausing upload, not an actual error');\n\nvar _abortController = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortController\");\n\nvar _chunks = /*#__PURE__*/_classPrivateFieldLooseKey(\"chunks\");\n\nvar _chunkState = /*#__PURE__*/_classPrivateFieldLooseKey(\"chunkState\");\n\nvar _data = /*#__PURE__*/_classPrivateFieldLooseKey(\"data\");\n\nvar _file = /*#__PURE__*/_classPrivateFieldLooseKey(\"file\");\n\nvar _uploadPromise = /*#__PURE__*/_classPrivateFieldLooseKey(\"uploadPromise\");\n\nvar _onError = /*#__PURE__*/_classPrivateFieldLooseKey(\"onError\");\n\nvar _onSuccess = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSuccess\");\n\nvar _onReject = /*#__PURE__*/_classPrivateFieldLooseKey(\"onReject\");\n\nvar _initChunks = /*#__PURE__*/_classPrivateFieldLooseKey(\"initChunks\");\n\nvar _createUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"createUpload\");\n\nvar _resumeUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"resumeUpload\");\n\nvar _onPartProgress = /*#__PURE__*/_classPrivateFieldLooseKey(\"onPartProgress\");\n\nvar _onPartComplete = /*#__PURE__*/_classPrivateFieldLooseKey(\"onPartComplete\");\n\nvar _abortUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortUpload\");\n\nclass MultipartUploader {\n  constructor(data, options) {\n    var _this$options, _this$options$getChun;\n\n    Object.defineProperty(this, _abortUpload, {\n      value: _abortUpload2\n    });\n    Object.defineProperty(this, _resumeUpload, {\n      value: _resumeUpload2\n    });\n    Object.defineProperty(this, _createUpload, {\n      value: _createUpload2\n    });\n    Object.defineProperty(this, _initChunks, {\n      value: _initChunks2\n    });\n    Object.defineProperty(this, _abortController, {\n      writable: true,\n      value: new AbortController()\n    });\n    Object.defineProperty(this, _chunks, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _chunkState, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _data, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _file, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _uploadPromise, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _onError, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _onSuccess, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _onReject, {\n      writable: true,\n      value: err => (err == null ? void 0 : err.cause) === pausingUploadReason ? null : _classPrivateFieldLooseBase(this, _onError)[_onError](err)\n    });\n    Object.defineProperty(this, _onPartProgress, {\n      writable: true,\n      value: index => ev => {\n        if (!ev.lengthComputable) return;\n        const sent = ev.loaded;\n        _classPrivateFieldLooseBase(this, _chunkState)[_chunkState][index].uploaded = ensureInt(sent);\n\n        const totalUploaded = _classPrivateFieldLooseBase(this, _chunkState)[_chunkState].reduce((n, c) => n + c.uploaded, 0);\n\n        this.options.onProgress(totalUploaded, _classPrivateFieldLooseBase(this, _data)[_data].size);\n      }\n    });\n    Object.defineProperty(this, _onPartComplete, {\n      writable: true,\n      value: index => etag => {\n        // This avoids the net::ERR_OUT_OF_MEMORY in Chromium Browsers.\n        _classPrivateFieldLooseBase(this, _chunks)[_chunks][index] = null;\n        _classPrivateFieldLooseBase(this, _chunkState)[_chunkState][index].etag = etag;\n        _classPrivateFieldLooseBase(this, _chunkState)[_chunkState][index].done = true;\n        const part = {\n          PartNumber: index + 1,\n          ETag: etag\n        };\n        this.options.onPartComplete(part);\n      }\n    });\n    this.options = { ...defaultOptions,\n      ...options\n    }; // Use default `getChunkSize` if it was null or something\n\n    (_this$options$getChun = (_this$options = this.options).getChunkSize) != null ? _this$options$getChun : _this$options.getChunkSize = defaultOptions.getChunkSize;\n    _classPrivateFieldLooseBase(this, _data)[_data] = data;\n    _classPrivateFieldLooseBase(this, _file)[_file] = options.file;\n    _classPrivateFieldLooseBase(this, _onSuccess)[_onSuccess] = this.options.onSuccess;\n    _classPrivateFieldLooseBase(this, _onError)[_onError] = this.options.onError;\n\n    _classPrivateFieldLooseBase(this, _initChunks)[_initChunks]();\n  }\n\n  start() {\n    if (_classPrivateFieldLooseBase(this, _uploadPromise)[_uploadPromise]) {\n      if (!_classPrivateFieldLooseBase(this, _abortController)[_abortController].signal.aborted) _classPrivateFieldLooseBase(this, _abortController)[_abortController].abort(pausingUploadReason);\n      _classPrivateFieldLooseBase(this, _abortController)[_abortController] = new AbortController();\n\n      _classPrivateFieldLooseBase(this, _resumeUpload)[_resumeUpload]();\n    } else {\n      _classPrivateFieldLooseBase(this, _createUpload)[_createUpload]();\n    }\n  }\n\n  pause() {\n    _classPrivateFieldLooseBase(this, _abortController)[_abortController].abort(pausingUploadReason); // Swap it out for a new controller, because this instance may be resumed later.\n\n\n    _classPrivateFieldLooseBase(this, _abortController)[_abortController] = new AbortController();\n  }\n\n  abort(opts) {\n    var _opts;\n\n    if (opts === void 0) {\n      opts = undefined;\n    }\n\n    if ((_opts = opts) != null && _opts.really) _classPrivateFieldLooseBase(this, _abortUpload)[_abortUpload]();else this.pause();\n  } // TODO: remove this in the next major\n\n\n  get chunkState() {\n    return _classPrivateFieldLooseBase(this, _chunkState)[_chunkState];\n  }\n\n}\n\nfunction _initChunks2() {\n  const desiredChunkSize = this.options.getChunkSize(_classPrivateFieldLooseBase(this, _data)[_data]); // at least 5MB per request, at most 10k requests\n\n  const fileSize = _classPrivateFieldLooseBase(this, _data)[_data].size;\n\n  const minChunkSize = Math.max(5 * MB, Math.ceil(fileSize / 10000));\n  const chunkSize = Math.max(desiredChunkSize, minChunkSize); // Upload zero-sized files in one zero-sized chunk\n\n  if (_classPrivateFieldLooseBase(this, _data)[_data].size === 0) {\n    _classPrivateFieldLooseBase(this, _chunks)[_chunks] = [_classPrivateFieldLooseBase(this, _data)[_data]];\n    _classPrivateFieldLooseBase(this, _data)[_data].onProgress = _classPrivateFieldLooseBase(this, _onPartProgress)[_onPartProgress](0);\n    _classPrivateFieldLooseBase(this, _data)[_data].onComplete = _classPrivateFieldLooseBase(this, _onPartComplete)[_onPartComplete](0);\n  } else {\n    const arraySize = Math.ceil(fileSize / chunkSize);\n    _classPrivateFieldLooseBase(this, _chunks)[_chunks] = Array(arraySize);\n    let j = 0;\n\n    for (let i = 0; i < fileSize; i += chunkSize) {\n      const end = Math.min(fileSize, i + chunkSize);\n\n      const chunk = _classPrivateFieldLooseBase(this, _data)[_data].slice(i, end);\n\n      chunk.onProgress = _classPrivateFieldLooseBase(this, _onPartProgress)[_onPartProgress](j);\n      chunk.onComplete = _classPrivateFieldLooseBase(this, _onPartComplete)[_onPartComplete](j);\n      _classPrivateFieldLooseBase(this, _chunks)[_chunks][j++] = chunk;\n    }\n  }\n\n  _classPrivateFieldLooseBase(this, _chunkState)[_chunkState] = _classPrivateFieldLooseBase(this, _chunks)[_chunks].map(() => ({\n    uploaded: 0\n  }));\n}\n\nfunction _createUpload2() {\n  _classPrivateFieldLooseBase(this, _uploadPromise)[_uploadPromise] = this.options.companionComm.uploadFile(_classPrivateFieldLooseBase(this, _file)[_file], _classPrivateFieldLooseBase(this, _chunks)[_chunks], _classPrivateFieldLooseBase(this, _abortController)[_abortController].signal).then(_classPrivateFieldLooseBase(this, _onSuccess)[_onSuccess], _classPrivateFieldLooseBase(this, _onReject)[_onReject]);\n}\n\nfunction _resumeUpload2() {\n  _classPrivateFieldLooseBase(this, _uploadPromise)[_uploadPromise] = this.options.companionComm.resumeUploadFile(_classPrivateFieldLooseBase(this, _file)[_file], _classPrivateFieldLooseBase(this, _chunks)[_chunks], _classPrivateFieldLooseBase(this, _abortController)[_abortController].signal).then(_classPrivateFieldLooseBase(this, _onSuccess)[_onSuccess], _classPrivateFieldLooseBase(this, _onReject)[_onReject]);\n}\n\nfunction _abortUpload2() {\n  _classPrivateFieldLooseBase(this, _abortController)[_abortController].abort();\n\n  this.options.companionComm.abortFileUpload(_classPrivateFieldLooseBase(this, _file)[_file]).catch(err => this.options.log(err));\n}\n\nexport default MultipartUploader;","let _Symbol$for;\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nimport BasePlugin from '@uppy/core/lib/BasePlugin.js';\nimport { Socket, Provider, RequestClient } from '@uppy/companion-client';\nimport EventTracker from '@uppy/utils/lib/EventTracker';\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress';\nimport getSocketHost from '@uppy/utils/lib/getSocketHost';\nimport { RateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue';\nimport { createAbortError } from '@uppy/utils/lib/AbortController';\nconst packageJson = {\n  \"version\": \"3.1.3\"\n};\nimport MultipartUploader from './MultipartUploader.js';\n\nfunction assertServerError(res) {\n  if (res && res.error) {\n    const error = new Error(res.message);\n    Object.assign(error, res.error);\n    throw error;\n  }\n\n  return res;\n}\n\nfunction throwIfAborted(signal) {\n  if (signal != null && signal.aborted) {\n    throw createAbortError('The operation was aborted', {\n      cause: signal.reason\n    });\n  }\n}\n\nvar _abortMultipartUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortMultipartUpload\");\n\nvar _cache = /*#__PURE__*/_classPrivateFieldLooseKey(\"cache\");\n\nvar _createMultipartUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"createMultipartUpload\");\n\nvar _fetchSignature = /*#__PURE__*/_classPrivateFieldLooseKey(\"fetchSignature\");\n\nvar _listParts = /*#__PURE__*/_classPrivateFieldLooseKey(\"listParts\");\n\nvar _previousRetryDelay = /*#__PURE__*/_classPrivateFieldLooseKey(\"previousRetryDelay\");\n\nvar _requests = /*#__PURE__*/_classPrivateFieldLooseKey(\"requests\");\n\nvar _retryDelayIterator = /*#__PURE__*/_classPrivateFieldLooseKey(\"retryDelayIterator\");\n\nvar _sendCompletionRequest = /*#__PURE__*/_classPrivateFieldLooseKey(\"sendCompletionRequest\");\n\nvar _setS3MultipartState = /*#__PURE__*/_classPrivateFieldLooseKey(\"setS3MultipartState\");\n\nvar _uploadPartBytes = /*#__PURE__*/_classPrivateFieldLooseKey(\"uploadPartBytes\");\n\nvar _shouldRetry = /*#__PURE__*/_classPrivateFieldLooseKey(\"shouldRetry\");\n\nclass HTTPCommunicationQueue {\n  constructor(_requests2, options, setS3MultipartState) {\n    Object.defineProperty(this, _shouldRetry, {\n      value: _shouldRetry2\n    });\n    Object.defineProperty(this, _abortMultipartUpload, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _cache, {\n      writable: true,\n      value: new WeakMap()\n    });\n    Object.defineProperty(this, _createMultipartUpload, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _fetchSignature, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _listParts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _previousRetryDelay, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _requests, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _retryDelayIterator, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _sendCompletionRequest, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _setS3MultipartState, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _uploadPartBytes, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _requests)[_requests] = _requests2;\n    _classPrivateFieldLooseBase(this, _setS3MultipartState)[_setS3MultipartState] = setS3MultipartState;\n    this.setOptions(options);\n  }\n\n  setOptions(options) {\n    const requests = _classPrivateFieldLooseBase(this, _requests)[_requests];\n\n    if ('abortMultipartUpload' in options) {\n      _classPrivateFieldLooseBase(this, _abortMultipartUpload)[_abortMultipartUpload] = requests.wrapPromiseFunction(options.abortMultipartUpload);\n    }\n\n    if ('createMultipartUpload' in options) {\n      _classPrivateFieldLooseBase(this, _createMultipartUpload)[_createMultipartUpload] = requests.wrapPromiseFunction(options.createMultipartUpload, {\n        priority: -1\n      });\n    }\n\n    if ('signPart' in options) {\n      _classPrivateFieldLooseBase(this, _fetchSignature)[_fetchSignature] = requests.wrapPromiseFunction(options.signPart);\n    }\n\n    if ('listParts' in options) {\n      _classPrivateFieldLooseBase(this, _listParts)[_listParts] = requests.wrapPromiseFunction(options.listParts);\n    }\n\n    if ('completeMultipartUpload' in options) {\n      _classPrivateFieldLooseBase(this, _sendCompletionRequest)[_sendCompletionRequest] = requests.wrapPromiseFunction(options.completeMultipartUpload);\n    }\n\n    if ('retryDelays' in options) {\n      var _options$retryDelays;\n\n      _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator] = (_options$retryDelays = options.retryDelays) == null ? void 0 : _options$retryDelays.values();\n    }\n\n    if ('uploadPartBytes' in options) {\n      _classPrivateFieldLooseBase(this, _uploadPartBytes)[_uploadPartBytes] = requests.wrapPromiseFunction(options.uploadPartBytes, {\n        priority: Infinity\n      });\n    }\n  }\n\n  async getUploadId(file, signal) {\n    const cachedResult = _classPrivateFieldLooseBase(this, _cache)[_cache].get(file.data);\n\n    if (cachedResult != null) {\n      return cachedResult;\n    }\n\n    const promise = _classPrivateFieldLooseBase(this, _createMultipartUpload)[_createMultipartUpload](file, signal);\n\n    const abortPromise = () => {\n      promise.abort(signal.reason);\n\n      _classPrivateFieldLooseBase(this, _cache)[_cache].delete(file.data);\n    };\n\n    signal.addEventListener('abort', abortPromise, {\n      once: true\n    });\n\n    _classPrivateFieldLooseBase(this, _cache)[_cache].set(file.data, promise);\n\n    promise.then(async result => {\n      signal.removeEventListener('abort', abortPromise);\n\n      _classPrivateFieldLooseBase(this, _setS3MultipartState)[_setS3MultipartState](file, result);\n\n      _classPrivateFieldLooseBase(this, _cache)[_cache].set(file.data, result);\n    }, () => {\n      signal.removeEventListener('abort', abortPromise);\n    });\n    return promise;\n  }\n\n  async abortFileUpload(file) {\n    const result = _classPrivateFieldLooseBase(this, _cache)[_cache].get(file.data);\n\n    if (result != null) {\n      // If the createMultipartUpload request never was made, we don't\n      // need to send the abortMultipartUpload request.\n      await _classPrivateFieldLooseBase(this, _abortMultipartUpload)[_abortMultipartUpload](file, await result);\n    }\n  }\n\n  async uploadFile(file, chunks, signal) {\n    throwIfAborted(signal);\n    const {\n      uploadId,\n      key\n    } = await this.getUploadId(file, signal);\n    throwIfAborted(signal);\n    const parts = await Promise.all(chunks.map((chunk, i) => this.uploadChunk(file, i + 1, chunk, signal)));\n    throwIfAborted(signal);\n    return _classPrivateFieldLooseBase(this, _sendCompletionRequest)[_sendCompletionRequest](file, {\n      key,\n      uploadId,\n      parts,\n      signal\n    }).abortOn(signal);\n  }\n\n  async resumeUploadFile(file, chunks, signal) {\n    throwIfAborted(signal);\n    const {\n      uploadId,\n      key\n    } = await this.getUploadId(file, signal);\n    throwIfAborted(signal);\n    const alreadyUploadedParts = await _classPrivateFieldLooseBase(this, _listParts)[_listParts](file, {\n      uploadId,\n      key,\n      signal\n    }).abortOn(signal);\n    throwIfAborted(signal);\n    const parts = await Promise.all(chunks.map((chunk, i) => {\n      const partNumber = i + 1;\n      const alreadyUploadedInfo = alreadyUploadedParts.find(_ref => {\n        let {\n          PartNumber\n        } = _ref;\n        return PartNumber === partNumber;\n      });\n      return alreadyUploadedInfo == null ? this.uploadChunk(file, partNumber, chunk, signal) : {\n        PartNumber: partNumber,\n        ETag: alreadyUploadedInfo.ETag\n      };\n    }));\n    throwIfAborted(signal);\n    return _classPrivateFieldLooseBase(this, _sendCompletionRequest)[_sendCompletionRequest](file, {\n      key,\n      uploadId,\n      parts,\n      signal\n    }).abortOn(signal);\n  }\n\n  async uploadChunk(file, partNumber, body, signal) {\n    throwIfAborted(signal);\n    const {\n      uploadId,\n      key\n    } = await this.getUploadId(file, signal);\n    throwIfAborted(signal);\n\n    for (;;) {\n      const signature = await _classPrivateFieldLooseBase(this, _fetchSignature)[_fetchSignature](file, {\n        uploadId,\n        key,\n        partNumber,\n        body,\n        signal\n      }).abortOn(signal);\n      throwIfAborted(signal);\n\n      try {\n        return {\n          PartNumber: partNumber,\n          ...(await _classPrivateFieldLooseBase(this, _uploadPartBytes)[_uploadPartBytes](signature, body, signal).abortOn(signal))\n        };\n      } catch (err) {\n        if (!(await _classPrivateFieldLooseBase(this, _shouldRetry)[_shouldRetry](err))) throw err;\n      }\n    }\n  }\n\n}\n\nasync function _shouldRetry2(err) {\n  var _err$source;\n\n  const requests = _classPrivateFieldLooseBase(this, _requests)[_requests];\n\n  const status = err == null ? void 0 : (_err$source = err.source) == null ? void 0 : _err$source.status; // TODO: this retry logic is taken out of Tus. We should have a centralized place for retrying,\n  // perhaps the rate limited queue, and dedupe all plugins with that.\n\n  if (status == null) {\n    return false;\n  }\n\n  if (status === 403 && err.message === 'Request has expired') {\n    if (!requests.isPaused) {\n      // We don't want to exhaust the retryDelayIterator as long as there are\n      // more than one request in parallel, to give slower connection a chance\n      // to catch up with the expiry set in Companion.\n      if (requests.limit === 1 || _classPrivateFieldLooseBase(this, _previousRetryDelay)[_previousRetryDelay] == null) {\n        var _classPrivateFieldLoo;\n\n        const next = (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator]) == null ? void 0 : _classPrivateFieldLoo.next();\n\n        if (next == null || next.done) {\n          return false;\n        } // If there are more than 1 request done in parallel, the RLQ limit is\n        // decreased and the failed request is requeued after waiting for a bit.\n        // If there is only one request in parallel, the limit can't be\n        // decreased, so we iterate over `retryDelayIterator` as we do for\n        // other failures.\n        // `#previousRetryDelay` caches the value so we can re-use it next time.\n\n\n        _classPrivateFieldLooseBase(this, _previousRetryDelay)[_previousRetryDelay] = next.value;\n      } // No need to stop the other requests, we just want to lower the limit.\n\n\n      requests.rateLimit(0);\n      await new Promise(resolve => setTimeout(resolve, _classPrivateFieldLooseBase(this, _previousRetryDelay)[_previousRetryDelay]));\n    }\n  } else if (status === 429) {\n    // HTTP 429 Too Many Requests => to avoid the whole download to fail, pause all requests.\n    if (!requests.isPaused) {\n      var _classPrivateFieldLoo2;\n\n      const next = (_classPrivateFieldLoo2 = _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator]) == null ? void 0 : _classPrivateFieldLoo2.next();\n\n      if (next == null || next.done) {\n        return false;\n      }\n\n      requests.rateLimit(next.value);\n    }\n  } else if (status > 400 && status < 500 && status !== 409) {\n    // HTTP 4xx, the server won't send anything, it's doesn't make sense to retry\n    return false;\n  } else if (typeof navigator !== 'undefined' && navigator.onLine === false) {\n    // The navigator is offline, let's wait for it to come back online.\n    if (!requests.isPaused) {\n      requests.pause();\n      window.addEventListener('online', () => {\n        requests.resume();\n      }, {\n        once: true\n      });\n    }\n  } else {\n    var _classPrivateFieldLoo3;\n\n    // Other error code means the request can be retried later.\n    const next = (_classPrivateFieldLoo3 = _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator]) == null ? void 0 : _classPrivateFieldLoo3.next();\n\n    if (next == null || next.done) {\n      return false;\n    }\n\n    await new Promise(resolve => setTimeout(resolve, next.value));\n  }\n\n  return true;\n}\n\nvar _queueRequestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"queueRequestSocketToken\");\n\nvar _companionCommunicationQueue = /*#__PURE__*/_classPrivateFieldLooseKey(\"companionCommunicationQueue\");\n\nvar _client = /*#__PURE__*/_classPrivateFieldLooseKey(\"client\");\n\nvar _setS3MultipartState2 = /*#__PURE__*/_classPrivateFieldLooseKey(\"setS3MultipartState\");\n\nvar _requestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"requestSocketToken\");\n\nvar _setCompanionHeaders = /*#__PURE__*/_classPrivateFieldLooseKey(\"setCompanionHeaders\");\n\n_Symbol$for = Symbol.for('uppy test: getClient');\nexport default class AwsS3Multipart extends BasePlugin {\n  constructor(uppy, _opts) {\n    var _this$opts$rateLimite;\n\n    super(uppy, _opts);\n    Object.defineProperty(this, _queueRequestSocketToken, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _companionCommunicationQueue, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _client, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _setS3MultipartState2, {\n      writable: true,\n      value: (file, _ref2) => {\n        let {\n          key,\n          uploadId\n        } = _ref2;\n        const cFile = this.uppy.getFile(file.id);\n        this.uppy.setFileState(file.id, {\n          s3Multipart: { ...cFile.s3Multipart,\n            key,\n            uploadId\n          }\n        });\n      }\n    });\n    Object.defineProperty(this, _requestSocketToken, {\n      writable: true,\n      value: async file => {\n        const Client = file.remote.providerOptions.provider ? Provider : RequestClient;\n        const client = new Client(this.uppy, file.remote.providerOptions);\n        const opts = { ...this.opts\n        };\n\n        if (file.tus) {\n          // Install file-specific upload overrides.\n          Object.assign(opts, file.tus);\n        }\n\n        if (file.remote.url == null) {\n          throw new Error('Cannot connect to an undefined URL');\n        }\n\n        const res = await client.post(file.remote.url, { ...file.remote.body,\n          protocol: 's3-multipart',\n          size: file.data.size,\n          metadata: file.meta\n        });\n        return res.token;\n      }\n    });\n    Object.defineProperty(this, _setCompanionHeaders, {\n      writable: true,\n      value: () => {\n        _classPrivateFieldLooseBase(this, _client)[_client].setCompanionHeaders(this.opts.companionHeaders);\n      }\n    });\n    this.type = 'uploader';\n    this.id = this.opts.id || 'AwsS3Multipart';\n    this.title = 'AWS S3 Multipart';\n    _classPrivateFieldLooseBase(this, _client)[_client] = new RequestClient(uppy, _opts);\n    const defaultOptions = {\n      // TODO: this is currently opt-in for backward compat, switch to opt-out in the next major\n      allowedMetaFields: null,\n      limit: 6,\n      retryDelays: [0, 1000, 3000, 5000],\n      createMultipartUpload: this.createMultipartUpload.bind(this),\n      listParts: this.listParts.bind(this),\n      abortMultipartUpload: this.abortMultipartUpload.bind(this),\n      completeMultipartUpload: this.completeMultipartUpload.bind(this),\n      signPart: this.signPart.bind(this),\n      uploadPartBytes: AwsS3Multipart.uploadPartBytes,\n      companionHeaders: {}\n    };\n    this.opts = { ...defaultOptions,\n      ..._opts\n    };\n\n    if ((_opts == null ? void 0 : _opts.prepareUploadParts) != null && _opts.signPart == null) {\n      this.opts.signPart = async (file, _ref3) => {\n        let {\n          uploadId,\n          key,\n          partNumber,\n          body,\n          signal\n        } = _ref3;\n        const {\n          presignedUrls,\n          headers\n        } = await _opts.prepareUploadParts(file, {\n          uploadId,\n          key,\n          parts: [{\n            number: partNumber,\n            chunk: body\n          }],\n          signal\n        });\n        return {\n          url: presignedUrls == null ? void 0 : presignedUrls[partNumber],\n          headers: headers == null ? void 0 : headers[partNumber]\n        };\n      };\n    }\n\n    this.upload = this.upload.bind(this);\n    /**\n     * Simultaneous upload limiting is shared across all uploads with this plugin.\n     *\n     * @type {RateLimitedQueue}\n     */\n\n    this.requests = (_this$opts$rateLimite = this.opts.rateLimitedQueue) != null ? _this$opts$rateLimite : new RateLimitedQueue(this.opts.limit);\n    _classPrivateFieldLooseBase(this, _companionCommunicationQueue)[_companionCommunicationQueue] = new HTTPCommunicationQueue(this.requests, this.opts, _classPrivateFieldLooseBase(this, _setS3MultipartState2)[_setS3MultipartState2]);\n    this.uploaders = Object.create(null);\n    this.uploaderEvents = Object.create(null);\n    this.uploaderSockets = Object.create(null);\n    _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken] = this.requests.wrapPromiseFunction(_classPrivateFieldLooseBase(this, _requestSocketToken)[_requestSocketToken], {\n      priority: -1\n    });\n  }\n\n  [_Symbol$for]() {\n    return _classPrivateFieldLooseBase(this, _client)[_client];\n  }\n\n  setOptions(newOptions) {\n    _classPrivateFieldLooseBase(this, _companionCommunicationQueue)[_companionCommunicationQueue].setOptions(newOptions);\n\n    return super.setOptions(newOptions);\n  }\n  /**\n   * Clean up all references for a file's upload: the MultipartUploader instance,\n   * any events related to the file, and the Companion WebSocket connection.\n   *\n   * Set `opts.abort` to tell S3 that the multipart upload is cancelled and must be removed.\n   * This should be done when the user cancels the upload, not when the upload is completed or errored.\n   */\n\n\n  resetUploaderReferences(fileID, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (this.uploaders[fileID]) {\n      this.uploaders[fileID].abort({\n        really: opts.abort || false\n      });\n      this.uploaders[fileID] = null;\n    }\n\n    if (this.uploaderEvents[fileID]) {\n      this.uploaderEvents[fileID].remove();\n      this.uploaderEvents[fileID] = null;\n    }\n\n    if (this.uploaderSockets[fileID]) {\n      this.uploaderSockets[fileID].close();\n      this.uploaderSockets[fileID] = null;\n    }\n  } // TODO: make this a private method in the next major\n\n\n  assertHost(method) {\n    if (!this.opts.companionUrl) {\n      throw new Error(`Expected a \\`companionUrl\\` option containing a Companion address, or if you are not using Companion, a custom \\`${method}\\` implementation.`);\n    }\n  }\n\n  createMultipartUpload(file, signal) {\n    var _this$opts$allowedMet;\n\n    this.assertHost('createMultipartUpload');\n    throwIfAborted(signal);\n    const metadata = file.meta ? Object.fromEntries(((_this$opts$allowedMet = this.opts.allowedMetaFields) != null ? _this$opts$allowedMet : Object.keys(file.meta)).filter(key => file.meta[key] != null).map(key => [key, String(file.meta[key])])) : {};\n    return _classPrivateFieldLooseBase(this, _client)[_client].post('s3/multipart', {\n      filename: file.name,\n      type: file.type,\n      metadata\n    }, {\n      signal\n    }).then(assertServerError);\n  }\n\n  listParts(file, _ref4, signal) {\n    let {\n      key,\n      uploadId\n    } = _ref4;\n    this.assertHost('listParts');\n    throwIfAborted(signal);\n    const filename = encodeURIComponent(key);\n    return _classPrivateFieldLooseBase(this, _client)[_client].get(`s3/multipart/${uploadId}?key=${filename}`, {\n      signal\n    }).then(assertServerError);\n  }\n\n  completeMultipartUpload(file, _ref5, signal) {\n    let {\n      key,\n      uploadId,\n      parts\n    } = _ref5;\n    this.assertHost('completeMultipartUpload');\n    throwIfAborted(signal);\n    const filename = encodeURIComponent(key);\n    const uploadIdEnc = encodeURIComponent(uploadId);\n    return _classPrivateFieldLooseBase(this, _client)[_client].post(`s3/multipart/${uploadIdEnc}/complete?key=${filename}`, {\n      parts\n    }, {\n      signal\n    }).then(assertServerError);\n  }\n\n  signPart(file, _ref6) {\n    let {\n      uploadId,\n      key,\n      partNumber,\n      signal\n    } = _ref6;\n    this.assertHost('signPart');\n    throwIfAborted(signal);\n\n    if (uploadId == null || key == null || partNumber == null) {\n      throw new Error('Cannot sign without a key, an uploadId, and a partNumber');\n    }\n\n    const filename = encodeURIComponent(key);\n    return _classPrivateFieldLooseBase(this, _client)[_client].get(`s3/multipart/${uploadId}/${partNumber}?key=${filename}`, {\n      signal\n    }).then(assertServerError);\n  }\n\n  abortMultipartUpload(file, _ref7, signal) {\n    let {\n      key,\n      uploadId\n    } = _ref7;\n    this.assertHost('abortMultipartUpload');\n    const filename = encodeURIComponent(key);\n    const uploadIdEnc = encodeURIComponent(uploadId);\n    return _classPrivateFieldLooseBase(this, _client)[_client].delete(`s3/multipart/${uploadIdEnc}?key=${filename}`, undefined, {\n      signal\n    }).then(assertServerError);\n  }\n\n  static async uploadPartBytes(_ref8, body, signal) {\n    let {\n      url,\n      expires,\n      headers\n    } = _ref8;\n    throwIfAborted(signal);\n\n    if (url == null) {\n      throw new Error('Cannot upload to an undefined URL');\n    }\n\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('PUT', url, true);\n\n      if (headers) {\n        Object.keys(headers).forEach(key => {\n          xhr.setRequestHeader(key, headers[key]);\n        });\n      }\n\n      xhr.responseType = 'text';\n\n      if (typeof expires === 'number') {\n        xhr.timeout = expires * 1000;\n      }\n\n      function onabort() {\n        xhr.abort();\n      }\n\n      function cleanup() {\n        signal.removeEventListener('abort', onabort);\n      }\n\n      signal.addEventListener('abort', onabort);\n      xhr.upload.addEventListener('progress', body.onProgress);\n      xhr.addEventListener('abort', () => {\n        cleanup();\n        reject(createAbortError());\n      });\n      xhr.addEventListener('timeout', () => {\n        cleanup();\n        const error = new Error('Request has expired');\n        error.source = {\n          status: 403\n        };\n        reject(error);\n      });\n      xhr.addEventListener('load', ev => {\n        cleanup();\n\n        if (ev.target.status === 403 && ev.target.responseText.includes('<Message>Request has expired</Message>')) {\n          const error = new Error('Request has expired');\n          error.source = ev.target;\n          reject(error);\n          return;\n        }\n\n        if (ev.target.status < 200 || ev.target.status >= 300) {\n          const error = new Error('Non 2xx');\n          error.source = ev.target;\n          reject(error);\n          return;\n        }\n\n        body.onProgress == null ? void 0 : body.onProgress(body.size); // NOTE This must be allowed by CORS.\n\n        const etag = ev.target.getResponseHeader('ETag');\n\n        if (etag === null) {\n          reject(new Error('AwsS3/Multipart: Could not read the ETag header. This likely means CORS is not configured correctly on the S3 Bucket. See https://uppy.io/docs/aws-s3-multipart#S3-Bucket-Configuration for instructions.'));\n          return;\n        }\n\n        body.onComplete == null ? void 0 : body.onComplete(etag);\n        resolve({\n          ETag: etag\n        });\n      });\n      xhr.addEventListener('error', ev => {\n        cleanup();\n        const error = new Error('Unknown error');\n        error.source = ev.target;\n        reject(error);\n      });\n      xhr.send(body);\n    });\n  }\n\n  uploadFile(file) {\n    var _this = this;\n\n    return new Promise((resolve, reject) => {\n      const onProgress = (bytesUploaded, bytesTotal) => {\n        this.uppy.emit('upload-progress', file, {\n          uploader: this,\n          bytesUploaded,\n          bytesTotal\n        });\n      };\n\n      const onError = err => {\n        this.uppy.log(err);\n        this.uppy.emit('upload-error', file, err);\n        this.resetUploaderReferences(file.id);\n        reject(err);\n      };\n\n      const onSuccess = result => {\n        const uploadObject = upload; // eslint-disable-line no-use-before-define\n\n        const uploadResp = {\n          body: { ...result\n          },\n          uploadURL: result.location\n        };\n        this.resetUploaderReferences(file.id);\n        const cFile = this.uppy.getFile(file.id);\n        this.uppy.emit('upload-success', cFile || file, uploadResp);\n\n        if (result.location) {\n          this.uppy.log(`Download ${file.name} from ${result.location}`);\n        }\n\n        resolve(uploadObject);\n      };\n\n      const onPartComplete = part => {\n        const cFile = this.uppy.getFile(file.id);\n\n        if (!cFile) {\n          return;\n        }\n\n        this.uppy.emit('s3-multipart:part-uploaded', cFile, part);\n      };\n\n      const upload = new MultipartUploader(file.data, {\n        // .bind to pass the file object to each handler.\n        companionComm: _classPrivateFieldLooseBase(this, _companionCommunicationQueue)[_companionCommunicationQueue],\n        log: function () {\n          return _this.uppy.log(...arguments);\n        },\n        getChunkSize: this.opts.getChunkSize ? this.opts.getChunkSize.bind(this) : null,\n        onProgress,\n        onError,\n        onSuccess,\n        onPartComplete,\n        file,\n        ...file.s3Multipart\n      });\n      this.uploaders[file.id] = upload;\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy);\n      this.onFileRemove(file.id, removed => {\n        upload.abort();\n        this.resetUploaderReferences(file.id, {\n          abort: true\n        });\n        resolve(`upload ${removed.id} was removed`);\n      });\n      this.onCancelAll(file.id, function (_temp) {\n        let {\n          reason\n        } = _temp === void 0 ? {} : _temp;\n\n        if (reason === 'user') {\n          upload.abort();\n\n          _this.resetUploaderReferences(file.id, {\n            abort: true\n          });\n        }\n\n        resolve(`upload ${file.id} was canceled`);\n      });\n      this.onFilePause(file.id, isPaused => {\n        if (isPaused) {\n          upload.pause();\n        } else {\n          upload.start();\n        }\n      });\n      this.onPauseAll(file.id, () => {\n        upload.pause();\n      });\n      this.onResumeAll(file.id, () => {\n        upload.start();\n      }); // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n\n      if (!file.progress.uploadStarted || !file.isRestored) {\n        upload.start();\n        this.uppy.emit('upload-started', file);\n      }\n    });\n  }\n\n  // NOTE! Keep this duplicated code in sync with other plugins\n  // TODO we should probably abstract this into a common function\n  async uploadRemote(file) {\n    this.resetUploaderReferences(file.id); // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n\n    if (!file.progress.uploadStarted || !file.isRestored) {\n      this.uppy.emit('upload-started', file);\n    }\n\n    try {\n      if (file.serverToken) {\n        return await this.connectToServerSocket(file);\n      }\n\n      const serverToken = await _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken](file);\n      if (!this.uppy.getState().files[file.id]) return undefined;\n      this.uppy.setFileState(file.id, {\n        serverToken\n      });\n      return await this.connectToServerSocket(this.uppy.getFile(file.id));\n    } catch (err) {\n      this.uppy.setFileState(file.id, {\n        serverToken: undefined\n      });\n      this.uppy.emit('upload-error', file, err);\n      throw err;\n    }\n  }\n\n  async connectToServerSocket(file) {\n    var _this2 = this;\n\n    return new Promise((resolve, reject) => {\n      let queuedRequest;\n      const token = file.serverToken;\n      const host = getSocketHost(file.remote.companionUrl);\n      const socket = new Socket({\n        target: `${host}/api/${token}`,\n        autoOpen: false\n      });\n      this.uploaderSockets[file.id] = socket;\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy);\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort();\n        socket.send('cancel', {});\n        this.resetUploaderReferences(file.id, {\n          abort: true\n        });\n        resolve(`upload ${file.id} was removed`);\n      });\n      this.onFilePause(file.id, isPaused => {\n        if (isPaused) {\n          // Remove this file from the queue so another file can start in its place.\n          queuedRequest.abort();\n          socket.send('pause', {});\n        } else {\n          // Resuming an upload should be queued, else you could pause and then\n          // resume a queued upload to make it skip the queue.\n          queuedRequest.abort();\n          queuedRequest = this.requests.run(() => {\n            socket.open();\n            socket.send('resume', {});\n            return () => socket.close();\n          });\n        }\n      });\n      this.onPauseAll(file.id, () => {\n        queuedRequest.abort();\n        socket.send('pause', {});\n      });\n      this.onCancelAll(file.id, function (_temp2) {\n        let {\n          reason\n        } = _temp2 === void 0 ? {} : _temp2;\n\n        if (reason === 'user') {\n          queuedRequest.abort();\n          socket.send('cancel', {});\n\n          _this2.resetUploaderReferences(file.id);\n        }\n\n        resolve(`upload ${file.id} was canceled`);\n      });\n      this.onResumeAll(file.id, () => {\n        queuedRequest.abort();\n\n        if (file.error) {\n          socket.send('pause', {});\n        }\n\n        queuedRequest = this.requests.run(() => {\n          socket.open();\n          socket.send('resume', {});\n          return () => socket.close();\n        });\n      });\n      this.onRetry(file.id, () => {\n        // Only do the retry if the upload is actually in progress;\n        // else we could try to send these messages when the upload is still queued.\n        // We may need a better check for this since the socket may also be closed\n        // for other reasons, like network failures.\n        if (socket.isOpen) {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        }\n      });\n      this.onRetryAll(file.id, () => {\n        if (socket.isOpen) {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        }\n      });\n      socket.on('progress', progressData => emitSocketProgress(this, progressData, file));\n      socket.on('error', errData => {\n        this.uppy.emit('upload-error', file, new Error(errData.error));\n        this.resetUploaderReferences(file.id);\n        queuedRequest.done();\n        reject(new Error(errData.error));\n      });\n      socket.on('success', data => {\n        const uploadResp = {\n          uploadURL: data.url\n        };\n        this.uppy.emit('upload-success', file, uploadResp);\n        this.resetUploaderReferences(file.id);\n        queuedRequest.done();\n        resolve();\n      });\n      queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket.send('pause', {});\n        } else {\n          socket.open();\n        }\n\n        return () => socket.close();\n      });\n    });\n  }\n\n  async upload(fileIDs) {\n    if (fileIDs.length === 0) return undefined;\n    const promises = fileIDs.map(id => {\n      const file = this.uppy.getFile(id);\n\n      if (file.isRemote) {\n        return this.uploadRemote(file);\n      }\n\n      return this.uploadFile(file);\n    });\n    return Promise.all(promises);\n  }\n\n  onFileRemove(fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', file => {\n      if (fileID === file.id) cb(file.id);\n    });\n  }\n\n  onFilePause(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        cb(isPaused);\n      }\n    });\n  }\n\n  onRetry(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', targetFileID => {\n      if (fileID === targetFileID) {\n        cb();\n      }\n    });\n  }\n\n  onRetryAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  onPauseAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('pause-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  onCancelAll(fileID, eventHandler) {\n    var _this3 = this;\n\n    this.uploaderEvents[fileID].on('cancel-all', function () {\n      if (!_this3.uppy.getFile(fileID)) return;\n      eventHandler(...arguments);\n    });\n  }\n\n  onResumeAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('resume-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  install() {\n    const {\n      capabilities\n    } = this.uppy.getState();\n    this.uppy.setState({\n      capabilities: { ...capabilities,\n        resumableUploads: true\n      }\n    });\n    this.uppy.addPreProcessor(_classPrivateFieldLooseBase(this, _setCompanionHeaders)[_setCompanionHeaders]);\n    this.uppy.addUploader(this.upload);\n  }\n\n  uninstall() {\n    const {\n      capabilities\n    } = this.uppy.getState();\n    this.uppy.setState({\n      capabilities: { ...capabilities,\n        resumableUploads: false\n      }\n    });\n    this.uppy.removePreProcessor(_classPrivateFieldLooseBase(this, _setCompanionHeaders)[_setCompanionHeaders]);\n    this.uppy.removeUploader(this.upload);\n  }\n\n}\nAwsS3Multipart.VERSION = packageJson.version;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;"],"sourceRoot":""}