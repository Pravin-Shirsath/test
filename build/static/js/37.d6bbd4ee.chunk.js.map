{"version":3,"sources":["Routes/dashboard/DownloadFile/index.js","Routes/dashboard/ReuseComponent/CustomBreadcrumbs.js","Components/DeleteConfirmationDialog/DeleteConfirmationDialog.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","../node_modules/reactstrap/es/Col.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","Routes/dashboard/ReuseComponent/EditDataset.js"],"names":["ViewProject","props","history","useHistory","location","useState","searchText","setSearchText","loading","deleteConfirmationDialog","useRef","selected","datasets","filteredDatasets","setFilteredDatasets","activePage","totalPageCount","setTotalPageCount","datasetFiles","setDatasetFiles","filteredDatasetFiles","setFilteredDatasetFiles","useEffect","localStorage","getItem","getDatasetFiles","authToken","JSON","parse","datasetId","ViewFiles","then","res","console","log","status","data","results","updatedResults","map","result","selectedFile","parseInt","count","catch","error","response","NotificationManager","clear","push","className","name","content","currentPage","state","breadcrumbData","title","message","onConfirm","accessToken","DeleteDataset","id","project_id","current","close","success","err","Delete_Datset","ref","style","justifyContent","type","placeholder","border","borderBottom","value","onChange","e","target","variant","color","cursor","onClick","projectId","getSearchProjectDatasets","length","itemsCountPerPage","pageRangeDisplayed","itemClass","linkClass","hideFirstLastPages","totalItemsCount","CustomBreadcrumbs","HandleNavigate","item","index","myarray","i","url","undefined","DeleteConfirmationDialog","open","this","setState","onClose","maxWidth","autoFocus","Component","DialogActions","React","_props$disableSpacing","disableSpacing","classes","other","_objectWithoutProperties","_extends","clsx","root","spacing","withStyles","display","alignItems","padding","flex","marginLeft","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","columnProp","isObject","_classNames","colSizeInterfix","colClass","mapToCssModules","classNames","_colClass","createElement","DialogTitle","children","_props$disableTypogra","disableTypography","Typography","component","margin","DialogContentText","marginBottom","EditDataset","Modalopen","reloadlist","setOpen","datasetName","setDatasetName","comment","setComment","dataset_name","marginTop","row","for","height","UpadatDataset"],"mappings":"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","file":"static/js/37.d6bbd4ee.chunk.js","sourcesContent":["/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Button from '@material-ui/core/Button'\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Col\n} from 'reactstrap'\nimport Pagination from \"react-js-pagination\";\n\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications'\n// delete confirmation dialog\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport {\n  DeleteDataset,\n  getSearchProjectDatasets,\n  getViewProjectDatasets\n} from '../../../Api/'\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport EditIcon from '@mui/icons-material/Edit';\nimport EditDataset from '../ReuseComponent/EditDataset';\nimport { getFormatDate2 } from 'Constants/DateFormator';\nimport CustomBreadcrumbs from \"../ReuseComponent/CustomBreadcrumbs\";\n\nimport {\n    ViewFiles\n  } from '../../../Api/'\n\nexport default function ViewProject(props) {\n  const history = useHistory();\n const {location}=props\n \n  //  const [users, setUsers] = useState() // use when data is coming from api\n  const [users, setUsers] = useState([])\n  //  const [filteredUsers, setFilteredUsers] = useState() // use when the data is coming fom api\n  const [filteredUsers, setFilteredUsers] = useState([])\n  const [searchText, setSearchText] = useState('');\n  \n\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n \n  const [selectedUser, setSelectedUser] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [addNewUserModal, setAddNewUserModal] = useState(false)\n  const [updateNewUserModal, setupdateNewUserModal] = useState(false)\n  const [deleteUserModal, setdeleteUserModal] = useState(false)\n\n  const deleteConfirmationDialog = useRef()\n  const [selected, setSelectedItem] = useState({})\n\n  const [editUser, setEditUser] = useState(null)\n  const [selectedUsers, setSelectedUsers] = useState(0)\n  const [viewDetails, setViewDetails] = useState()\nconst [openEditDataset,setOpenEditDataset] = useState(false)\n\n  const [datasets, setDatasets] = useState([]);\n  const [filteredDatasets,setFilteredDatasets] = useState([])\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState(0);\n  const [datasetFiles, setDatasetFiles] = useState([]);\n  const [filteredDatasetFiles, setFilteredDatasetFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    // conditional rendring\n    // if(isLoggedInBool !== \"true\"){\n    //   history.push(\"/login\")\n    //     localStorage.clear();\n    // } else {\n    // getCustomersListData();\n    getDatasetFiles()\n    // }\n  }, [])\n\n  const getDatasetFiles = () => {\n    const authToken = JSON.parse(localStorage.getItem(\"token\"));\n    const datasetId = localStorage?.getItem(\"datasetId\")\n    // const datasetId = 146\n\n    if(authToken !== null){\n        ViewFiles(authToken, datasetId, 1)\n        .then(res=> {\n            console.log(res, \"resss in viewDataset file\")\n            if(res?.status == 200){\n                console.log(res?.data?.results, \"dataaa of filesss in view datasetfile\")\n                const results = res?.data?.results;\n                const updatedResults = results.map(result=> {\n                    return {...result, selectedFile: false}\n                })\n\n                setDatasetFiles(updatedResults)\n                setFilteredDatasetFiles(updatedResults)\n                setTotalPageCount(parseInt(res?.data?.count));\n            }else {\n                console.log('Response from View project Datasets lists api in view project:', res)\n            }\n        })\n        .catch((error)=>{\n            console.log(\"error in viewdataset:\",error)\n            const status = error?.response?.status\n            if(status == 401){\n              NotificationManager.error(\"Something went wrong !\");\n              localStorage.clear();\n              history.push(\"/login\")\n            } else if(status == 500){\n              NotificationManager.error(\"Temporary connectivity issues.\");\n            }\n        })\n    } else {\n      localStorage.clear();\n      history.push(\"/login\")\n    }\n}\n\n\n\n\n\n  const EditModal = (item) => {\n    setSelectedItem(item)\n  \n    setOpenEditDataset(true)\n  }\n\n  const DeletModalOpen = (item) => {\n    setSelectedItem(item)\n    deleteConfirmationDialog.current.open()\n  }\n\n  const Delete_Datset = () => {\n\n\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n     \n      DeleteDataset(accessToken, selected?.id,selected?.project_id)\n        .then((res) => {\n          if (res?.status === 200) {\n            deleteConfirmationDialog.current.close()\n\n            NotificationManager.success(\"Datset deleted successfully!\")\n            console.log('Response from dataset  :', res)\n\n          } else {\n\n\n            NotificationManager.error(\"Delete_Datset deleting process unsucess!\")\n          }\n        })\n        .catch((err) => {\n          console.log('Response from err dataset  :', err)\n          NotificationManager.error(\"Delete_Datset deleting process unsucess!\")\n        })\n    }\n  }\n\n\n\n\n\n  const handlePageChange = (pageNumber) => {\n    // console.log(\"pagination\", pageNumber)\n    // if (activePage !== pageNumber) {\n    //   const authToken = JSON.parse(localStorage.getItem('token'))\n    //   const projectId = localStorage?.getItem(\"projId\")\n\n    //   if (authToken !== null) {\n    //     getViewProjectDatasets(authToken, projectId, pageNumber)\n    //       .then((res) => {\n    //         if (res?.status === 200) {\n    //           setDatasets(res?.data?.results);\n    //           setFilteredDatasets(res?.data?.results);\n    //           setTotalPageCount(res?.data?.count);\n    //           console.log('Response from customerlist :', res)\n    //         } else {\n    //           // console.log('Response from customerlist:', res)\n    //         }\n    //       })\n    //       .catch((err) => {\n    //         // console.log('Response from customerlist:', err)\n    //       })\n    //   }\n    //   setActivePage(pageNumber)\n    // }\n  }\n\n\n  // Dataset View\n  const handleView = (dataset) => {\n    console.log(dataset?.id, \"selected dataset ID\")\n    localStorage.setItem(\"datasetId\", dataset?.id);\n    if(location?.state?.breadcrumbData){\n      let path = location?.state?.breadcrumbData[0]\n      if(path?.name == \"Dashboard\"){\n        const breadcrumbData = [\n          { name: 'Dashboard', url: '/app/dashboard/saas' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/viewDataset\",{breadcrumbData:breadcrumbData})\n      }else if(path?.name == \"Project\"){\n        const breadcrumbData = [\n          { name: 'Project', url: '/app/dashboard/project' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/viewDataset\",{breadcrumbData:breadcrumbData})\n      }\n    }\n  \n  }\n\n  // Dataset create\n  const HandleCreate=()=>{\n    if(location?.state?.breadcrumbData){\n      let path = location?.state?.breadcrumbData[0]\n      if(path?.name == \"Dashboard\"){\n        const breadcrumbData = [\n          { name: 'Dashboard', url: '/app/dashboard/saas' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/createDataset\",{breadcrumbData:breadcrumbData})\n      }else if(path?.name == \"Project\"){\n        const breadcrumbData = [\n          { name: 'Project', url: '/app/dashboard/project' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/createDataset\",{breadcrumbData:breadcrumbData})\n      }\n    }\n       \n  }\n\n  const getSearchedCustomerData = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'));\n    const projectId = localStorage?.getItem(\"projId\")\n    if (accessToken !== null) {\n       getSearchProjectDatasets(accessToken,projectId, searchText)\n        .then((res) => {\n          if (res?.status === 200 && res?.data?.results.length>0) {\n            setFilteredDatasets(res?.data?.results);\n            setSearchText('')\n            // console.log('Response from customerlist :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n            setFilteredDatasets(datasets);\n            setSearchText('');\n            NotificationManager.error(\"No dataset found!\")\n          }\n        })\n        .catch((err) => {\n          // console.log('Response from customerlist:', err)\n        })\n    }\n  }\n\n  console.log(\"history==view project \",history)\n  console.log(\"props \",props)\n  console.log(filteredDatasets, \"filteredd datasets\")\n  console.log(location, \"location in view project\")\n  console.log(props, \"proppsss in view project\")\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>Automaton | Task Completed</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      {/* <PageTitleBar\n        title={<IntlMessages id=\"sidebar.viewProject\" />}\n        match={props.match}\n      /> */}\n \n      <CustomBreadcrumbs    currentPage={\"Task Completed\"} data={location?.state?.breadcrumbData} />\n\n\n                <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n             message=\"This will delete your Dataset permanently.\"\n             onConfirm={() => Delete_Datset()}\n             ref={deleteConfirmationDialog} />\n      <RctCollapsibleCard>\n     \n        <div className=\"table-responsive\">\n          <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n            <div className='search-row'>\n              <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n              <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} \n               onClick={getSearchedCustomerData}\n              >Search</Button>\n            </div>\n\n            {/* <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} >Create Dataset</Button> */}\n\n          </div>\n\n          <table className=\"table table-middle table-hover mb-0\">\n            <thead>\n              <tr>\n                <th></th>\n                <th>Task</th>\n                <th>Created Date</th>\n                <th>Created By</th>\n                <th>Images</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n\n            {/****** mine filtered Table body, without ternary conditional value  *****/}\n            <tbody>\n              {/* {filteredDatasets &&\n                filteredDatasets.map((dataset, i, data) => {\n                  // let active = user?.is_active\n                  let created_Date = getFormatDate2((dataset?.date_created))\n                  return (\n\n                    <tr key={i}>\n                      <td></td>\n                      <td>Task-1</td>\n                      <td>Pending</td>\n                      <td>1</td>\n                      <td className=\"list-action d-flex \">Plaaannn</td>\n                      <td>27 March 2023</td>\n                    </tr>\n                  )\n                })\n              } */}\n\n                    <tr className='globalFontFamily'>\n                      <td></td>\n                      <td>Task-1</td>\n                      <td>25/03/2023</td>\n                      <td>Ram</td>\n                      <td>12</td>\n                      <td>Download</td>\n                    </tr>\n\n                    <tr className='globalFontFamily'>\n                      <td></td>\n                      <td>Task-2</td>\n                      <td>25/02/2023</td>\n                      <td>Geeta</td>\n                      <td>9</td>\n                      <td>Download</td>\n                    </tr>\n\n            </tbody>\n\n          </table>\n          {filteredDatasetFiles.length == 0 && <center style={{ color: \"black\" }}>Data not available </center>}\n          {\n            datasetFiles?.length > 0 &&\n            <div className='paginationDiv'> \n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={6}\n                pageRangeDisplayed={5}\n                onChange={(e) => handlePageChange(e)}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                hideFirstLastPages={true}\n                totalItemsCount={totalPageCount}\n              />\n            </div>\n          }\n        </div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n\n      {/* <EditDataset selected={selected} Modalopen={openEditDataset} close={()=>setOpenEditDataset(false)} reloadlist={getViewProjectData}/>       */}\n    </div>\n  )\n}\n","import React, { useEffect,useState } from 'react';\nimport { useHistory } from 'react-router';\nimport \"./CustomBreadcrumbs.css\"\n\nconst CustomBreadcrumbs = ({ currentPage, data =[] ,props}) => {\n\nconst [navData,setNavData]=useState(data)\n\n\nuseEffect(()=>{\n\n},[])\n\n  const history = useHistory();\n      console.log(data,\"daaata..\")\n  \n  const HandleNavigate = async (item,index)=>{\n    // const Data = [...navData]\n    let myarray=[]\n    // console.log(index,\"Data=\",Data)\n\n\n     for (let i = 0; i < index; i++) {\n       \n      myarray.push(data[i])\n     }\nconsole.log(myarray,\"myarray\")\n    \n    history.push(item.url,{breadcrumbData:myarray})\n  }\n\n  return (\n    <div className=\"page-title d-flex  align-items-center\">\n      {data != undefined  && data.length > 0 &&data.map((item, index) => (\n        <div key={index} className=\"page-title-wrap  d-flex  align-items-center mr-1 bread-titile-box\" style={{cursor:\"pointer\"}}>\n          \n        <i className=\"ti-angle-left text-dark  custombredcrum-icon\"></i> <span onClick={()=>HandleNavigate(item,index)} className=\"globalFontFamily custombredcrum-heding\">{item.name}</span>\n         \n        </div>\n      ))}\n      <div className=\"page-title-wrap   d-flex  align-items-center text-white m-0\"  style={{cursor:\"pointer\"}}><i className=\"ti-angle-left  text-white custombredcrum-icon\"></i><span className=\"globalFontFamily custombredcrum-heding\">{currentPage}</span></div>\n    </div>\n  );\n};\n\nexport default CustomBreadcrumbs;\n","/**\n * Delete Confirmation Dialog\n */\nimport React, { Component } from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button} from '@material-ui/core';\n\nclass DeleteConfirmationDialog extends Component {\n\n   state = {\n      open: false\n   }\n\n   // open dialog\n   open() {\n      this.setState({ open: true });\n   }\n\n   // close dialog\n   close() {\n      this.setState({ open: false });\n   }\n\n   render() {\n      const { title, message, onConfirm } = this.props;\n      return (\n         <Dialog\n            open={this.state.open}\n            onClose={() => this.close()}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth=\"false\"\n         >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n               <DialogContentText id=\"alert-dialog-description\">\n                  {message}\n               </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n               <Button onClick={onConfirm} className=\"btn-primary text-white\" autoFocus>\n                  Yes\n               </Button>\n               <Button onClick={() => this.close()} className=\"btn-danger text-white\">\n                  Cancel\n               </Button>\n            </DialogActions>\n         </Dialog>\n      );\n   }\n}\n\nexport default DeleteConfirmationDialog;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { EditProjectDetails, UpadatDataset } from 'Api';\n\nconst EditDataset = ({ selected, Modalopen, close,reloadlist }) => {\n    const [open, setOpen] = useState(false)\n    console.log(selected)\n    const [datasetName, setDatasetName] = useState( \"\")\n    const [comment, setComment] = useState(\"\")\n    \n    \n\n\n    useEffect(() => {\n       if(selected){\n        setDatasetName(selected?.dataset_name || \"\")\n        setComment(selected?.comment)\n       }\n\n        console.log(datasetName,comment,\">>>>>.>>>\")\n        //  setImage(item?.project_image)\n        setOpen(Modalopen)\n\n    }, [Modalopen])\n\n\n\n\n   \n    const SaveEditDetails = () => {\n      \n            const accessToken = JSON.parse(localStorage.getItem('token'))\n           if(datasetName != \"\" || comment != \"\"){\n\n               if (accessToken !== null) {\n                   UpadatDataset(accessToken,selected?.id,datasetName,comment)\n                       .then((res) => {\n                           if (res?.status === 200) {\n                            if(reloadlist){\n                               reloadlist()\n                               setOpen(false)\n                               setDatasetName(\"\")\n                               setComment(\"\")\n                              \n                                if(close){\n                                   close()\n                                   }\n                                   NotificationManager.success(\" Datset updated succesfully!\") \n                            }\n                               console.log('Response from update dataset  :', res)\n                           } else {\n                               // console.log('Response from customerlist:', res)\n   \n                               NotificationManager.error(\"Dataset details update failed!\")\n                           }\n                       })\n                       .catch((err) => {\n                           console.log('Response from Upadat dataset:', err)\n                       })\n               }\n           }else{\n            NotificationManager.error(\"All field is empty\")\n           }\n\n    }\n\n\n    return (\n        <Dialog\n            onClose={() => (close(false), setOpen(false))}\n            open={open}\n\n        >\n            <DialogContent style={{ margin: 0, padding: 0 }}>\n                <div className=\"user-profile-widget\">\n                \n                    <div className=\"p-20\">\n                    \n                    <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={(e)=>setDatasetName(e.target.value)}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {(e)=>{setComment(e.target.value)}}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\"  className=\"mx-2 d-flex justify-content-center align-items-center px-3\" onClick={SaveEditDetails}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\"   className=\"mx-2 d-flex justify-content-center align-items-center\"  onClick={() => (close(false), setOpen(false))}>Cancel</Button>\n                               \n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default EditDataset\n"],"sourceRoot":""}