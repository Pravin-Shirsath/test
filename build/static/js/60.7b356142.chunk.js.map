{"version":3,"sources":["Routes/dashboard/ListOfTask/index.js","Routes/dashboard/ReuseComponent/CustomBreadcrumbs.js","../node_modules/reactstrap/es/Col.js","Routes/dashboard/ReuseComponent/EditDataset.js","../node_modules/@mui/icons-material/Visibility.js"],"names":["ViewProject","props","history","useHistory","location","useState","searchText","setSearchText","loading","useRef","tasksList","setTasksList","filteredTasksList","setFilteredTasksList","totalPageCount","setTotalPageCount","activePage","setActivePage","useEffect","localStorage","getItem","getTasksList","authToken","JSON","parse","datasetId","ViewTasks","then","res","console","log","status","data","results","parseInt","count","catch","err","ErrorHandling","TaskStatus","breadcrumbData","state","push","name","url","className","AppConfig","brandName","content","currentPage","style","justifyContent","type","placeholder","border","borderBottom","value","onChange","e","target","variant","color","cursor","onClick","SearchTask","length","NotificationManager","error","marginBottom","listStyle","gap","margin","map","task","ind","task_name","task_file","date_created","slice","split","reverse","join","itemsCountPerPage","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","CustomBreadcrumbs","HandleNavigate","item","index","myarray","i","undefined","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","columnProp","isObject","_classNames","colSizeInterfix","colClass","mapToCssModules","classNames","_colClass","classes","React","createElement","_extends","EditDataset","selected","Modalopen","close","reloadlist","open","setOpen","datasetName","setDatasetName","comment","setComment","dataset_name","onClose","padding","marginTop","row","for","height","accessToken","UpadatDataset","id","success","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/60.7b356142.chunk.js","sourcesContent":["/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Button from '@material-ui/core/Button'\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Col\n} from 'reactstrap'\nimport Pagination from \"react-js-pagination\";\n\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications'\n\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport {\n  DeleteDataset,\n  ViewTasks,\n  getSearchProjectDatasets,\n  getViewProjectDatasets\n} from '../../../Api/'\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport EditIcon from '@mui/icons-material/Edit';\nimport EditDataset from '../ReuseComponent/EditDataset';\nimport { getFormatDate2 } from 'Constants/DateFormator';\nimport CustomBreadcrumbs from \"../ReuseComponent/CustomBreadcrumbs\";\n// import VisibilityIcon from '@mui/icons-material/Visibility';\n\nimport {\n    ViewFiles,\n    SearchTask\n  } from '../../../Api/'\nimport { ErrorHandling } from 'Constants/ErrorHandling';\nimport AppConfig from 'Constants/AppConfig';\n\nexport default function ViewProject(props) {\n  const history = useHistory();\n const {location}=props\n \n  const [searchText, setSearchText] = useState('');\n \n  const [loading, setLoading] = useState(false)\n \n\n  const deleteConfirmationDialog = useRef()\n\n  // states used in viewTasks i.e; this page\n  const [tasksList, setTasksList] = useState([]);\n  const [filteredTasksList, setFilteredTasksList] = useState([])\n  const [totalPageCount, setTotalPageCount] = useState(0)\n  const [activePage, setActivePage] = useState(1)\n\n\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    // conditional rendring\n    // if(isLoggedInBool !== \"true\"){\n    //   history.push(\"/login\")\n    //     localStorage.clear();\n    // } else {\n    // getCustomersListData();\n\n    getTasksList()\n    // }\n  }, [])\n\n  const getTasksList = () => {\n    const authToken = JSON.parse(localStorage?.getItem(\"token\"));\n    const datasetId = localStorage?.getItem(\"datasetId\");\n\n   \n\n    if(authToken!==null){\n      ViewTasks(authToken, datasetId, 1)\n      .then(res=> {\n        console.log(res, \"ressss in listOfTask file ke then block\")\n        if(res?.status == 200){\n          setTasksList(res?.data?.results)\n          setFilteredTasksList(res?.data?.results)\n          setTotalPageCount(parseInt(res?.data?.count))\n        } else {\n          console.log('Response from View Tasks list api in ListOfTask', res)\n        }\n      })\n      .catch(err => {\n        ErrorHandling(err)\n      })\n    }\n  }\n\n  const handlePageChange = (pageNumber) => {\n    console.log(\"pagination\", pageNumber)\n\n    if (activePage !== pageNumber) {\n      const authToken = JSON.parse(localStorage?.getItem(\"token\"));\n      const datasetId = localStorage?.getItem(\"datasetId\");\n\n      if (authToken !== null) {\n        ViewTasks(authToken, datasetId, pageNumber)\n          .then(res=> {\n            console.log(res, \"ressss in listOfTask file ke then block\")\n            if(res?.status == 200){\n              setTasksList(res?.data?.results)\n              setFilteredTasksList(res?.data?.results)\n              setTotalPageCount(parseInt(res?.data?.count))\n            } else {\n              console.log('Response from View Tasks list api in ListOfTask', res)\n            }\n          })\n          .catch(err => {\n            ErrorHandling(err)\n          })\n      }\n      setActivePage(pageNumber)\n    }\n  }\n\n\n\n  const searchTask = () => {\n    const authToken = JSON.parse(localStorage?.getItem(\"token\"));\n    const datasetId = localStorage?.getItem(\"datasetId\");\n\n    if (authToken !== null) {\n      SearchTask(authToken,datasetId, searchText)\n        .then((res) => {\n          if (res?.status === 200 && res?.data?.results.length>0) {\n            setFilteredTasksList(res?.data?.results);\n            setSearchText('')\n            // console.log('Response from customerlist :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n            setFilteredTasksList(tasksList);\n            setSearchText('');\n            NotificationManager.error(\"No task found!\")\n          }\n        })\n        .catch((err) => {\n          // console.log('Response from customerlist:', err)\n        })\n    }\n  }\n\nconst NavigateCompletTask=()=>{\n \n  const  breadcrumbData =location?.state?.breadcrumbData || []\n  breadcrumbData.push( { name: 'Task List', url: '/app/dashboard/listOfTask' });\n  history.push(\"/app/dashboard/downloadFile\",{breadcrumbData:breadcrumbData});\n}\n\n\n\n\nconst TaskStatus=()=>{\n  const  breadcrumbData =location?.state?.breadcrumbData || []\n  breadcrumbData.push( { name: 'Task List', url: '/app/dashboard/listOfTask' });\n  history.push(\"/app/dashboard/taskStatus\",{breadcrumbData:breadcrumbData});\n}\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>{AppConfig.brandName} | Task List</title>\n        <meta name=\"description\" content={`${AppConfig.brandName} Widgets`}  />\n      </Helmet>\n     \n \n      <CustomBreadcrumbs    currentPage={\"Task List\"} data={location?.state?.breadcrumbData} />\n\n\n                {/* <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n             message=\"This will delete your Dataset permanently.\"\n             onConfirm={() => Delete_Datset()}\n             ref={deleteConfirmationDialog} /> */}\n      <RctCollapsibleCard>\n     \n        <div className=\"table-responsive\">\n          <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n            <div className='search-row'>\n              <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n              <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} \n               onClick={searchTask}\n              >Search</Button>\n            </div>\n\n            <Button  \n             onClick={NavigateCompletTask}\n            variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} >Completed Task</Button>\n\n          </div>\n\n          <div className='bg-danger p-2 d-flex justify-content-center align-items-center headingContainer dark-primary' style={{marginBottom:\"50px\"}}>\n            <ul className='d-flex justify-content-center align-items-center globalFontFamily ' style={{listStyle: \"none\", gap: \"30px\", margin:\"0px\"}}>\n                <li>0 Complete</li>\n                <li>1 In Progress</li>\n                <li>0 Failed</li>\n                <li>3 Pending</li>\n            </ul>\n          </div>\n          <table className=\"table table-middle table-hover mb-0\">\n            <thead>\n              <tr>\n                <th></th>\n                <th>Name</th>\n                <th>Status</th>\n                <th>Images</th>\n                <th>Plan</th>\n                <th>Date Created</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n\n            {/****** mine filtered Table body, without ternary conditional value  *****/}\n            <tbody>\n              {/* {filteredDatasets &&\n                filteredDatasets.map((dataset, i, data) => {\n                  // let active = user?.is_active\n                  let created_Date = getFormatDate2((dataset?.date_created))\n                  return (\n\n                    <tr key={i}>\n                      <td></td>\n                      <td>Task-1</td>\n                      <td>Pending</td>\n                      <td>1</td>\n                      <td className=\"list-action d-flex \">Plaaannn</td>\n                      <td>27 March 2023</td>\n                    </tr>\n                  )\n                })\n              } */}\n\n                    {\n                      filteredTasksList && filteredTasksList.map((task, ind, data)=> {\n                        return(\n                          <tr className='globalFontFamily'>\n                            <td></td>\n                            <td>{task?.task_name}</td>\n                            <td>{task?.status}</td>\n                            <td>{task?.task_file}</td>\n                            <td className=\"list-action d-flex \">Plaaannn</td>\n                            <td>{task?.date_created.slice(0, 10).split(\"-\").reverse().join(\"-\")}</td>\n                            <td><VisibilityIcon onClick={TaskStatus}></VisibilityIcon></td>\n                          </tr>\n                        )\n                      })\n                    }\n\n            </tbody>\n\n          </table>\n          {filteredTasksList.length == 0 && <center style={{ color: \"black\" }}>Data not available </center>}\n          {\n            tasksList?.length > 0 &&\n            <div className='paginationDiv'> \n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={6}\n                pageRangeDisplayed={5}\n                onChange={(e) => handlePageChange(e)}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                hideFirstLastPages={true}\n                totalItemsCount={totalPageCount}\n              />\n            </div>\n          }\n        </div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n\n      {/* <EditDataset selected={selected} Modalopen={openEditDataset} close={()=>setOpenEditDataset(false)} reloadlist={getViewProjectData}/>       */}\n    </div>\n  )\n}\n","import React, { useEffect,useState } from 'react';\nimport { useHistory } from 'react-router';\nimport \"./CustomBreadcrumbs.css\"\n\nconst CustomBreadcrumbs = ({ currentPage, data =[] ,props}) => {\n\nconst [navData,setNavData]=useState(data)\n\n\nuseEffect(()=>{\n\n},[])\n\n  const history = useHistory();\n      console.log(data,\"daaata..\")\n  \n  const HandleNavigate = async (item,index)=>{\n    // const Data = [...navData]\n    let myarray=[]\n    // console.log(index,\"Data=\",Data)\n\n\n     for (let i = 0; i < index; i++) {\n       \n      myarray.push(data[i])\n     }\nconsole.log(myarray,\"myarray\")\n    \n    history.push(item.url,{breadcrumbData:myarray})\n  }\n\n  return (\n    <div className=\"page-title d-flex  align-items-center\">\n      {data != undefined  && data.length > 0 &&data.map((item, index) => (\n        <div key={index} className=\"page-title-wrap  d-flex  align-items-center mr-1 bread-titile-box\" style={{cursor:\"pointer\"}}>\n          \n        <i className=\"ti-angle-left text-dark  custombredcrum-icon\"></i> <span onClick={()=>HandleNavigate(item,index)} className=\"globalFontFamily custombredcrum-heding\">{item.name}</span>\n         \n        </div>\n      ))}\n      <div className=\"page-title-wrap   d-flex  align-items-center text-white m-0\"  style={{cursor:\"pointer\"}}><i className=\"ti-angle-left  text-white custombredcrum-icon\"></i><span className=\"globalFontFamily custombredcrum-heding\">{currentPage}</span></div>\n    </div>\n  );\n};\n\nexport default CustomBreadcrumbs;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { EditProjectDetails, UpadatDataset } from 'Api';\n\nconst EditDataset = ({ selected, Modalopen, close,reloadlist }) => {\n    const [open, setOpen] = useState(false)\n    console.log(selected)\n    const [datasetName, setDatasetName] = useState( \"\")\n    const [comment, setComment] = useState(\"\")\n    \n    \n\n\n    useEffect(() => {\n       if(selected){\n        setDatasetName(selected?.dataset_name || \"\")\n        setComment(selected?.comment)\n       }\n\n        console.log(datasetName,comment,\">>>>>.>>>\")\n        //  setImage(item?.project_image)\n        setOpen(Modalopen)\n\n    }, [Modalopen])\n\n\n\n\n   \n    const SaveEditDetails = () => {\n      \n            const accessToken = JSON.parse(localStorage.getItem('token'))\n           if(datasetName != \"\" || comment != \"\"){\n\n               if (accessToken !== null) {\n                   UpadatDataset(accessToken,selected?.id,datasetName,comment)\n                       .then((res) => {\n                           if (res?.status === 200) {\n                            if(reloadlist){\n                               reloadlist()\n                               setOpen(false)\n                               setDatasetName(\"\")\n                               setComment(\"\")\n                              \n                                if(close){\n                                   close()\n                                   }\n                                   NotificationManager.success(\" Datset updated succesfully!\") \n                            }\n                               console.log('Response from update dataset  :', res)\n                           } else {\n                               // console.log('Response from customerlist:', res)\n   \n                               NotificationManager.error(\"Dataset details update failed!\")\n                           }\n                       })\n                       .catch((err) => {\n                           console.log('Response from Upadat dataset:', err)\n                       })\n               }\n           }else{\n            NotificationManager.error(\"All field is empty\")\n           }\n\n    }\n\n\n    return (\n        <Dialog\n            onClose={() => (close(false), setOpen(false))}\n            open={open}\n\n        >\n            <DialogContent style={{ margin: 0, padding: 0 }}>\n                <div className=\"user-profile-widget\">\n                \n                    <div className=\"p-20\">\n                    \n                    <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={(e)=>setDatasetName(e.target.value)}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {(e)=>{setComment(e.target.value)}}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\"  className=\"mx-2 d-flex justify-content-center align-items-center px-3\" onClick={SaveEditDetails}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\"   className=\"mx-2 d-flex justify-content-center align-items-center\"  onClick={() => (close(false), setOpen(false))}>Cancel</Button>\n                               \n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default EditDataset\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;"],"sourceRoot":""}