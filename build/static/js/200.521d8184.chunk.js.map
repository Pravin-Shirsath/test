{"version":3,"sources":["Routes/advance-ui-components/sweet-alert/index.js"],"names":["SweetAlertComponent","props","useState","basic","setBasic","withDes","setWithDes","success","setSuccess","warning","setWarning","customIcon","setCustomIcon","withHtml","setWithHtml","prompt","setPrompt","passwordPrompt","setPasswordPrompt","customStyle","setCustomStyle","onConfirm","key","openAlert","onCancel","className","title","id","match","customClasses","colClasses","variant","color","onClick","show","btnSize","showCancel","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","custom","cancelBtnText","process","style","input","placeHolder","inputType","required","validationMsg","customClass","backgroundColor"],"mappings":"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","file":"static/js/200.521d8184.chunk.js","sourcesContent":["/**\n * Sweet Alert Advance Ui Components\n */\nimport React, { useState } from 'react';\nimport SweetAlert from 'react-bootstrap-sweetalert'\nimport Button from '@material-ui/core/Button';\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction SweetAlertComponent(props) {\n   const [basic, setBasic] = useState(false);\n   const [withDes, setWithDes] = useState(false);\n   const [success, setSuccess] = useState(false);\n   const [warning, setWarning] = useState(false);\n   const [customIcon, setCustomIcon] = useState(false);\n   const [withHtml, setWithHtml] = useState(false);\n   const [prompt, setPrompt] = useState(false);\n   const [passwordPrompt, setPasswordPrompt] = useState(false);\n   const [customStyle, setCustomStyle] = useState(false);\n\n\t/**\n\t * On Confirm dialog\n\t * @param {string} key\n\t */\n\tconst onConfirm = (key) => {\n      key(false);\n\t}\n\n\t/**\n\t * Open Alert\n\t * @param {key} key\n\t */\n\tconst openAlert = (key) => {\n      key(true);\n\t}\n\n\t/**\n\t * On Cancel dialog\n\t * @param {string} key\n\t */\n\tconst onCancel = (key) => {\n      key(false)\n\t}\n\n   return (\n      <div className=\"sweet-alert-wrapper\">\n         <PageTitleBar title={<IntlMessages id=\"sidebar.sweetAlert\" />} match={props.match} />\n         <div className=\"row\">\n            <RctCollapsibleCard\n               customClasses=\"p-20 text-center\"\n               colClasses=\"col-sm-6 col-lg-4 col-xl-3\"\n            >\n               <h5 className=\"mb-20\">Basic Alert</h5>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"text-white\"\n                  onClick={() => openAlert(setBasic)}\n               >\n                  Basic\n               </Button>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               customClasses=\"p-20 text-center\"\n               colClasses=\"col-sm-6 col-lg-4 col-xl-3\"\n            >\n               <h5 className=\"mb-20\">Description Alert</h5>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"text-white\"\n                  onClick={() => openAlert(setWithDes)}\n               >\n                  With Description\n               </Button>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               customClasses=\"p-20 text-center\"\n               colClasses=\"col-sm-6 col-lg-4 col-xl-3\"\n            >\n               <h5 className=\"mb-20\">Success Alert</h5>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"text-white\"\n                  onClick={() => openAlert(setSuccess)}\n               >\n                  Success\n               </Button>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               customClasses=\"p-20 text-center\"\n               colClasses=\"col-sm-6 col-lg-4 col-xl-3\"\n            >\n               <h5 className=\"mb-20\">Warning Alert</h5>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"text-white\"\n                  onClick={() => openAlert(setWarning)}\n               >\n                  Warning\n               </Button>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               customClasses=\"p-20 text-center\"\n               colClasses=\"col-sm-6 col-lg-4 col-xl-3\"\n            >\n               <h5 className=\"mb-20\">Custom Icon Alert</h5>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"text-white\"\n                  onClick={() => openAlert(setCustomIcon)}\n               >\n                  Custom Icon\n               </Button>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               customClasses=\"p-20 text-center\"\n               colClasses=\"col-sm-6 col-lg-4 col-xl-3\"\n            >\n               <h5 className=\"mb-20\">With Html Alert</h5>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"text-white\"\n                  onClick={() => openAlert(setWithHtml)}\n               >\n                  With Html\n               </Button>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               customClasses=\"p-20 text-center\"\n               colClasses=\"col-sm-6 col-lg-4 col-xl-3\"\n            >\n               <h5 className=\"mb-20\">Prompt Alert</h5>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"text-white\"\n                  onClick={() => openAlert(setPrompt)}\n               >\n                  Prompt\n               </Button>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               customClasses=\"p-20 text-center\"\n               colClasses=\"col-sm-6 col-lg-4 col-xl-3\"\n            >\n               <h5 className=\"mb-20\">Password Prompt Alert</h5>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"text-white\"\n                  onClick={() => openAlert(setPasswordPrompt)}\n               >\n                  Password Prompt\n               </Button>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               customClasses=\"p-20 text-center\"\n               colClasses=\"col-sm-6 col-lg-4 col-xl-3\"\n            >\n               <h5 className=\"mb-20\">Custom Style Alert</h5>\n               <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"text-white\"\n                  onClick={() => openAlert(setCustomStyle)}\n               >\n                  Custom Style\n               </Button>\n            </RctCollapsibleCard>\n         </div>\n         <SweetAlert\n            show={basic}\n            title=\"Here's a message!\"\n            onConfirm={() => onConfirm(setBasic)}\n            btnSize=\"sm\"\n         />\n         <SweetAlert\n            show={withDes}\n            title=\"Here's a message!\"\n            btnSize=\"sm\"\n            onConfirm={() => onConfirm(setWithDes)}\n         >\n            It's pretty, isn't it?\n         </SweetAlert>\n         <SweetAlert\n            success\n            show={success}\n            title=\"Good job!\"\n            btnSize=\"sm\"\n            onConfirm={() => onConfirm(setSuccess)}>\n            You clicked the button!\n         </SweetAlert>\n         <SweetAlert\n            warning\n            btnSize=\"sm\"\n            show={warning}\n            showCancel\n            confirmBtnText=\"Yes, delete it!\"\n            confirmBtnBsStyle=\"danger\"\n            cancelBtnBsStyle=\"success\"\n            title=\"Are you sure?\"\n            onConfirm={() => onConfirm(setWarning)}\n            onCancel={() => onCancel(setWarning)}\n         >\n            You will not be able to recover this imaginary file!\n         </SweetAlert>\n         <SweetAlert\n            custom\n            btnSize=\"sm\"\n            show={customIcon}\n            showCancel\n            confirmBtnText=\"Yes\"\n            cancelBtnText=\"No\"\n            confirmBtnBsStyle=\"primary\"\n            cancelBtnBsStyle=\"warning\"\n            customIcon={`${ process.env.PUBLIC_URL }/assets/images/avatars/user-1.jpg`}\n            title=\"Do you like thumbs?\"\n            onConfirm={() => onConfirm(setCustomIcon)}\n            onCancel={() => onCancel(setCustomIcon)}\n         >\n            You will find they are up!\n         </SweetAlert>\n         <SweetAlert\n            show={withHtml}\n            btnSize=\"sm\"\n            title={<span>HTML <small>Title</small>!</span>}\n            onConfirm={() => onConfirm(setWithHtml)}\n         >\n            <span>A custom <span style={{ color: '#642aff' }}>html</span> message.</span>\n         </SweetAlert>\n         <SweetAlert\n            input\n            btnSize=\"sm\"\n            show={prompt}\n            showCancel\n            cancelBtnBsStyle=\"danger\"\n            title=\"An input!\"\n            placeHolder=\"Write something\"\n            onConfirm={() => onConfirm(setPrompt)}\n            onCancel={() => onCancel(setPrompt)}\n         >\n            Write something interesting:\n         </SweetAlert>\n         <SweetAlert\n            input\n            btnSize=\"sm\"\n            show={passwordPrompt}\n            inputType=\"password\"\n            title=\"Enter Password\"\n            required\n            validationMsg=\"You must enter your password!\"\n            onConfirm={() => onConfirm(setPasswordPrompt)}\n         />\n         <SweetAlert\n            customClass=\"custom-alert\"\n            show={customStyle}\n            btnSize=\"sm\"\n            style={{ backgroundColor: 'blueviolet', color: 'white !important' }}\n            title=\"Yay!\"\n            onConfirm={() => onConfirm(setCustomStyle)}\n            confirmBtnBsStyle=\"danger\"\n         >\n            <div className=\"text-white\">Its blueviolet!</div>\n         </SweetAlert>\n      </div>\n   );\n}\n\nexport default SweetAlertComponent;"],"sourceRoot":""}