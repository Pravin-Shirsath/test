{"version":3,"sources":["Routes/dashboard/CreateTask/index.js"],"names":["CreateDataset","props","useHistory","useState","loading","datasetName","comment","console","log","name","content","title","id","match","fullBlock","style","padding","alignItems","justifyContent","display"],"mappings":"8MA4FeA,UA9DO,SAACC,GACLC,cAAhB,IACA,EAA8BC,oBAAS,GAAM,mBAAtCC,EAAO,KACd,GAD0B,KACYD,mBAAS,KAAG,mBAA3CE,EAAW,KAClB,GADkC,KACJF,mBAAS,KAAG,mBAAnCG,EAAO,KAAY,KAqC1B,OAHAC,QAAQC,IAAIH,EAAa,gBACzBE,QAAQC,IAAIF,EAAS,cAGnB,qCACE,eAAC,IAAM,WACL,gCAAO,+BACP,sBAAMG,KAAK,cAAcC,QAAQ,yBAEnC,cAAC,IAAY,CACXC,MAAO,cAAC,IAAY,CAACC,GAAG,uBACxBC,MAAOZ,EAAMY,QAGf,eAAC,IAAkB,CAACC,WAAS,YACvB,qBAAKC,MAAO,CAACC,QAAQ,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,QAAS,UAGzFf,GAAW,cAAC,IAAgB,SAIrC,C","file":"static/js/212.7599ac60.chunk.js","sourcesContent":["// rct section loader\nimport RctSectionLoader from \"../../../Components/RctSectionLoader/RctSectionLoader\";\n\n// import { Button } from \"reactstrap\";\n\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar'\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard'\n// import React,{useState} from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useHistory } from 'react-router'\nimport IntlMessages from 'Util/IntlMessages'\nimport React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback, CustomInput\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { createDataset } from 'Api'\nimport AddIcon from '@mui/icons-material/Add';\n\nconst CreateDataset = (props) => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [datasetName, setDatasetName] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  const handleDatasetName = (e) => {\n    setDatasetName(e.target.value)\n  }\n\n  const handleComment = (e) => {\n    setComment(e.target.value)\n  }\n\n  const handleSave = () => {\n    const authToken = JSON.parse(localStorage.getItem(\"token\"));\n    const projectId = localStorage.getItem(\"projId\");\n\n    if(authToken !== null){\n      if(projectId){\n        if(datasetName){\n          console.log(authToken, typeof authToken, \"autthhh token\")\n          createDataset(authToken, projectId, datasetName)\n          .then(res => {\n            console.log(res, \"resss in handle save function\")\n            console.log(res?.data, \"ress dataaa i n handle save function\")\n\n            if(res.status == \"200\"){\n              // NotificationManager.success(\"dataset created !\")\n              setDatasetName(\"\")\n              setComment(\"\");\n            }\n          })\n        }\n      }\n    }\n  }\n\n  console.log(datasetName, \"Dataset name\")\n  console.log(comment, \"Commmenttt\")\n\n  return (\n    <>\n      <Helmet>\n        <title>Automaton | Create Dataset</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      <PageTitleBar\n        title={<IntlMessages id=\"sidebar.createTask\" />}\n        match={props.match}\n      />\n\n      <RctCollapsibleCard fullBlock>\n            <div style={{padding:\"80px\", alignItems: \"center\", justifyContent: 'center', display: \"flex\", }}>\n                \n            </div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n    </>\n  );\n};\n\nexport default CreateDataset;\n"],"sourceRoot":""}