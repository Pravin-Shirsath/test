{"version":3,"sources":["../node_modules/@material-ui/core/esm/Divider/Divider.js","Routes/components/drawers/component/tileData.js","Routes/components/drawers/component/PermanentDrawer.js","Routes/components/drawers/component/PersistentDrawer.js","Routes/components/drawers/index.js","../node_modules/@material-ui/core/esm/TextField/TextField.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js"],"names":["Divider","React","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","alpha","middle","spacing","marginRight","alignSelf","name","mailFolderListItems","ListItem","button","ListItemIcon","ListItemText","primary","otherMailFolderListItems","drawerWidth","marginTop","zIndex","overflow","appFrame","display","appBar","drawerPaper","drawerHeader","mixins","toolbar","content","background","default","padding","breakpoints","up","useState","anchor","setAnchor","drawer","Drawer","paper","List","before","after","TextField","id","select","label","value","onChange","event","target","MenuItem","AppBar","classNames","Toolbar","Typography","color","noWrap","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","alignItems","justifyContent","flexGrow","contentShift","withTheme","open","setOpen","drawerInner","IconButton","onClick","direction","list","disableGutters","useStyles","makeStyles","listFull","DrawerComponent","top","setTop","setLeft","setBottom","right","setRight","toggleDrawer","side","sideList","fullList","PageTitleBar","title","IntlMessages","match","RctCollapsibleCard","heading","Button","onClose","tabIndex","onKeyDown","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","autoComplete","_props$autoFocus","autoFocus","children","_props$color","defaultValue","_props$disabled","disabled","_props$error","error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","InputLabelProps","inputProps","InputProps","inputRef","_props$multiline","multiline","onBlur","onFocus","placeholder","_props$required","required","rows","rowsMax","maxRows","minRows","_props$select","SelectProps","type","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","helperTextId","concat","inputLabelId","InputComponent","InputElement","FormControl","InputLabel","htmlFor","Select","labelId","input","FormHelperText","_props$disableGutters","ListItemClasses","selected","tabIndexProp","dense","gutters","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","body2","stylesOrCreator","options","arguments","length","makeStylesWithoutDefault","defaultTheme"],"mappings":"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","file":"static/js/65.45abf620.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: alpha(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import React from 'react';\nimport {ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\n\nexport const mailFolderListItems = (\n   <div>\n      <ListItem button>\n         <ListItemIcon>\n            <i className=\"zmdi zmdi-inbox zmdi-hc-lg\"></i>\n         </ListItemIcon>\n         <ListItemText primary=\"Inbox\" />\n      </ListItem>\n      <ListItem button>\n         <ListItemIcon>\n            <i className=\"zmdi zmdi-star zmdi-hc-lg\"></i>\n         </ListItemIcon>\n         <ListItemText primary=\"Starred\" />\n      </ListItem>\n      <ListItem button>\n         <ListItemIcon>\n            <i className=\"zmdi zmdi-mail-send zmdi-hc-lg\"></i>\n         </ListItemIcon>\n         <ListItemText primary=\"Send mail\" />\n      </ListItem>\n      <ListItem button>\n         <ListItemIcon>\n            <i className=\"zmdi zmdi-email-open zmdi-hc-lg\"></i>\n         </ListItemIcon>\n         <ListItemText primary=\"Drafts\" />\n      </ListItem>\n   </div>\n);\n\nexport const otherMailFolderListItems = (\n   <div>\n      <ListItem button>\n         <ListItemIcon>\n            <i className=\"zmdi zmdi-email zmdi-hc-lg\"></i>\n         </ListItemIcon>\n         <ListItemText primary=\"All mail\" />\n      </ListItem>\n      <ListItem button>\n         <ListItemIcon>\n            <i className=\"zmdi zmdi-delete zmdi-hc-lg\"></i>\n         </ListItemIcon>\n         <ListItemText primary=\"Trash\" />\n      </ListItem>\n      <ListItem button>\n         <ListItemIcon>\n            <i className=\"zmdi zmdi-alert-octagon zmdi-hc-lg\"></i>\n         </ListItemIcon>\n         <ListItemText primary=\"Spam\" />\n      </ListItem>\n   </div>\n);","/*==== Permanent Drawer =====*/\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Drawer, AppBar, Toolbar, List, MenuItem, TextField, Typography, Divider } from '@material-ui/core';\nimport { mailFolderListItems, otherMailFolderListItems } from './tileData';\n\nconst drawerWidth = 180;\n\nconst styles = theme => ({\n\troot: {\n\t\twidth: '100%',\n\t\theight: 430,\n\t\tmarginTop: theme.spacing(3),\n\t\tzIndex: -1,\n\t\toverflow: 'hidden',\n\t},\n\tappFrame: {\n\t\tposition: 'relative',\n\t\tdisplay: 'flex',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t},\n\tappBar: {\n\t\tposition: 'absolute',\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t},\n\t'appBar-left': {\n\t\tmarginLeft: drawerWidth,\n\t},\n\t'appBar-right': {\n\t\tmarginRight: drawerWidth,\n\t},\n\tdrawerPaper: {\n\t\tposition: 'relative',\n\t\theight: '100%',\n\t\twidth: drawerWidth,\n\t},\n\tdrawerHeader: theme.mixins.toolbar,\n\tcontent: {\n\t\tbackgroundColor: theme.palette.background.default,\n\t\twidth: '100%',\n\t\tpadding: theme.spacing(2),\n\t\theight: 'calc(100% - 56px)',\n\t\tmarginTop: 56,\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\theight: 'calc(100% - 64px)',\n\t\t\tmarginTop: 64,\n\t\t},\n\t},\n});\n\nfunction PermanentDrawer(props) {\n   const [anchor, setAnchor] = useState('left');\n\n\tconst handleChange = event => {\n\t\tsetAnchor(event.target.value)\n\t};\n\n   const { classes } = props;\n   const drawer = (\n      <Drawer\n         variant=\"permanent\"\n         classes={{\n            paper: classes.drawerPaper,\n         }}\n         anchor={anchor}>\n         <div className={classes.drawerHeader} />\n         <Divider />\n         <List>{mailFolderListItems}</List>\n         <Divider />\n         <List>{otherMailFolderListItems}</List>\n      </Drawer>\n   );\n   let before = null;\n   let after = null;\n   if (anchor === 'left') {\n      before = drawer;\n   } else {\n      after = drawer;\n   }\n   return (\n      <div className={classes.root}>\n         <TextField\n            id=\"permanent-anchor\"\n            select\n            label=\"Anchor\"\n            value={anchor}\n            onChange={handleChange}\n            margin=\"normal\">\n            <MenuItem value=\"left\">left</MenuItem>\n            <MenuItem value=\"right\">right</MenuItem>\n         </TextField>\n         <div className={classes.appFrame}>\n            <AppBar className={classNames(classes.appBar, classes[`appBar-${anchor}`])}>\n               <Toolbar className=\"bg-info\">\n                  <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                     Permanent drawer\n                  </Typography>\n               </Toolbar>\n            </AppBar>\n            {before}\n            <main className={classes.content}>\n            </main>\n            {after}\n         </div>\n      </div>\n   );\n}\n\nPermanentDrawer.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PermanentDrawer);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport { Drawer, AppBar, Toolbar, List, MenuItem, Typography, TextField, Divider, IconButton} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { mailFolderListItems, otherMailFolderListItems } from './tileData';\n\nconst drawerWidth = 180;\n\nconst styles = theme => ({\n\troot: {\n\t\twidth: '100%',\n\t\theight: 430,\n\t\tmarginTop: theme.spacing(3),\n\t\tzIndex: -9,\n\t\toverflow: 'hidden',\n\t},\n\tappFrame: {\n\t\tposition: 'relative',\n\t\tdisplay: 'flex',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t},\n\tappBar: {\n\t\tposition: 'absolute',\n\t\ttransition: theme.transitions.create(['margin', 'width'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t},\n\tappBarShift: {\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\ttransition: theme.transitions.create(['margin', 'width'], {\n\t\t\teasing: theme.transitions.easing.easeOut,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\t'appBarShift-left': {\n\t\tmarginLeft: drawerWidth,\n\t},\n\t'appBarShift-right': {\n\t\tmarginRight: drawerWidth,\n\t},\n\tmenuButton: {\n\t\tmarginLeft: 12,\n\t\tmarginRight: 20,\n\t},\n\thide: {\n\t\tdisplay: 'none',\n\t},\n\tdrawerPaper: {\n\t\tposition: 'relative',\n\t\theight: '100%',\n\t\twidth: drawerWidth,\n\t},\n\tdrawerHeader: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tpadding: '0 8px',\n\t\t...theme.mixins.toolbar,\n\t},\n\tcontent: {\n\t\twidth: '100%',\n\t\tflexGrow: 1,\n\t\tbackgroundColor: theme.palette.background.default,\n\t\tpadding: theme.spacing(3),\n\t\ttransition: theme.transitions.create('margin', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t\theight: 'calc(100% - 56px)',\n\t\tmarginTop: 56,\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\theight: 'calc(100% - 64px)',\n\t\t\tmarginTop: 64,\n\t\t},\n\t},\n\t'content-left': {\n\t\tmarginLeft: -drawerWidth,\n\t},\n\t'content-right': {\n\t\tmarginRight: -drawerWidth,\n\t},\n\tcontentShift: {\n\t\ttransition: theme.transitions.create('margin', {\n\t\t\teasing: theme.transitions.easing.easeOut,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\t'contentShift-left': {\n\t\tmarginLeft: 0,\n\t},\n\t'contentShift-right': {\n\t\tmarginRight: 0,\n\t},\n});\n\nfunction PersistentDrawer(props){\n   const [open,setOpen] = useState(false);\n   const [anchor,setAnchor] = useState('left');\n\t\n\tconst handleDrawerOpen = () => {\n      setOpen(true);\n\t};\n\n\tconst handleDrawerClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst handleChangeAnchor = event => {\n\t\tsetAnchor(event.target.value);\n\t};\n\n   const { classes, theme } = props;\n\n   const drawer = (\n      <Drawer\n         variant=\"persistent\"\n         classes={{\n            paper: classes.drawerPaper,\n         }}\n         anchor={anchor}\n         open={open}\n      >\n         <div className={classes.drawerInner}>\n            <div className={classes.drawerHeader}>\n               <IconButton onClick={handleDrawerClose}>\n                  {theme.direction === 'rtl' ? <i className=\"zmdi zmdi-chevron-right\"></i> : <i className=\"zmdi zmdi-chevron-left\"></i>}\n               </IconButton>\n            </div>\n            <Divider />\n            <List className={classes.list}>{mailFolderListItems}</List>\n            <Divider />\n            <List className={classes.list}>{otherMailFolderListItems}</List>\n         </div>\n      </Drawer>\n   );\n\n   let before = null;\n   let after = null;\n\n   if (anchor === 'left') {\n      before = drawer;\n   } else {\n      after = drawer;\n   }\n\n   return (\n      <div className={classes.root}>\n         <TextField\n            id=\"persistent-anchor\"\n            select\n            label=\"Anchor\"\n            value={anchor}\n            onChange={handleChangeAnchor}\n            margin=\"normal\"\n         >\n            <MenuItem value=\"left\">left</MenuItem>\n            <MenuItem value=\"right\">right</MenuItem>\n         </TextField>\n         <div className={classes.appFrame}>\n            <AppBar\n               className={classNames(classes.appBar, {\n                  [classes.appBarShift]: open,\n                  [classes[`appBarShift-${anchor}`]]: open,\n               })}>\n               <Toolbar className=\"bg-primary\" disableGutters={!open}>\n                  <IconButton\n                     color=\"inherit\"\n                     aria-label=\"open drawer\"\n                     onClick={handleDrawerOpen}\n                     className={classNames(classes.menuButton, open && classes.hide)}>\n                     <MenuIcon />\n                  </IconButton>\n                  <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                     Persistent drawer\n         </Typography>\n               </Toolbar>\n            </AppBar>\n            {before}\n            <main\n               className={classNames(classes.content, classes[`content-${anchor}`], {\n                  [classes.contentShift]: open,\n                  [classes[`contentShift-${anchor}`]]: open,\n               })}\n            >\n               <Typography>{'You think water moves fast? You should see ice.'}</Typography>\n            </main>\n            {after}\n         </div>\n      </div>\n   );\n}\n\nPersistentDrawer.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n\ttheme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawer);\n","/**\n * Drawers\n */\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\n\n//Components\nimport PermanentDrawer from './component/PermanentDrawer';\nimport PersistentDrawer from './component/PersistentDrawer';\nimport { mailFolderListItems, otherMailFolderListItems } from './component/tileData';\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nconst useStyles = makeStyles((theme) => ({\n   list: {\n      width: 300,\n   },\n   listFull: {\n      width: 'auto',\n   },\n}));\n\nfunction DrawerComponent(props) {\n   const [top,setTop] = useState(false);\n   const [left, setLeft] = useState(false);\n   const [bottom, setBottom] = useState(false);\n   const [right, setRight] = useState(false);\n   const classes = useStyles();\n   const toggleDrawer = (side, open) => () => {\n      side(open)\n      \n   };\n\n   const sideList = (\n      <div className={classes.list}>\n         <List>{mailFolderListItems}</List>\n         <Divider />\n         <List>{otherMailFolderListItems}</List>\n      </div>\n   );\n\n   const fullList = (\n      <div className={classes.listFull}>\n         <List>{mailFolderListItems}</List>\n         <Divider />\n         <List>{otherMailFolderListItems}</List>\n      </div>\n   );\n   return (\n      <div className=\"drawer-wrapper\">\n         <PageTitleBar title={<IntlMessages id=\"sidebar.drawers\" />} match={props.match} />\n         <RctCollapsibleCard\n            heading={<IntlMessages id=\"widgets.temporaryDrawers\" />}\n         >\n            <Button color=\"primary\" className=\"text-white mr-10 mb-10\" variant=\"contained\" onClick={toggleDrawer(setLeft, true)}>Open Left</Button>\n            <Button color=\"primary\" className=\"text-white mr-10 mb-10\" variant=\"contained\" onClick={toggleDrawer(setRight, true)}>Open Right</Button>\n            <Button color=\"primary\" className=\"text-white mr-10 mb-10\" variant=\"contained\" onClick={toggleDrawer(setTop, true)}>Open Top</Button>\n            <Button color=\"primary\" className=\"text-white mr-10 mb-10\" variant=\"contained\" onClick={toggleDrawer(setBottom, true)}>Open Bottom</Button>\n\n            <Drawer open={left} onClose={toggleDrawer(setLeft, false)}>\n               <div tabIndex={0} role=\"button\" onClick={toggleDrawer(setLeft, false)}\n                  onKeyDown={toggleDrawer(setLeft, false)} >\n                  {sideList}\n               </div>\n            </Drawer>\n\n            <Drawer anchor=\"top\" open={top} onClose={toggleDrawer(setTop, false)}>\n               <div tabIndex={0} role=\"button\"\n                  onClick={toggleDrawer(setTop, false)}\n                  onKeyDown={toggleDrawer(setTop, false)}>\n                  {fullList}\n               </div>\n            </Drawer>\n\n            <Drawer\n               anchor=\"bottom\"\n               open={bottom}\n               onClose={toggleDrawer(setBottom, false)}>\n               <div tabIndex={0} role=\"button\" onClick={toggleDrawer(setBottom, false)}\n                  onKeyDown={toggleDrawer(setBottom, false)}>\n                  {fullList}\n               </div>\n            </Drawer>\n\n            <Drawer anchor=\"right\" open={right} onClose={toggleDrawer(setRight, false)}>\n               <div tabIndex={0} role=\"button\" onClick={toggleDrawer(setRight, false)}\n                  onKeyDown={toggleDrawer(setRight, false)}>\n                  {sideList}\n               </div>\n            </Drawer>\n         </RctCollapsibleCard>\n         <RctCollapsibleCard\n            heading={<IntlMessages id=\"widgets.permanentDrawers\" />}\n         >\n            <PermanentDrawer />\n         </RctCollapsibleCard>\n         <RctCollapsibleCard\n            heading={<IntlMessages id=\"components.persistentDrawer\" />}\n         >\n            <PersistentDrawer />\n         </RctCollapsibleCard>\n      </div>\n   );\n}\n\nexport default DrawerComponent;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      maxRows = props.maxRows,\n      minRows = props.minRows,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"maxRows\", \"minRows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `minRows` instead'),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `maxRows` instead'),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;"],"sourceRoot":""}