{"version":3,"sources":["../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/Edit.js","Routes/dashboard/ViewProject/index.js","Routes/dashboard/saas/data.js","Routes/dashboard/saas/index.js","../node_modules/@mui/icons-material/Delete.js","Routes/dashboard/ReuseComponent/EditDataset.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","ViewProject","props","history","useHistory","location","useState","searchText","setSearchText","loading","deleteConfirmationDialog","useRef","selected","setSelectedItem","openEditDataset","setOpenEditDataset","datasets","setDatasets","filteredDatasets","setFilteredDatasets","activePage","setActivePage","totalPageCount","setTotalPageCount","useEffect","localStorage","getItem","getViewProjectData","authToken","JSON","parse","projectId","getViewProjectDatasets","then","res","status","console","log","data","results","count","parseInt","catch","error","response","NotificationManager","clear","push","className","name","content","currentPage","state","breadcrumbData","title","message","onConfirm","accessToken","DeleteDataset","id","project_id","current","close","success","err","Delete_Datset","ref","style","justifyContent","type","placeholder","border","borderBottom","onChange","e","target","variant","color","cursor","onClick","getSearchProjectDatasets","length","path","url","HandleCreate","map","dataset","i","created_Date","getFormatDate2","date_created","dataset_name","setItem","handleView","open","itemsCountPerPage","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","Modalopen","reloadlist","ChartConfig","primary","SaasDashbaord","match","project","setProject","filterProject","setFilteredProject","openEditProject","setOpenEditProject","ProjectList","GetAlLProjectList","ErrorHandling","Helmet","CustomBreadcrumbs","RctCollapsibleCard","Button","GetSearchProjectList","EditProject","DeleteConfirmationDialog","DeleteProject","Delete_project","item","created","colClasses","fullBlock","borderColor","height","src","project_image","process","alt","width","project_name","username","DoughnutChart","gap","project_dataset","marginTop","EditModal","DeletModalOpen","EditDataset","setOpen","datasetName","setDatasetName","comment","setComment","onClose","margin","padding","row","sm","for","marginBottom","UpadatDataset"],"mappings":"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","file":"static/js/57.79b6a70a.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Button from '@material-ui/core/Button'\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Col\n} from 'reactstrap'\nimport Pagination from \"react-js-pagination\";\n\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications'\n// delete confirmation dialog\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n// update user form\n//  import UpdateUserForm from './UpdateUserForm'\n// page title bar\nimport PageTitleBar from '../../../Components/PageTitleBar/PageTitleBar'\n// intl messages\nimport IntlMessages from '../../../Util/IntlMessages'\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport {\n  DeleteDataset,\n  getSearchProjectDatasets,\n  getViewProjectDatasets\n} from '../../../Api/'\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport EditIcon from '@mui/icons-material/Edit';\nimport EditDataset from '../ReuseComponent/EditDataset';\nimport { getFormatDate2 } from 'Constants/DateFormator';\nimport CustomBreadcrumbs from \"../ReuseComponent/CustomBreadcrumbs\";\n\nexport default function ViewProject(props) {\n  const history = useHistory();\n const {location}=props\n \n  //  const [users, setUsers] = useState() // use when data is coming from api\n  const [users, setUsers] = useState([])\n  //  const [filteredUsers, setFilteredUsers] = useState() // use when the data is coming fom api\n  const [filteredUsers, setFilteredUsers] = useState([])\n  const [searchText, setSearchText] = useState('');\n  \n\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n \n  const [selectedUser, setSelectedUser] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [addNewUserModal, setAddNewUserModal] = useState(false)\n  const [updateNewUserModal, setupdateNewUserModal] = useState(false)\n  const [deleteUserModal, setdeleteUserModal] = useState(false)\n\n  const deleteConfirmationDialog = useRef()\n  const [selected, setSelectedItem] = useState({})\n\n  const [editUser, setEditUser] = useState(null)\n  const [selectedUsers, setSelectedUsers] = useState(0)\n  const [viewDetails, setViewDetails] = useState()\nconst [openEditDataset,setOpenEditDataset] = useState(false)\n\n  const [datasets, setDatasets] = useState([]);\n  const [filteredDatasets,setFilteredDatasets] = useState([])\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState(0);\n\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    // conditional rendring\n    // if(isLoggedInBool !== \"true\"){\n    //   history.push(\"/login\")\n    //     localStorage.clear();\n    // } else {\n    // getCustomersListData();\n    getViewProjectData();\n    // }\n  }, [])\n\n  const getViewProjectData = () => {\n    const authToken = JSON?.parse(localStorage.getItem(\"token\"));\n    const projectId = localStorage?.getItem(\"projId\")\n\n    if(authToken !== null){\n      getViewProjectDatasets(authToken, projectId, activePage)\n      .then(res => {\n        if(res?.status == 200){\n          console.log(res?.data?.results, \"project's all lists\")\n          setDatasets(res?.data?.results)\n          setFilteredDatasets(res?.data?.results);\n\n          console.log(res?.data?.count, \"total counts of datasets of projects\")\n          setTotalPageCount(parseInt(res?.data?.count));\n        } else {\n          console.log('Response from View project Datasets lists api:', res)\n        }\n      })\n      .catch((error)=>{\n        console.log(\"error in viewdataset:\",error)\n        const status = error?.response?.status\n        if(status == 401){\n          NotificationManager.error(\"Something went wrong !\");\n          localStorage.clear();\n          history.push(\"/login\")\n        } else if(status == 500){\n          NotificationManager.error(\"Temporary connectivity issues.\");\n        }\n      })\n    } else {\n      localStorage.clear();\n      history.push(\"/login\")\n    }\n  }\n\n\n\n\n\n\n  const EditModal = (item) => {\n    setSelectedItem(item)\n  \n    setOpenEditDataset(true)\n  }\n\n  const DeletModalOpen = (item) => {\n    setSelectedItem(item)\n    deleteConfirmationDialog.current.open()\n  }\n\n  const Delete_Datset = () => {\n\n\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n     \n      DeleteDataset(accessToken, selected?.id,selected?.project_id)\n        .then((res) => {\n          if (res?.status === 200) {\n            deleteConfirmationDialog.current.close()\n            getViewProjectData();\n            NotificationManager.success(\" Datset deleted !\")\n            console.log('Response from dataset  :', res)\n\n          } else {\n\n\n            NotificationManager.error(\"Delete_Datset deleting process unsucess!\")\n          }\n        })\n        .catch((err) => {\n          console.log('Response from err dataset  :', err)\n          NotificationManager.error(\"Delete_Datset deleting process unsucess!\")\n        })\n    }\n  }\n\n\n\n\n\n  const handlePageChange = (pageNumber) => {\n    console.log(\"pagination\", pageNumber)\n    if (activePage !== pageNumber) {\n      const authToken = JSON.parse(localStorage.getItem('token'))\n      const projectId = localStorage?.getItem(\"projId\")\n\n      if (authToken !== null) {\n        getViewProjectDatasets(authToken, projectId, pageNumber)\n          .then((res) => {\n            if (res?.status === 200) {\n              setDatasets(res?.data?.results);\n              setFilteredDatasets(res?.data?.results);\n              setTotalPageCount(res?.data?.count);\n              console.log('Response from customerlist :', res)\n            } else {\n              // console.log('Response from customerlist:', res)\n            }\n          })\n          .catch((err) => {\n            // console.log('Response from customerlist:', err)\n          })\n      }\n      setActivePage(pageNumber)\n    }\n  }\n\n\n  // Dataset View\n  const handleView = (dataset) => {\n    console.log(dataset?.id, \"selected dataset ID\")\n    localStorage.setItem(\"datasetId\", dataset?.id);\n    if(location?.state?.breadcrumbData){\n      let path = location?.state?.breadcrumbData[0]\n      if(path?.name == \"Dashboard\"){\n        const breadcrumbData = [\n          { name: 'Dashboard', url: '/app/dashboard/saas' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/viewDataset\",{breadcrumbData:breadcrumbData})\n      }else if(path?.name == \"Project\"){\n        const breadcrumbData = [\n          { name: 'Project', url: '/app/dashboard/project' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/viewDataset\",{breadcrumbData:breadcrumbData})\n      }\n    }\n  \n  }\n\n  // Dataset create\n  const HandleCreate=()=>{\n    if(location?.state?.breadcrumbData){\n      let path = location?.state?.breadcrumbData[0]\n      if(path?.name == \"Dashboard\"){\n        const breadcrumbData = [\n          { name: 'Dashboard', url: '/app/dashboard/saas' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/createDataset\",{breadcrumbData:breadcrumbData})\n      }else if(path?.name == \"Project\"){\n        const breadcrumbData = [\n          { name: 'Project', url: '/app/dashboard/project' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/createDataset\",{breadcrumbData:breadcrumbData})\n      }\n    }\n       \n  }\n\n  const getSearchedCustomerData = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'));\n    const projectId = localStorage?.getItem(\"projId\")\n    if (accessToken !== null) {\n       getSearchProjectDatasets(accessToken,projectId, searchText)\n        .then((res) => {\n          if (res?.status === 200 && res?.data?.results.length>0) {\n            setFilteredDatasets(res?.data?.results);\n            setSearchText('')\n            // console.log('Response from customerlist :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n            setFilteredDatasets(datasets);\n            setSearchText('');\n            NotificationManager.error(\"No dataset found!\")\n          }\n        })\n        .catch((err) => {\n          // console.log('Response from customerlist:', err)\n        })\n    }\n  }\n\n  console.log(\"history==view project \",history)\n  console.log(\"props \",props)\n  console.log(filteredDatasets, \"filteredd datasets\")\n  console.log(location, \"location in view project\")\n  console.log(props, \"proppsss in view project\")\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>Automaton | Customers List</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      {/* <PageTitleBar\n        title={<IntlMessages id=\"sidebar.viewProject\" />}\n        match={props.match}\n      /> */}\n \n      <CustomBreadcrumbs    currentPage={\"View Project\"} data={location?.state?.breadcrumbData} />\n\n\n                <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n             message=\"This will delete your Dataset permanently.\"\n             onConfirm={() => Delete_Datset()}\n             ref={deleteConfirmationDialog} />\n      <RctCollapsibleCard>\n     \n        <div className=\"table-responsive\">\n          <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n            <div className='search-row'>\n              <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n              <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} \n               onClick={getSearchedCustomerData}\n              >Search</Button>\n            </div>\n\n            <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} onClick={()=>HandleCreate()}>Create Dataset</Button>\n\n\n\n\n          </div>\n          <table className=\"table table-middle table-hover mb-0\">\n            <thead>\n              <tr>\n                <th></th>\n                <th>Project ID</th>\n                <th>Dataset Name</th>\n                <th>Date Created</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n\n            {/****** mine filtered Table body, without ternary conditional value  *****/}\n            <tbody>\n              {filteredDatasets &&\n                filteredDatasets.map((dataset, i, data) => {\n                  // let active = user?.is_active\n                  let created_Date = getFormatDate2((dataset?.date_created))\n                  return (\n\n                    <tr key={i}>\n                      <td></td>\n                      <td>{dataset?.project_id}</td>\n                      <td>\n                        <div className=\"media\">\n                          <div className=\"media-body\">\n                            <h5 className=\"mb-5 fw-bold\">{dataset?.dataset_name}</h5>\n                          </div>\n                        </div>\n                      </td>\n                      <td>{created_Date?created_Date: '-'}</td>\n                      <td className=\"list-action d-flex \">\n                    \n                      <VisibilityIcon onClick={()=>handleView(dataset)} />\n                      <EditIcon className=\"mx-2\" onClick={()=> EditModal(dataset)}/> \n                     <DeleteIcon onClick={()=>{DeletModalOpen(dataset)}}/>\n                   \n                    </td>\n                    </tr>\n                  )\n                })\n              }\n\n            </tbody>\n\n          </table>\n          {filteredDatasets.length == 0 && <center style={{ color: \"black\" }}>  Data not available </center>}\n          {\n            datasets?.length > 0 &&\n            <div className='paginationDiv'>\n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={5}\n                pageRangeDisplayed={5}\n                onChange={(e) => handlePageChange(e)}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                hideFirstLastPages={true}\n                totalItemsCount={totalPageCount}\n              />\n            </div>\n          }\n        </div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n\n      <EditDataset selected={selected} Modalopen={openEditDataset} close={()=>setOpenEditDataset(false)} reloadlist={getViewProjectData}/>\n\n\n      {/* Modal for Add New Customer */}\n      {/* <Modal\n        isOpen={addNewUserModal}\n        // toggle={() => onAddUpdateUserModalClose()}\n        className=\"addCustomerModal \"\n\n      >\n        <ModalHeader \n        // toggle={() => onAddUpdateUserModalClose()}\n        >\n          <strong>Welcome</strong>\n        </ModalHeader>\n        <ModalBody>\n          <FormGroup row >\n\n\n            <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n              <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n\n                <span> Username <span className=\"text-danger madatory-field\">*</span></span>\n              </Label>\n              <Input\n                type=\"text\"\n                className=\"input-md\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                sm={10}\n              />\n            </Col>\n\n\n          </FormGroup>\n          <FormGroup row >\n\n\n            <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n              <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n\n                <span> Email Id <span className=\"text-danger madatory-field\">*</span></span>\n              </Label>\n              <Input\n                type=\"text\"\n                className=\"input-md\" \n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                sm={10}\n              />\n            </Col>\n\n\n          </FormGroup>\n        </ModalBody>\n        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n\n          <Button variant=\"contained\" color=\"primary\"\n          // onClick={() => addNewUser()} \n          className=\"py-2 mx-10\" style={{ color: \"#fff\", }} >\n            Send\n          </Button>\n          <Button variant=\"contained\"\n          // onClick={() => onAddUpdateUserModalClose()} \n          className=\"py-2 px-3 bg-danger text-white mx-10\" style={{ cursor: \"pointer\" }}>\n            Cancel\n          </Button>\n        </div>\n      </Modal> */}\n\n\n\n\n      {/* <Modal\n        isOpen={deleteUserModal}\n        className=\"addCustomerModal\"\n      >\n        <ModalBody>\n          Are you sure want to delete {selectedUser?.username} ?\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            // color=\"primary\"\n            style={{ backgroundColor: \"#0b3d45\", color: \"#fff\", borderRadius: \"6px\" }}\n            className=\"text-white\"\n          //  onClick={handleDeleteUser}\n          >\n            Delete\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            className=\"text-white btn-secondary\"\n            onClick={() => setdeleteUserModal(false)}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal> */}\n    </div>\n  )\n}\n","/**\n * agency data\n */\n\n// chart config\nimport ChartConfig from 'Constants/chart-config';\n\n// traffic Status\nexport const trafficStatus = {\n   chartLabels: ['0.00', '1.0', '2.0', '3.0', '4.0', '5.0', '6.0'],\n   chartDatasets: [\n      {\n         label: 'Series A',\n         backgroundColor: ChartConfig.color.primary,\n         borderColor: ChartConfig.color.primary,\n         borderWidth: 1,\n         hoverBackgroundColor: ChartConfig.color.primary,\n         hoverBorderColor: ChartConfig.color.primary,\n         data: [65, 59, 80, 81, 56, 55, 40]\n      },\n      {\n\t\t\t\n         label: 'Series B',\n         backgroundColor: ChartConfig.color.default,\n         borderColor: ChartConfig.color.default,\n         borderWidth: 1,\n         hoverBackgroundColor: ChartConfig.color.default,\n         hoverBorderColor: ChartConfig.color.default,\n         data: [45, 39, 40, 60, 35, 25, 60]\n      }\n   ],\n   onlineSources: '3500',\n   today: '17,020',\n   lastMonth: '20.30%'\n}\n\n// total sales\nexport const totalSales = {\n   label: 'Sales',\n   chartdata: [250, 310, 150, 420, 250, 450],\n   labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n}\n\n// net profit\nexport const netProfit = {\n   label: 'Net Profit',\n   chartdata: [250, 310, 150, 420, 250, 450],\n   labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n}\n\n// tax stats\nexport const taxStats = {\n   label: 'Tax',\n   chartdata: [250, 310, 150, 420, 250, 450],\n   labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n}\n\n// expenses stats\nexport const expenses = {\n   label: 'Expenses',\n   chartdata: [250, 310, 150, 420, 250, 450],\n   labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n}","/**\n * Ecommerce Dashboard\n */\n\nimport React, { useEffect, useState, useRef } from 'react'\nimport { NotificationManager } from 'react-notifications'\nimport Pagination from \"react-js-pagination\";\nimport { Helmet } from \"react-helmet\";\n//  import Button from '@material-ui/core/Button';\nimport {\n  Progress, Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Col,\n  FormFeedback\n} from 'reactstrap';\n\n\n\n\n// intl messages\nimport IntlMessages from '../../../Util/IntlMessages';\nimport DeleteConfirmationDialog from '../../../Components/DeleteConfirmationDialog/DeleteConfirmationDialog';\n\nimport { Avatar } from '@material-ui/core';\n\n// intl messages\n// import IntlMessages from 'Util/IntlMessages';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\n\n\n\n// rct collapsible card\n\n\n// import css file\nimport \"../../../Assets/css/main.css\"\n\n// widgets data\nimport {\n  visitorsData,\n  salesData,\n  ordersData,\n  topSellingProducts,\n  trafficStatus\n} from './data';\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\nimport { str } from 'Constants/stringConst';\nimport { OverallTrafficStatusWidget, SupportRequest } from 'Components/Widgets';\nimport ProjectCard from '../ReuseComponent/ProjectCard';\nimport DoughnutChart from 'Components/Charts/DoughnutChart';\nimport { useHistory } from 'react-router';\nimport { DeleteProject, GetAlLProjectList, GetSearchProjectList } from 'Api';\nimport { getFormatDate2 } from 'Constants/DateFormator';\nimport { BASE_URL } from 'Api/APIConst';\nimport EditProject from '../ReuseComponent/EditProject';\nimport ViewProject from '../ViewProject';\nimport { isNotEmpty } from '@amcharts/amcharts4/.internal/core/utils/Utils';\nimport { ErrorHandling } from 'Constants/ErrorHandling';\nimport CustomBreadcrumbs from '../ReuseComponent/CustomBreadcrumbs';\n\n\nexport default function SaasDashbaord(props) {\n  const { match,location } = props;\n  const history = useHistory();\n  const deleteConfirmationDialog = useRef()\n  const [project, setProject] = useState([])\n  //  const [filteredUsers, setFilteredProject] = useState() // use when the data is coming fom api\n  const [filterProject, setFilteredProject] = useState([])\n  const [searchText, setSearchText] = useState('');\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState('');\n  const [selected, setSelectedItem] = useState({})\n  const type = JSON.parse(localStorage.getItem('user_type'));\n  const [openEditProject, setOpenEditProject] = useState(false)\n\n\n\n  //  if(type === \"admin\"){\n\n  //    history.push(\"app/dashboard/Admin/Dashboard\")\n  //  }\n\n\n\n  const ProjectList = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      GetAlLProjectList(accessToken, activePage)\n        .then((res) => {\n          if (res?.status === 200) {\n            setProject(res?.data?.results);\n            setFilteredProject(res?.data?.results);\n            setTotalPageCount(parseInt(res?.data?.count));\n            console.log('Response from PROJECTlist :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n          }\n        })\n        .catch((err) => {\n\n          ErrorHandling(err)\n\n\n\n          // console.log(\"status of invalid token\", err?.response?.data, err?.response?.status)\n          if (err?.response?.status == 401) {\n            // conditional rendring\n            // localStorage.clear();\n            // history.push(\"/login\");\n            // window.location.reload();\n          } else {\n            // console.log('Response from customerlist:', err)\n          }\n        })\n    }\n  }\n\n\n\n\n  const handlePageChange = (pageNumber) => {\n    // console.log(\"pagination\", pageNumber)\n    if (activePage !== pageNumber) {\n      const accessToken = JSON.parse(localStorage.getItem('token'))\n      if (accessToken !== null) {\n        GetAlLProjectList(accessToken, pageNumber)\n          .then((res) => {\n            if (res?.status === 200) {\n              setProject(res?.data?.results);\n              setFilteredProject(res?.data?.results);\n              setTotalPageCount(parseInt(res?.data?.count));\n              console.log('Response from handle change :', res)\n            } else {\n              // console.log('Response from customerlist:', res)\n            }\n          })\n          .catch((err) => {\n            // console.log('Response from customerlist:', err)\n          })\n      }\n\n      setActivePage(pageNumber)\n    }\n  }\n\n\n  const getSearchedProjectData = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      GetSearchProjectList(accessToken, searchText)\n        .then((res) => {\n          if (res?.status === 200 && res?.data?.results.length > 0) {\n            setFilteredProject(res?.data?.results);\n            setSearchText('')\n            console.log('Response from search  :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n            setFilteredProject(project);\n            setSearchText('');\n            NotificationManager.error(\"No Project found!\")\n          }\n        })\n        .catch((err) => {\n          // console.log('Response from customerlist:', err)\n        })\n    }\n  }\n\n  //  alert(\"hello\")\n  useEffect(() => {\n\n    ProjectList()\n    console.log(\"type\", type);\n  }, [])\n\n  const DeletModalOpen = (item) => {\n    setSelectedItem(item)\n    deleteConfirmationDialog.current.open()\n  }\n\n  const Delete_project = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      DeleteProject(accessToken, selected?.id)\n        .then((res) => {\n          if (res?.status === 200) {\n            deleteConfirmationDialog.current.close()\n            ProjectList()\n            NotificationManager.success(\"Project deleted !\")\n            console.log('Response from search  :', res)\n\n          } else {\n\n\n            NotificationManager.error(\"Project deleting process unsucess!\")\n          }\n        })\n        .catch((err) => {\n          NotificationManager.error(\"Project deleting process unsucess!\")\n        })\n    }\n  }\n\n\n  const EditModal = (item) => {\n    setSelectedItem(item)\n  \n    setOpenEditProject(true)\n  }\n\n const ViewProject=(item)=>{\n   console.log(item,'viewProject iteeemmm in  saaasss aka dashboard' )\n   localStorage.setItem(\"projId\", item?.id)\n\n   const breadcrumbData = [\n    { name: 'Dashboard', url: '/app/dashboard/saas' },\n  ];\n\n  history.push(\"/app/dashboard/viewProject\",{breadcrumbData:breadcrumbData})\n }\n\n\n\n//  const UPLOADER = \"tus\";\n//  const XHR_ENDPOINT = \"\";\n \n//  const RESTORE = false;\n \n//  const uppyDashboard = new Uppy({ logger: debugLogger })\n//    .use(Dashboard, {\n//    inline: true,\n//   //  target: \"Upp\",\n//    showProgressDetails: true,\n//    proudlyDisplayPoweredByUppy: true\n//    })\n \n \n//  switch (UPLOADER) {\n//     case \"xhr\":\n//    uppyDashboard.use(XHRUpload, {\n//      endpoint: XHR_ENDPOINT,\n//      limit: 6,\n//      bundle: true\n//    });\n//    break;\n//    default:\n//  }\n \n//  if (RESTORE) {\n//    uppyDashboard.use(GoldenRetriever, { serviceWorker: true });\n//  }\n \n// //  window.uppy = uppyDashboard;\n \n//  uppyDashboard.on(\"complete\", (result) => {\n//    if (result.failed.length === 0) {\n//    console.log(\"Upload successful\");\n//    } else {\n//    console.warn(\"Upload failed\");\n//    }\n//    console.log(\"successful files:\", result.successful);\n//    console.log(\"failed files:\", result.failed);\n//  });\n\n\n\n\n\n\n\n\n\n\n\n \n  console.log(location, \"location value in saas dashboard\")\n  console.log(props, \"proppsss in dashboard\")\n  return (\n    <div className=\"ecom-dashboard-wrapper\">\n      <Helmet>\n        <title> User Dashboard </title>\n        <meta name=\"description\" content=\"user Dashboard\" />\n      </Helmet>\n      <div className=\"charts-widgets-wrapper\">\n\n        {/* <PageTitleBar title={<IntlMessages id=\"sidebar.dashboard\" />} match={props.match} /> */}\n        <CustomBreadcrumbs    currentPage={\"Dashboard\"} data={location?.state?.breadcrumbData}  />\n        <RctCollapsibleCard\n        // heading={<center> <h2>user Dashboard</h2></center> }\n\n        >\n          <div className=\"d-flex px-2 \" style={{ justifyContent: 'space-between' }}>\n          \n            <div className='search-row'>\n              <input type=\"text\" placeholder='Search' onChange={(e)=> setSearchText(e.target.value)} className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} />\n              <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" onClick={getSearchedProjectData} >Search</Button>\n            </div>\n\n            {/* <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\"  \n               // onClick={(e) => opnAddNewUserModal(e)} \n\n               >Add New Customer</Button> */}\n\n          </div>\n          \n           <EditProject selected={selected} Modalopen={openEditProject} close={()=>setOpenEditProject(false)} reloadlist={ProjectList}/>\n\n        </RctCollapsibleCard>\n       \t\n        <div>\n\n          <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n            message=\"This will delete your project permanently.\"\n            onConfirm={() => Delete_project()}\n            ref={deleteConfirmationDialog} />\n            \n          <div className=\"row \">\n            {filterProject &&\n              filterProject.map((item, i) => {\n\n                let created = getFormatDate2(item.date_created)\n                return <RctCollapsibleCard\n\n                  colClasses=\"col-sm-12 col-md-6 col-lg-4  rounded\"\n\n                  fullBlock\n                  key={i}\n                >\n                  <div className=\"shadow project-card-shadow\">\n                    <section className=\"dark-primary text-white px-3 shadow rounded d-flex  align-items-center \" style={{borderColor:'white', height:\"100px\"}}>\n\n                      <img\n                        src={item?.project_image == null ? `${process.env.PUBLIC_URL}/assets/images/avatars/user-15.jpg` : `${ item.project_image}`}\n                        alt=\"user profile\"\n                        className=\" rounded-circle\"\n                       \n                        width={75}\n                        height={75}\n                      />\n                      <div className=\"ml-4 d-flex flex-column justify-content-center align-items-center\">\n                        <p className=\"project-heading text-left w-100 m-0\">{item.project_name}</p>\n                        <p className=\"project-date text-left w-100 m-0\"> Created by {item.username} on {created}</p>\n                      </div>\n\n\n                    </section>\n                    <section className=\"Project-Card-Main\" style={{height: \"200px\"}}>\n                      <section className=\"px-4 d-flex flex-direction: column align-items-center justify-content-between Project-cart-main\">\n                        <div className=\"Doughnut-in-Project-cart\">\n                          <DoughnutChart />\n                        </div>\n                        <div className='d-flex flex-column' style={{gap: \"5px\"}}>\n                          <p className=\"project-card-dataset-text m-0\">Dataset Details <span className=\"project-card-dataset-box\">{item?.project_dataset}</span></p>\n                          <p className=\"project-card-dataset-text m-0\">Status <span className=\"project-card-Status-box  \"></span></p>\n                        </div>\n\n                      </section>\n                      <section className=\"d-flex flex-direction: column align-items-center justify-content-center\" style={{marginTop:\"22px\"}} >\n                        <Button variant=\"contained\" color=\"primary\" className=\"projectCardButton mx-2\" onClick={() => EditModal(item)} >Edit</Button>\n                        <Button variant=\"contained\" color=\"primary\" className=\"projectCardButton mx-2\" onClick={()=>ViewProject(item)} >View</Button>\n                        <Button variant=\"contained\" color=\"danger\" className=\"projectCardButton mx-2\" onClick={() => { DeletModalOpen(item) }}>Delete</Button>\n\n                      </section>\n\n                    </section>\n\n                  </div>\n\n                </RctCollapsibleCard>\n              })\n            }\n\n\n\n          </div>\n          <div>\n            {\n              project?.length > 0 &&\n              <div className='paginationDiv'>\n                <Pagination\n                  activePage={activePage}\n                  itemsCountPerPage={6}\n                  pageRangeDisplayed={5}\n                  onChange={(e) => handlePageChange(e)}\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  hideFirstLastPages={true}\n                  totalItemsCount={totalPageCount}\n                />\n\n\n              </div>\n            }\n          </div>\n\n\n        </div>\n\n\n\n      </div>\n\n    </div>\n  )\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { EditProjectDetails, UpadatDataset } from 'Api';\n\nconst EditDataset = ({ selected, Modalopen, close,reloadlist }) => {\n    const [open, setOpen] = useState(false)\n    console.log(selected)\n    const [datasetName, setDatasetName] = useState( \"\")\n    const [comment, setComment] = useState(\"\")\n    \n    \n\n\n    useEffect(() => {\n       if(selected){\n        setDatasetName(selected?.dataset_name || \"\")\n        setComment(selected?.comment)\n       }\n\n        console.log(datasetName,comment,\">>>>>.>>>\")\n        //  setImage(item?.project_image)\n        setOpen(Modalopen)\n\n    }, [Modalopen])\n\n\n\n\n   \n    const SaveEditDetails = () => {\n      \n            const accessToken = JSON.parse(localStorage.getItem('token'))\n           if(datasetName != \"\" || comment != \"\"){\n\n               if (accessToken !== null) {\n                   UpadatDataset(accessToken,selected?.id,datasetName,comment)\n                       .then((res) => {\n                           if (res?.status === 200) {\n                            if(reloadlist){\n                               reloadlist()\n                               setOpen(false)\n                               setDatasetName(\"\")\n                               setComment(\"\")\n                              \n                                if(close){\n                                   close()\n                                   }\n                                   NotificationManager.success(\" Datset update suceesfull !\") \n                            }\n                               console.log('Response from update dataset  :', res)\n                           } else {\n                               // console.log('Response from customerlist:', res)\n   \n                               NotificationManager.error(\"Dataset details update failed!\")\n                           }\n                       })\n                       .catch((err) => {\n                           console.log('Response from Upadat datasett:', err)\n                       })\n               }\n           }else{\n            NotificationManager.error(\"All field is empty\")\n           }\n\n    }\n\n\n    return (\n        <Dialog\n            onClose={() => (close(false), setOpen(false))}\n            open={open}\n\n        >\n            <DialogContent style={{ margin: 0, padding: 0 }}>\n                <div className=\"user-profile-widget\">\n                \n                    <div className=\"p-20\">\n                    \n                    <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={(e)=>setDatasetName(e.target.value)}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {(e)=>{setComment(e.target.value)}}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\"  className=\"mx-2 d-flex justify-content-center align-items-center px-3\" onClick={SaveEditDetails}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\"   className=\"mx-2 d-flex justify-content-center align-items-center\"  onClick={() => (close(false), setOpen(false))}>Cancel</Button>\n                               \n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default EditDataset\n"],"sourceRoot":""}