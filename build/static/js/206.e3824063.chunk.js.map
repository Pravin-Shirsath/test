{"version":3,"sources":["Routes/ecommerce/checkout/components/Payment.js","Routes/ecommerce/checkout/components/BillingForm.js","Routes/ecommerce/checkout/components/CheckoutForm.js","Routes/ecommerce/checkout/components/CheckoutItem.js","Routes/ecommerce/checkout/index.js"],"names":["PaymentInfo","props","useState","number","setNumber","name","setName","expiry","setExpiry","cvc","setCvc","focused","setFocused","formValid","setFormValid","handleInputFocus","target","handleInputChange","value","replace","className","preview","Form","FormGroup","Label","for","IntlMessages","id","type","onKeyUp","onFocus","mask","placeholder","Input","maxLength","Button","onClick","onChangeInfo","color","variant","disabled","NotificationManager","success","BillingForm","firstName","lastName","emailId","mobileNumber","addressLine1","addressLine2","country","zipCode","state","billingInformation","setBillingInformation","onChangeBillingInformation","key","billingInfo","row","Col","sm","onChange","e","FormText","isFormValid","onComplete","TabContainer","children","dir","Typography","component","style","padding","withStyles","withTheme","setValue","AppBar","position","Tabs","event","indicatorColor","textColor","Tab","label","Payment","CheckoutItem","setSuccess","cart","useSelector","ecommerce","isCartEmpty","length","autoHeight","autoHeightMin","autoHeightMax","autoHide","map","src","image","alt","width","height","description","brand","productQuantity","price","totalPrice","toFixed","getTotalPrice","Link","to","show","title","btnSize","onConfirm","Checkout","match","PageTitleBar","RctCard","customClasses","noPadding"],"mappings":"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","file":"static/js/206.e3824063.chunk.js","sourcesContent":["/**\n * Payment Component\n */\n\nimport React, { useState } from 'react';\nimport Cards from 'react-credit-cards';\nimport { Form, FormGroup, Input, Label } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport MaskedInput from 'react-text-mask'\nimport { NotificationManager } from 'react-notifications';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction PaymentInfo(props) {\n   const [number, setNumber] = useState();\n   const [name, setName] = useState();\n   const [expiry, setExpiry] = useState();\n   const [cvc, setCvc] = useState();\n   const [focused, setFocused] = useState();\n   const [formValid, setFormValid] = useState();\n   \n   const handleInputFocus = ({ target }) => {\n      setFocused(target.name);\n   };\n\n   const handleInputChange = ({ target }) => {\n      if (name !== '' && number !== '' && expiry !== '' && cvc !== '') {\n         setFormValid(true);\n      } else {\n         setFormValid(false);\n      }\n\n      if (target.name === 'number') {\n         setNumber(target.value.replace(/ /g, ''));\n      }\n      else if (target.name === 'expiry') {\n         setExpiry(target.value.replace(/ |\\//g, ''));\n      }\n      else if (target.name === 'cvc') {\n         setCvc(target.value.replace(/ |\\//g, ''));\n      }\n      else {\n         setName(target.value)\n      }\n   };\n\n   /**\n    * on confirm payment\n    */\n   const confirmPayment = () => {\n      if (formValid) {\n         NotificationManager.success('Payment Confirmed!')\n      }\n   }\n\n   return (\n      <div className=\"payment-wrap\">\n         <div className=\"p-30 mb-30\">\n            <Cards\n               number={number}\n               name={name}\n               expiry={expiry}\n               cvc={cvc}\n               focused={focused}\n               preview={true}\n            />\n         </div>\n         <div className=\"w-80 mx-auto\">\n            <Form>\n               <FormGroup>\n                  <Label for=\"cardNumber\"><IntlMessages id=\"components.cardNumber\" /></Label>\n                  <MaskedInput\n                     type=\"text\"\n                     name=\"number\"\n                     className=\"form-control\"\n                     id=\"cardNumber\"\n                     onKeyUp={handleInputChange}\n                     onFocus={handleInputFocus}\n                     mask={[/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/]}\n                  />\n               </FormGroup>\n               <div className=\"d-flex justify-content-between\">\n                  <FormGroup className=\"w-50 mr-10\">\n                     <Label for=\"expiryDate\"><IntlMessages id=\"components.expiryDate\" /></Label>\n                     <MaskedInput\n                        type=\"text\"\n                        name=\"expiry\"\n                        className=\"form-control\"\n                        id=\"expiryDate\"\n                        placeholder=\"MM/YY\"\n                        onKeyUp={handleInputChange}\n                        onFocus={handleInputFocus}\n                        mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n                     />\n                  </FormGroup>\n                  <FormGroup className=\"w-50 ml-10\">\n                     <Label for=\"cvvNumber\"><IntlMessages id=\"components.cvv\" /></Label>\n                     <Input\n                        type=\"text\"\n                        name=\"cvc\"\n                        id=\"cvvNumber\"\n                        onKeyUp={handleInputChange}\n                        onFocus={handleInputFocus}\n                        maxLength={4}\n                     />\n                  </FormGroup>\n               </div>\n               <FormGroup>\n                  <Label for=\"name\"><IntlMessages id=\"components.nameOnCard\" /></Label>\n                  <Input\n                     type=\"text\"\n                     name=\"name\"\n                     id=\"name\"\n                     onKeyUp={handleInputChange}\n                     onFocus={handleInputFocus}\n                  />\n               </FormGroup>\n            </Form>\n            <div className=\"d-flex justify-content-between\">\n               <Button onClick={props.onChangeInfo} color=\"secondary\" className=\"text-white\" variant=\"contained\">\n                  <IntlMessages id=\"button.back\" />\n               </Button>\n               <Button disabled={!formValid} color=\"primary\" variant=\"contained\" onClick={() => confirmPayment()}><IntlMessages id=\"components.confirmPayment\" /></Button>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default PaymentInfo;\n","/**\n * Billing Form Component\n */\n\nimport React, { useState } from 'react';\nimport { Form, FormGroup, Input, Label, Col, FormText } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction BillingForm(props) {\n   const [billingInformation, setBillingInformation] = useState({\n      firstName: '',\n      lastName: '',\n      emailId: '',\n      mobileNumber: '',\n      addressLine1: '',\n      addressLine2: '',\n      country: '',\n      zipCode: '',\n      state: ''\n   })\n  \n\t/**\n\t * On Change Billing Information\n\t */\n   const onChangeBillingInformation = (key, value) => {\n      let billingInfo = {\n            ...billingInformation,\n      [key]: value\n      }\n      setBillingInformation(billingInfo)\n   }\n\n\t/**\n\t * Function To Check Either The Form Is Valid Or Not\n\t * Return Boolean\n\t */\n   const isFormValid = () => {\n      const { firstName, emailId, mobileNumber, addressLine1, zipCode, country, state } = billingInformation;\n      if (firstName !== '' && emailId !== '' && addressLine1 !== '' && mobileNumber !== '' && zipCode !== '' && country !== '' && state !== '') {\n         return true\n      } else {\n         return false\n      }\n   }\n\n   return (\n      <div className=\"billing-form-warp py-4\">\n         <Form>\n            <FormGroup row>\n               <Col sm={6}>\n                  <Label for=\"firstName\"><IntlMessages id=\"components.firstName\" /><span className=\"text-danger\">*</span></Label>\n                  <Input\n                     type=\"text\"\n                     name=\"first name\"\n                     id=\"firstName\"\n                     className=\"mb-4 mb-sm-0\"\n                     onChange={(e) => onChangeBillingInformation('firstName', e.target.value)}\n                  />\n               </Col>\n               <Col sm={6}>\n                  <Label for=\"lastName\"><IntlMessages id=\"components.lastName\" /></Label>\n                  <Input\n                     type=\"text\"\n                     name=\"last name\"\n                     id=\"lastName\"\n                     onChange={(e) => onChangeBillingInformation('lastName', e.target.value)}\n                  />\n               </Col>\n            </FormGroup>\n            <FormGroup row>\n               <Col sm={6}>\n                  <Label for=\"emailId\"><IntlMessages id=\"components.email\" /><span className=\"text-danger\">*</span></Label>\n                  <Input\n                     type=\"email\"\n                     name=\"mail\"\n                     id=\"emailId\"\n                     className=\"mb-4 mb-sm-0\"\n                     onChange={(e) => onChangeBillingInformation('emailId', e.target.value)}\n                  />\n               </Col>\n               <Col sm={6}>\n                  <Label for=\"contactNumber\"><IntlMessages id=\"components.mobileNumber\" /><span className=\"text-danger\">*</span></Label>\n                  <Input\n                     type=\"tel\"\n                     name=\"number\"\n                     id=\"contactNumber\"\n                     onChange={(e) => onChangeBillingInformation('mobileNumber', e.target.value)}\n                  />\n               </Col>\n            </FormGroup>\n            <FormGroup row>\n               <Col sm={12}>\n                  <Label for=\"address1\"><IntlMessages id=\"components.address\" />1<span className=\"text-danger\">*</span></Label>\n                  <Input\n                     type=\"textarea\"\n                     name=\"address\"\n                     id=\"address1\"\n                     onChange={(e) => onChangeBillingInformation('addressLine1', e.target.value)}\n                  />\n               </Col>\n            </FormGroup>\n            <FormGroup row>\n               <Col sm={12}>\n                  <Label for=\"address2\"><IntlMessages id=\"components.address2Optional\" /></Label>\n                  <Input\n                     type=\"textarea\"\n                     name=\"address\"\n                     id=\"address2\"\n                     onChange={(e) => onChangeBillingInformation('addressLine2', e.target.value)}\n                  />\n               </Col>\n            </FormGroup>\n            <FormGroup row>\n               <Col sm={4}>\n                  <Label for=\"countryName\"><IntlMessages id=\"components.country\" /><span className=\"text-danger\">*</span></Label>\n                  <Input\n                     type=\"text\"\n                     name=\"country\"\n                     id=\"countryName\"\n                     className=\"mb-4 mb-sm-0\"\n                     onChange={(e) => onChangeBillingInformation('country', e.target.value)}\n                  />\n               </Col>\n               <Col sm={4}>\n                  <Label for=\"stateName\"><IntlMessages id=\"components.state\" /><span className=\"text-danger\">*</span></Label>\n                  <Input\n                     type=\"text\"\n                     name=\"state\"\n                     id=\"stateName\"\n                     className=\"mb-4 mb-sm-0\"\n                     onChange={(e) => onChangeBillingInformation('state', e.target.value)}\n                  />\n               </Col>\n               <Col sm={4}>\n                  <Label for=\"zip\"><IntlMessages id=\"components.zip\" /><span className=\"text-danger\">*</span></Label>\n                  <Input\n                     type=\"number\"\n                     name=\"zip\"\n                     id=\"zip\"\n                     onChange={(e) => onChangeBillingInformation('zipCode', e.target.value)}\n                  />\n               </Col>\n            </FormGroup>\n            <FormGroup row className=\"mb-0\">\n               <Col sm={12}>\n                  <Label className=\"ml-4\">\n                     <Input type=\"checkbox\" /><IntlMessages id=\"components.ShippingAddressText\" />\n                  </Label>\n               </Col>\n            </FormGroup>\n            <FormText color=\"danger\">All fields marked with an asterisk (*) are required</FormText>\n         </Form>\n         <div className=\"d-flex justify-content-end\">\n            <Button disabled={!isFormValid()} onClick={props.onComplete} color=\"primary\" variant=\"contained\">\n               <IntlMessages id=\"components.saveContinue\" />\n            </Button>\n         </div>\n      </div>\n   )\n}\nexport default BillingForm;","/**\n * Checkout Form Component\n */\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\n//Component\nimport PaymentInfo from './Payment';\nimport BillingForm from './BillingForm';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction TabContainer({ children, dir }) {\n   return (\n      <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n         {children}\n      </Typography>\n   );\n}\n\nfunction CheckoutForm() {\n   const [value,setValue] = useState(0);\n   \n   const handleChange = (event, value) => {\n      setValue(0);\n   };\n\n   return (\n      <div className=\"checkout-form-wrap\">\n         <div>\n            <AppBar position=\"static\" color=\"default\">\n               <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  variant=\"fullWidth\"\n               >\n                  <Tab\n                     disabled\n                     label={<IntlMessages id=\"components.billingAddress\" />}\n                  />\n                  <Tab\n                     disabled\n                     label={<IntlMessages id=\"components.payment\" />}\n                  />\n               </Tabs>\n            </AppBar>\n            {value === 0 && <TabContainer><BillingForm onComplete={() => setValue(1)} /></TabContainer>}\n            {value === 1 && <TabContainer><PaymentInfo onChangeInfo={() => setValue(0)} /></TabContainer>}\n         </div>\n      </div>\n   );\n}\n\nexport default withStyles(null, { withTheme: true })(CheckoutForm);\n","/**\n * Checkout Item\n */\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport SweetAlert from 'react-bootstrap-sweetalert'\nimport Button from '@material-ui/core/Button';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction CheckoutItem() {\n   const [success, setSuccess] = useState(false);\n   const ecommerce = useSelector(state => state.ecommerce);\n   const { cart } = ecommerce;\n\t/**\n\t* On Confirm dialog\n\t* @param {string} key\n\t*/\n   const onConfirm = (key) => {\n      key(false)\n   }\n\n\t/**\n\t * Open Alert\n\t * @param {key} key\n\t */\n   const openAlert = (key) => {\n      key(true);\n   }\n\n   //Get Total Price\n   const getTotalPrice = () => {\n      let totalPrice = 0;\n      for (const item of cart) {\n         totalPrice += item.totalPrice\n      }\n      return totalPrice.toFixed(2);\n   }\n\n   //Is Cart Empty\n   const isCartEmpty = () => {\n      if (cart.length === 0) {\n         return true;\n      }\n   }\n\n   return (\n      <div className=\"checkout-item-wrap p-4\">\n         <div className=\"border-bottom d-flex justify-content-between align-items-center p-3\">\n            <span className=\"font-weight-bold w-70\"><IntlMessages id=\"components.product\" /></span>\n            <span className=\"font-weight-bold w-15\"><IntlMessages id=\"components.quantity\" /></span>\n            <span className=\"font-weight-bold w-15\"><IntlMessages id=\"widgets.price\" /></span>\n         </div>\n         {isCartEmpty() ? (\n            <div className=\"text-center p-4\">\n               <h3><IntlMessages id=\"components.NoItemFound\" /></h3>\n            </div>\n         ) : (\n               <Scrollbars className=\"rct-scroll\" autoHeight autoHeightMin={100} autoHeightMax={450} autoHide>\n                  <ul className=\"list-unstyled dropdown-body\">\n                     {cart && cart.map((cart, key) => (\n                        <li className=\"d-flex justify-content-between p-3\" key={key}>\n                           <div className=\"media overflow-hidden w-75\">\n                              <div className=\"mr-15\">\n                                 <img src={cart.image} alt=\"products\" className=\"media-object\" width=\"63\" height=\"63\" />\n                              </div>\n                              <div className=\"media-body text-truncate\">\n                                 <span className=\"fs-14 d-block text-truncate\">{cart.name}</span>\n                                 <span className=\"fs-12 d-block text-muted text-truncate\">{cart.description}</span>\n                                 <span className=\"fs-12 d-block text-muted\">{cart.brand}</span>\n                              </div>\n                           </div>\n                           <div className=\"w-10\">\n                              <span className=\"text-muted fs-12 d-block mb-10\">{cart.productQuantity}</span>\n                           </div>\n                           <div className=\"w-15\">\n                              <span className=\"text-muted fs-12 d-block mb-10\">$ {cart.price}</span>\n                           </div>\n                        </li>\n                     ))}\n                  </ul>\n               </Scrollbars>\n            )\n         }\n         <div className=\"border-top d-flex justify-content-between align-items-center py-4\">\n            <span className=\"font-weight-bold text-muted\"><IntlMessages id=\"components.totalPrice\" /></span>\n            <span className=\"font-weight-bold\">$ {getTotalPrice()}</span>\n         </div>\n         <div className=\"d-flex justify-content-end align-items-center\">\n            {!isCartEmpty() ? (\n               <Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => openAlert(setSuccess)}>\n                  <IntlMessages id=\"components.placeOrder\" />\n               </Button>\n            ) : (\n                  <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/app/ecommerce/shop\" className=\"text-white\">\n                     <IntlMessages id=\"components.goToShop\" />\n                  </Button>\n               )\n            }\n         </div>\n         <SweetAlert\n            success\n            show={success}\n            title=\"Your Order Is Successfully Placed !\"\n            btnSize=\"sm\"\n            onConfirm={() => onConfirm(setSuccess)}\n         />\n      </div>\n   )\n}\n\nexport default CheckoutItem;","/**\n * Checkout Page\n */\nimport React from 'react';\n//Components\nimport CheckoutForm from './components/CheckoutForm';\nimport CheckoutItem from './components/CheckoutItem';\n// Card Component\nimport { RctCard, RctCardContent } from 'Components/RctCard';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n\nfunction Checkout(props) {\n   const { match } = props;\n   return (\n      <div className=\"checkout-wrap\">\n         <PageTitleBar title={<IntlMessages id=\"sidebar.checkout\" />} match={match} />\n         <RctCard customClasses=\"overflow-hidden\">\n            <RctCardContent noPadding>\n               <div className=\"row no-gutters\">\n                  <div className=\"col-lg-8 col-md-6 col-sm-12\">\n                     <CheckoutForm />\n                  </div>\n                  <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                     <CheckoutItem />\n                  </div>\n               </div>\n            </RctCardContent>\n         </RctCard>\n      </div>\n   )\n}\n\nexport default Checkout;"],"sourceRoot":""}