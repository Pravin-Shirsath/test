{"version":3,"sources":["Routes/mail/components/EmailListItem.js","Routes/mail/components/EmailListing.js","Routes/mail/components/EmailDetail.js","Routes/mail/components/Inbox.js","Routes/mail/components/SentEmails.js","Routes/mail/components/DraftsEmails.js","Routes/mail/components/SpamEmails.js","Routes/mail/components/TrashEmails.js","Routes/mail/components/EmailListingHeader.js","Routes/mail/components/Folders.js","Routes/mail/components/EmailAppSidebar.js","Routes/mail/components/ComposeEmail.js","Routes/mail/components/EmailSearch.js","Routes/mail/index.js"],"names":["EmailListItem","email","onSelectEmail","handleMarkAsStar","onReadEmail","getTaskLabelNames","className","onClick","Checkbox","checked","selected","IconButton","classnames","starred","from","avatar","src","alt","width","height","Avatar","name","charAt","user_name","textTruncate","email_subject","email_content","received_time","withRouter","props","dispatch","useDispatch","emailApp","useSelector","state","labels","emails","length","map","key","e","stopPropagation","markAsStarEmail","selectEmail","match","history","readEmail","push","url","id","taskLabels","elements","taskLabel","label","value","ele","IntlMessages","email_labels","currentEmail","loading","useEffect","getEmailDetails","setTimeout","hideLoadingIndicator","RctSectionLoader","onNavigateToEmailListing","goBack","onBackPress","onDeleteEmail","deleteEmail","process","href","preventDefault","Input","type","placeholder","Button","variant","color","getInbox","exact","path","component","EmailListing","EmailDetail","getSentEmails","getDraftsEmails","getSpamEmails","getTrashEmails","EmailListingHeader","useState","anchorEl","setAnchorEl","folderMenu","setFolderMenu","labelMenu","setLabelMenu","folders","selectedEmails","handleRequestClose","indeterminate","onChange","selectAll","selectAllEMails","getUnselectedAllEMails","onAllEMailSelect","Tooltip","title","placement","currentTarget","openFolderMenuOption","openAddLabelsMenu","open","onClose","MenuListProps","style","folder","MenuItem","onEmailMoveToFolder","addLabelsIntoEmail","addLabelsIntoMail","autoHide","location","getAppLayout","getScrollHeight","Fragment","to","Inbox","SentEmails","DraftsEmails","SpamEmails","TrashEmails","selectedFolder","List","ListItem","button","navigateTo","handle","icon","filterEmails","filterAllEmails","badgeClass","modules","toolbar","formats","ComposeEmail","setTo","cc","setCc","bcc","setBcc","subject","setSubject","message","setMessage","onChangeFormValue","InputGroup","InputGroupAddon","addonType","InputGroupText","target","sendEmail","emailSentSuccessfully","onSendEmail","Icon","EmailSearch","searchEmailText","FormGroup","updateSearchEmail","searchEmail","onSearchEmail","drawerWidth","useStyles","makeStyles","theme","root","flexGrow","zIndex","overflow","position","display","appBar","marginLeft","direction","marginRight","breakpoints","up","navIconHide","mixins","drawerPaper","content","backgroundColor","palette","background","default","padding","spacing","composeMailNavLink","React","forwardRef","ref","innerRef","MailApp","classes","mobileOpen","setMobileOpen","settings","handleDrawerToggle","getEmails","sendingEmail","rtlLayout","drawer","Helmet","AppBar","Toolbar","Hidden","mdUp","Drawer","anchor","paper","ModalProps","keepMounted","smDown","implementation","Card","CardBody","Folders"],"mappings":"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","file":"static/js/226.9b492696.chunk.js","sourcesContent":["/**\n * Email List Item\n */\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport classnames from 'classnames';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\n\n// helpers functions\nimport { textTruncate } from 'Helpers/helpers';\n\nconst EmailListItem = ({ email, onSelectEmail, handleMarkAsStar, onReadEmail, getTaskLabelNames }) => (\n    <li className=\"d-flex justify-content-between align-items-center list-item\" onClick={onReadEmail}>\n        <div className=\"d-flex align-items-center w-100\">\n            <div className=\"checkbox-wrap\">\n                <Checkbox\n                    checked={email.selected}\n                    onClick={onSelectEmail}\n                />\n            </div>\n            <div className=\"icon-wrap\">\n                <IconButton onClick={handleMarkAsStar} className=\"mx-10 d-none d-sm-block\">\n                    <i className={classnames('zmdi zmdi-star', { 'text-warning': email.starred })}></i>\n                </IconButton>\n            </div>\n            <div className=\"emails media w-100\">\n                <div className=\"avatar-wrap w-10 align-self-center\">\n                    {email.from.avatar !== '' ?\n                        <img src={email.from.avatar} alt=\"mail user\" className=\"rounded-circle mr-15 align-self-center\" width=\"40\" height=\"40\" />\n                        : <Avatar className=\"mr-15 align-self-center\">{email.from.name.charAt(0)}</Avatar>\n                    }\n                </div>\n                <div className=\"media-body d-flex align-items-center w-90\">\n                    <div className=\"d-inline-block w-25\">\n                        <h5 className=\"mb-1\">{email.user_name }</h5>\n                        <span className=\"font-xs d-inline-block\">{textTruncate(email.email_subject, 30)}</span>\n                    </div>\n                    <p className=\"font-xs text-muted w-75 d-inline-block mb-0 mx-4\">{textTruncate(email.email_content, 120)}</p>\n                </div>\n            </div>\n        </div>\n        <div className=\"font-xs text-muted w-10 text-right\">{email.received_time}</div>\n    </li>\n);\n\nexport default EmailListItem;\n","/**\n * Email Listing\n */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\n// redux action\nimport { readEmail, onSelectEmail, markAsStarEmail } from 'Store/Actions';\n// component\nimport EmailListItem from './EmailListItem';\n//Intl Message\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction EmailListing(props){\n   const dispatch = useDispatch();\n   const emailApp = useSelector(state => state.emailApp);\n   const { labels, emails } = emailApp;\n\n   /**\n    * Read Email\n    */\n   const onReadEmail = (email) => {\n      const { match, history } = props;\n      dispatch(readEmail(email));\n      history.push(`${match.url}/${email.id}`);\n   }\n\n    /**\n     * On Select Email\n     */\n   const selectEmail = (e, email) => {\n      e.stopPropagation();\n      dispatch(onSelectEmail(email))                                                                 ;\n   }\n\n    /**\n     * Handle Mark As Star Email\n     */\n   const handleMarkAsStar =(e, email) => {\n      e.stopPropagation();\n      dispatch(markAsStarEmail(email));\n   }\n\n    /**\n     * Function to return task label name\n     */\n   const getTaskLabelNames = (taskLabels) => {\n      let elements = [];\n      for (const taskLabel of taskLabels) {\n         for (const label of labels) {\n            if (label.value === taskLabel) {\n               let ele = <span key={label.value}\n                  className={classnames('badge badge-pill', { 'badge-success': label.value === 1, 'badge-primary': label.value === 2, 'badge-info': label.value === 3, 'badge-danger': label.value === 4 })}\n               >\n                  <IntlMessages id={label.name} />\n               </span>;\n               elements.push(ele);\n            }\n         }\n      }\n      return elements;\n   }\n\n   return (\n      <ul className=\"list-unstyled m-0\">\n         {(emails && emails.length > 0 && emails !== null) ? emails.map((email, key) => (\n            <EmailListItem\n               email={email}\n               handleMarkAsStar={(e) => handleMarkAsStar(e, email)}\n               key={key}\n               onSelectEmail={(e) => selectEmail(e, email)}\n               onReadEmail={() => onReadEmail(email)}\n               getTaskLabelNames={() => getTaskLabelNames(email.email_labels)}\n            />\n         ))\n            :\n            <div className=\"d-flex justify-content-center align-items-center py-50\">\n               <h4>No Emails Found In Selected Folder</h4>\n            </div>\n         }\n      </ul>\n   );\n}\n\nexport default withRouter(EmailListing);\n","/**\n * Email Detail\n */\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Avatar from '@material-ui/core/Avatar';\nimport classnames from 'classnames';\nimport { Input } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\n\n// redux actions\nimport { hideLoadingIndicator, onNavigateToEmailListing, onDeleteEmail } from 'Store/Actions';\n\n//Intl Message\nimport IntlMessages from 'Util/IntlMessages';\n\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader';\n\nfunction EmailDetail(props){\n   const dispatch = useDispatch();\n   const emailApp = useSelector(state => state.emailApp);\n   const { labels, currentEmail, loading } = emailApp;\n   useEffect(() => {\n      getEmailDetails();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   },[])\n\t\n\n\t/**\n\t * Get Email Details By Id\n\t */\n\tconst getEmailDetails = () => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(hideLoadingIndicator());\n\t\t}, 1500);\n\t}\n\n\t/**\n\t * On Back Press Naviagte To Email Listing Page\n\t */\n\tconst onBackPress = () => {\n\t\tconst { history } = props;\n\t\tdispatch(onNavigateToEmailListing());\n\t\thistory.goBack();\n\t}\n\n\t/**\n\t * On Delete Email\n\t */\n\tconst deleteEmail = () => {\n\t\tconst { history } = props;\n\t\tdispatch(onDeleteEmail());\n\t\thistory.goBack();\n\t}\n\n\t/**\n\t * Function to return task label name\n\t */\n\tconst getTaskLabelNames = (taskLabels) => {\n\t\tlet elements = [];\n\t\tfor (const taskLabel of taskLabels) {\n\t\t\tfor (const label of labels) {\n\t\t\t\tif (label.value === taskLabel) {\n\t\t\t\t\tlet ele = <span key={label.value} className={classnames(\"badge badge-pill mx-5 mb-5 mb-md-0\", { 'badge-success': label.value === 1, 'badge-primary': label.value === 2, 'badge-info': label.value === 3, 'badge-danger': label.value === 4 })}><IntlMessages id={label.name} /></span>;\n\t\t\t\t\telements.push(ele);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n   if (loading) {\n      return (\n         <RctSectionLoader />\n      )\n   }\n   return (\n      <div className=\"email-detail-page-warrper\">\n         <div className=\"top-head border-bottom-0 d-flex justify-content-between\">\n            <IconButton onClick={() => onBackPress()}>\n               <ArrowBackIcon />\n            </IconButton>\n            <div className=\"mail-action\">\n               <IconButton>\n                  <i className=\"zmdi zmdi-mail-reply\"></i>\n               </IconButton>\n               <IconButton>\n                  <i className=\"zmdi zmdi-print\"></i>\n               </IconButton>\n               <IconButton onClick={() => deleteEmail()}>\n                  <i className=\"zmdi zmdi-delete\"></i>\n               </IconButton>\n            </div>\n         </div>\n         {currentEmail !== null &&\n            <div>\n               <div className=\"top-head d-flex justify-content-between align-items-center\">\n                  <h5 className=\"mb-0 text-capitalize w-75 d-flex align-items-center\">{currentEmail.email_subject}</h5>\n                  <div className=\"w-25 text-right\">\n                     {getTaskLabelNames(currentEmail.email_labels)}\n                  </div>\n               </div>\n               <div className=\"user-detail d-flex justify-content-between align-items-center py-3 px-4\">\n                  <div className=\"media w-80\">\n                     {currentEmail.from.avatar !== '' ?\n                        <img src={currentEmail.from.avatar} alt=\"user profile\" className=\"mr-20 rounded img-fluid\" width=\"50\" height=\"50\" />\n                        : <Avatar className=\"mr-20 rounded\">{currentEmail.from.name.charAt(0)}</Avatar>\n                     }\n                     <div className=\"media-body\">\n                        <h5 className=\"mb-1\">{currentEmail.from.name}</h5>\n                        <p className=\"mb-0 font-sm\">From <span className=\"text-muted font-xs\">&lt;{currentEmail.from.email}&gt;</span></p>\n                        <p className=\"mb-0 font-sm\">To: <span className=\"text-muted font-xs\">Me</span></p>\n                     </div>\n                  </div>\n                  <span className=\"text-muted w-20 text-right font-xs\">{currentEmail.received_time}</span>\n               </div>\n               <div className=\"mail-detail\">\n                  <div className=\"mb-20\">\n                     <p>{currentEmail.email_content}</p>\n                  </div>\n                  <span className=\"d-block fw-semi-bold font-sm\">Regards,</span>\n                  <span className=\"d-block font-xs text-muted\">{currentEmail.from.name}</span>\n               </div>\n               <div className=\"attachments p-20\">\n                  <div className=\"d-flex justify-content-between\">\n                     <h4>3 Attachments</h4>\n                     <div className=\"mail-action\">\n                        <IconButton>\n                           <i className=\"zmdi zmdi-file\"></i>\n                        </IconButton>\n                        <IconButton>\n                           <i className=\"zmdi zmdi-cloud-download\"></i>\n                        </IconButton>\n                     </div>\n                  </div>\n                  <ul className=\"list-unstyled d-flex\">\n                     <li className=\"mx-2\">\n                     <img src={`${process.env.PUBLIC_URL}/assets/images/img/about-card-1.png`} alt=\"attachments\" className=\"img-fluid mb-10\" width=\"180\" height=\"140\" />\n                        <p className=\"mb-5 font-xs\">Attachment 1.jpg</p>\n                        <div className=\"list-action\">\n                           <a href=\"!#\" onClick={e => e.preventDefault()}><i className=\"zmdi zmdi-download mr-10\"></i></a>\n                           <a href=\"!#\" onClick={e => e.preventDefault()}><i className=\"zmdi zmdi-zoom-in\"></i></a>\n                        </div>\n                     </li>\n                     <li className=\"mx-2\">\n                     <img src={`${process.env.PUBLIC_URL}/assets/images/img/about-card-2.png`} alt=\"attachments\" className=\"img-fluid mb-10\" width=\"180\" height=\"140\" />\n                        <p className=\"mb-5 font-xs\">Attachment 2.jpg</p>\n                        <div className=\"list-action\">\n                           <a href=\"!#\" onClick={e => e.preventDefault()}><i className=\"zmdi zmdi-download mr-10\"></i></a>\n                           <a href=\"!#\" onClick={e => e.preventDefault()}><i className=\"zmdi zmdi-zoom-in\"></i></a>\n                        </div>\n                     </li>\n                     <li className=\"mx-2\">\n                     <img src={`${process.env.PUBLIC_URL}/assets/images/img/about-card-3.png`} alt=\"attachments\" className=\"img-fluid mb-10\" width=\"180\" height=\"140\" />\n                        <p className=\"mb-5 font-xs\">Attachment 3.jpg</p>\n                        <div className=\"list-action\">\n                           <a href=\"!#\" onClick={e => e.preventDefault()}><i className=\"zmdi zmdi-download mr-10\"></i></a>\n                           <a href=\"!#\" onClick={e => e.preventDefault()}><i className=\"zmdi zmdi-zoom-in\"></i></a>\n                        </div>\n                     </li>\n                  </ul>\n               </div>\n               <div className=\"mail-reply-wrap d-flex align-items-center p-20\">\n                  <Input type=\"textarea\" name=\"text\" placeholder=\"Reply\" id=\"exampleText\" className=\"mr-3\" />\n                  <Button variant=\"contained\" color=\"primary\" className=\"bg-primary\">\n                     Send\n                     <i className=\"zmdi zmdi-mail-send ml-2\"></i>\n                  </Button>\n               </div>\n            </div>\n         }\n      </div>\n   );\n}\n\nexport default withRouter(EmailDetail);\n","/**\n * Inbox Emails\n */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, withRouter, Route } from 'react-router-dom';\n\n// components\nimport EmailListing from '../components/EmailListing';\nimport EmailDetail from '../components/EmailDetail';\n\n// redux actions\nimport { getInbox } from 'Store/Actions';\n\nfunction Inbox(props) {\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      dispatch(getInbox());\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   },[]);\n\n   const { match } = props;\n   return (\n      <Switch>\n         <Route exact path={match.url} component={EmailListing} />\n         <Route path={`${match.url}/:id`} component={EmailDetail} />\n      </Switch>\n   );\n}\n\nexport default withRouter(Inbox);\n","/**\n * Sent Emails\n */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, withRouter, Route } from 'react-router-dom';\n\n// components\nimport EmailListing from '../components/EmailListing';\nimport EmailDetail from '../components/EmailDetail';\n\n// redux actions\nimport { getSentEmails } from 'Store/Actions';\n\nfunction SentEmails(props) {\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      dispatch(getSentEmails());\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   },[]);\n\n   const { match } = props;\n\n   return (\n      <Switch>\n         <Route exact path={match.url} component={EmailListing} />\n         <Route path={`${match.url}/:id`} component={EmailDetail} />\n      </Switch>\n   );\n}\n\nexport default withRouter(SentEmails);\n","/**\n * Drafts Emails\n */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, withRouter, Route } from 'react-router-dom';\n\n// components\nimport EmailListing from '../components/EmailListing';\nimport EmailDetail from '../components/EmailDetail';\n\n// redux actions\nimport { getDraftsEmails } from 'Store/Actions';\n\nfunction Drafts(props){\n   const dispatch = useDispatch();\n   useEffect(() => {\n      dispatch(getDraftsEmails);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   },[])\n   \n   const { match } = props;\n   return (\n      <Switch>\n         <Route exact path={match.url} component={EmailListing} />\n         <Route path={`${match.url}/:id`} component={EmailDetail} />\n      </Switch>\n   );\n}\n\nexport default withRouter(Drafts);\n","/**\n * Spam Emails\n */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, withRouter, Route } from 'react-router-dom';\n\n// components\nimport EmailListing from '../components/EmailListing';\nimport EmailDetail from '../components/EmailDetail';\n\n// redux actions\nimport { getSpamEmails } from 'Store/Actions';\n\nfunction SpamEmails(props) {\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      dispatch(getSpamEmails());\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, []);\n  \t\n   const { match } = props;\n   return (\n      <Switch>\n         <Route exact path={match.url} component={EmailListing} />\n         <Route path={`${match.url}/:id`} component={EmailDetail} />\n      </Switch>\n   );\n}\n\nexport default withRouter(SpamEmails);\n","/**\n * Trash Emails\n */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, withRouter, Route } from 'react-router-dom';\n\n// components\nimport EmailListing from '../components/EmailListing';\nimport EmailDetail from '../components/EmailDetail';\n\n// redux actions\nimport { getTrashEmails } from 'Store/Actions';\n\nfunction TrashEmails(props) {\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      dispatch(getTrashEmails());\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, []);\n\n\n   const { match } = props;\n   return (\n      <Switch>\n         <Route exact path={match.url} component={EmailListing} />\n         <Route path={`${match.url}/:id`} component={EmailDetail} />\n      </Switch>\n   )\n}\n\nexport default withRouter(TrashEmails);\n","/**\n * Email Listing Header\n */\nimport React, { useState } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// redux action\nimport {\n   //  updateSearchEmail,\n   //  searchEmail,\n    onDeleteEmail,\n    onEmailMoveToFolder,\n    selectAllEMails,\n    getUnselectedAllEMails,\n    addLabelsIntoEmail\n} from 'Store/Actions';\n\nimport IntlMessage from 'Util/IntlMessages';\n\nfunction EmailListingHeader() {\n   const [anchorEl, setAnchorEl] = useState(null);\n   const [folderMenu, setFolderMenu] = useState(false);\n   const [labelMenu, setLabelMenu] = useState(false);\n   const dispatch = useDispatch();\n   const emailApp = useSelector(state => state.emailApp);\n   const { folders, labels, selectedEmails, emails } = emailApp;\n   /**\n    * On Delete Email\n    */\n   const deleteEmail = () => {\n      dispatch(onDeleteEmail());\n   }\n\n    /**\n     * Opn Folder Menu\n     */\n   const openFolderMenuOption = (e) => {\n      setFolderMenu(true);\n      setAnchorEl(e.currentTarget);\n   }\n\n    /**\n     * On Folder Menu Item Select\n     */\n   const onFolderMenuItemSelect = (id) => {\n      dispatch(onEmailMoveToFolder(id));\n      setAnchorEl(null);\n    }\n\n    /**\n     * Hanlde Request Close\n     */\n   const handleRequestClose = () => {\n      setAnchorEl(null)\n      setLabelMenu(false)\n      setFolderMenu(false);\n   }\n\n    /**\n     * Open Add Labels Menus\n     */\n   const openAddLabelsMenu = (e) => {\n      setAnchorEl(e.currentTarget);\n      setLabelMenu(true);\n   }\n\n    /**\n     * Add Labels Into Mail\n     */\n   const addLabelsIntoMail = (label) => {\n      setAnchorEl(null);\n      setLabelMenu(false);\n      dispatch(addLabelsIntoEmail(label));\n   }\n    /**\n     * Get Email Actions\n     */\n   const getEMailActions = () => {\n      return (\n         <div>\n            <Tooltip id=\"tooltip-move-to\" title=\"Move To\" placement=\"top-start\">\n               <IconButton onClick={(e) => openFolderMenuOption(e)}>\n                  <i className=\"zmdi zmdi-folder\" />\n               </IconButton>\n            </Tooltip>\n            <Tooltip id=\"tooltip-delete\" title=\"Delete\" placement=\"top-start\">\n               <IconButton onClick={() => deleteEmail()}>\n                  <i className=\"zmdi zmdi-delete\" />\n               </IconButton>\n            </Tooltip>\n            <Tooltip id=\"tooltip-add-label\" title=\"Add Labels\" placement=\"top-start\">\n               <IconButton onClick={(e) => openAddLabelsMenu(e)}>\n                  <i className=\"zmdi zmdi-label-alt\" />\n               </IconButton>\n            </Tooltip>\n            <Menu id=\"folder-menu\"\n               anchorEl={anchorEl}\n               open={folderMenu}\n               onClose={handleRequestClose}\n               MenuListProps={{\n                  style: {\n                     width: 150,\n                  },\n               }}>\n               {folders.map(folder =>\n                  <MenuItem key={folder.id}\n                     onClick={() => onFolderMenuItemSelect(folder.id)}\n                  >\n                     <IntlMessage id={folder.title} />\n                  </MenuItem>\n               )}\n            </Menu>\n            <Menu id=\"label-menu\"\n               anchorEl={anchorEl}\n               open={labelMenu}\n               onClose={handleRequestClose}\n               MenuListProps={{\n                  style: {\n                        width: 150,\n                  },\n               }}>\n               {labels.map((label, key) => (\n                  <MenuItem key={key} onClick={() => addLabelsIntoMail(label)}>\n                     <IntlMessage id={label.name} />\n                  </MenuItem>\n               ))}\n            </Menu>\n         </div>\n      );\n   }\n\n    /**\n     * On Search Email\n     */\n   // const onSearchEmail = (e) => {\n   //    dispatch(updateSearchEmail(e.target.value));\n   //    dispatch(searchEmail(e.target.value));\n   // }\n\n    /**\n     * On All Email Select\n     */\n   const onAllEMailSelect = (e) => {\n      const selectAll = selectedEmails < emails.length;\n      if (selectAll) {\n         dispatch(selectAllEMails());\n      } else {\n         dispatch(getUnselectedAllEMails());\n      }\n   }\n   return (\n      <div className=\"top-head\">\n            <div className=\"d-flex justify-content-start\">\n               <Checkbox color=\"primary\"\n                  indeterminate={selectedEmails > 0 && selectedEmails < emails.length}\n                  checked={selectedEmails > 0}\n                  onChange={(e) => onAllEMailSelect(e)}\n                  value=\"SelectMail\"\n               />\n               {(selectedEmails > 0) && getEMailActions()}\n            </div>\n      </div>\n   );\n}\n\nexport default EmailListingHeader;\n\n","/**\n * Email Listing Component\n */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\n\n// helpers\nimport { getAppLayout } from 'Helpers/helpers';\n\n// folders\nimport Inbox from './Inbox';\nimport SentEmails from './SentEmails';\nimport DraftsEmails from './DraftsEmails';\nimport SpamEmails from './SpamEmails';\nimport TrashEmails from './TrashEmails';\n\n// components\nimport EmailListingHeader from './EmailListingHeader';\n\nfunction Folders(props){\n   const emailApp = useSelector(state => state.emailApp);\n\t\n   /**\n\t * Get Scroll Height\n\t */\n   const getScrollHeight = () => {\n      const { location } = props;\n      const appLayout = getAppLayout(location)\n      switch (appLayout) {\n         case 'app':\n            return 'calc(100vh - 128px)';\n         case 'agency':\n            return 'calc(100vh - 312px)';\n         case 'boxed':\n            return 'calc(100vh - 312px)';\n         case 'horizontal':\n            return 'calc(100vh - 178px)';\n         default:\n            break;\n      }\n   }\n\n   const { currentEmail } = emailApp;\n   const { match } = props;\n\n   return (\n      <div className=\"list-wrap\">\n         <Scrollbars\n            className=\"rct-scroll\"\n            autoHide\n            style={{ height: getScrollHeight() }}\n         >\n            <React.Fragment>\n               {currentEmail === null &&\n                  <EmailListingHeader />\n               }\n               <Switch>\n                  <Redirect exact from={`${match.url}/`} to={`${match.url}/inbox`} />\n                  <Route path={`${match.url}/inbox`} component={Inbox} />\n                  <Route path={`${match.url}/sent`} component={SentEmails} />\n                  <Route path={`${match.url}/drafts`} component={DraftsEmails} />\n                  <Route path={`${match.url}/spam`} component={SpamEmails} />\n                  <Route path={`${match.url}/trash`} component={TrashEmails} />\n               </Switch>\n            </React.Fragment>\n         </Scrollbars>\n      </div>\n   );\n}\n\nexport default withRouter(Folders);\n","/**\n* Email App Sidebar\n* Used To Filter Mail List\n*/\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\n// helpers\nimport { getAppLayout } from 'Helpers/helpers';\n\n// actions\nimport { filterEmails } from 'Store/Actions';\n\n//Intl Message\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction EmailAppSidebar(props){\n   const dispatch = useDispatch();\n   const emailApp = useSelector(state => state.emailApp);\n\t/**\n\t * Navigate To Folder Emails\n\t */\n\tconst navigateTo = (key) => {\n\t\tconst { match, history } = props;\n\t\thistory.push(`${match.url}/folder/${key}`);\n\t}\n\n\t/**\n\t * Filter Emails\n\t */\n\tconst filterAllEmails = (label) => {\n\t\tdispatch(filterEmails(label));\n\t}\n\n\t/**\n\t * Get Scroll Height\n\t */\n\tconst getScrollHeight = () => {\n\t\tconst { location } = props;\n\t\tconst appLayout = getAppLayout(location)\n\t\tswitch (appLayout) {\n\t\t\tcase 'app':\n\t\t\t\treturn 'calc(100vh - 288px)';\n\t\t\tcase 'agency':\n\t\t\t\treturn 'calc(100vh - 416px)';\n\t\t\tcase 'boxed':\n\t\t\t\treturn 'calc(100vh - 416px)';\n\t\t\tcase 'horizontal':\n\t\t\t\treturn 'calc(100vh - 333px)';\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n   const { folders, selectedFolder, labels } = emailApp\n   return (\n      <Scrollbars\n         className=\"rct-scroll\"\n         autoHide\n         style={{ height: getScrollHeight() }}\n      >\n         <div className=\"sidebar-filters-wrap\">\n            <List className=\"p-0 filters list-unstyled\">\n               {folders.map((folder, key) => (\n                  <ListItem\n                     button\n                     key={key}\n                     onClick={() => navigateTo(folder.handle)}\n                     className={classnames({ 'item-active': selectedFolder === folder.id })}>\n                     <i className={`mr-20 zmdi zmdi-${folder.icon}`} />\n                     <span className=\"filter-title\">\n                        <IntlMessages id={folder.title} />\n                     </span>\n                  </ListItem>\n               ))}\n            </List>\n            <h6 className=\"sidebar-title px-20 pt-20\">Labels</h6>\n            <List className=\"list-unstyled filters p-0\">\n               {labels && labels.map((label, key) => (\n                  <ListItem button key={key} onClick={() => filterAllEmails(label)}>\n                     <span className={`badge-${label.badgeClass} ladgend`}></span>\n                     <span className=\"filter-title\"><IntlMessages id={label.name} /></span>\n                  </ListItem>\n               ))}\n            </List>\n         </div>\n      </Scrollbars>\n   );\n}\n\n\nexport default withRouter(EmailAppSidebar);\n","/**\n * Compose Email Component\n */\nimport React, { useState } from 'react';\nimport { InputGroup, InputGroupAddon, Input, InputGroupText } from 'reactstrap';\nimport ReactQuill from 'react-quill';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { useDispatch } from 'react-redux';\n\n// actions\nimport { sendEmail, emailSentSuccessfully } from 'Store/Actions';\n\n// intl message\nimport IntlMessages from 'Util/IntlMessages';\n\n// modules\nconst modules = {\n\ttoolbar: [\n\t\t[{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\t\t[{ 'font': [] }],\n\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t[{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n\t\t['link', 'image'],\n\t\t['clean'],\n\t\t[{ 'align': [] }]\n\t],\n};\n\n// formats\nconst formats = [\n\t'header',\n\t'font',\n\t'bold', 'italic', 'underline', 'strike', 'blockquote',\n\t'list', 'bullet', 'indent',\n\t'link', 'image', 'align'\n];\n\nfunction ComposeEmail(props) {\n   const [to, setTo] = useState('');\n   const [cc,setCc] = useState('');\n   const [bcc,setBcc] = useState('');\n   const [subject, setSubject] = useState('');\n   const [message, setMessage] = useState('');\n\n   const dispatch = useDispatch();\n   \n\t/**\n\t * On Send Email\n\t */\n\tconst onSendEmail = () => {\n\t\tconst { history } = props;\n\t\tif (to !== '' && subject !== '' && message !== '') {\n\t\t\tdispatch(sendEmail());\n\t\t\thistory.push('/app/mail/folder/sent');\n\t\t\tsetTimeout(() => {\n            dispatch(emailSentSuccessfully());\n\t\t\t}, 2000);\n\t\t}\n\t}\n\n\t/**\n\t * On Change Form Values\n\t */\n\tconst onChangeFormValue = (key, value) => {\n      key(value);\n\t}\n\n   return (\n      <div className=\"compose-email-container\">\n         <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n               <InputGroupText>To</InputGroupText>\n            </InputGroupAddon>\n            <Input\n               name=\"to\"\n               type=\"email\"\n               value={to}\n               onChange={(e) => onChangeFormValue(setTo, e.target.value)}\n            />\n         </InputGroup>\n         <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n               <InputGroupText>CC</InputGroupText>\n            </InputGroupAddon>\n            <Input\n               name=\"cc\"\n               type=\"email\"\n               value={cc}\n               onChange={(e) => onChangeFormValue(setCc, e.target.value)}\n            />\n         </InputGroup>\n         <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n               <InputGroupText>BCC</InputGroupText>\n            </InputGroupAddon>\n            <Input\n               name=\"bcc\"\n               type=\"email\"\n               value={bcc}\n               onChange={(e) => onChangeFormValue(setBcc,e.target.value)}\n            />\n         </InputGroup>\n         <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n               <InputGroupText>Subject</InputGroupText>\n            </InputGroupAddon>\n            <Input\n               name=\"subject\"\n               type=\"text\"\n               value={subject}\n               onChange={(e) => onChangeFormValue(setSubject, e.target.value)}\n            />\n         </InputGroup>\n         <ReactQuill\n            modules={modules}\n            formats={formats}\n            value={message}\n            onChange={(value) => onChangeFormValue(setMessage,value)}\n         />\n         <div className=\"compose-email-actions p-10\">\n            <Button className=\"btn-primary text-white\" onClick={() => onSendEmail()}>\n               <Icon className=\"mr-10\">send</Icon>\n               <IntlMessages id=\"widgets.send\" />\n            </Button>\n         </div>\n      </div>\n   );\n}\n\nexport default ComposeEmail;\n","/**\n * Eamil Search\n */\nimport React from 'react';\nimport { FormGroup, Input } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// actions\nimport { searchEmail, updateSearchEmail } from 'Store/Actions';\n\nfunction EmailSearch(){\n   const dispatch = useDispatch();\n   const emailApp = useSelector(state => state.emailApp);\n    /**\n     * On Search Email\n     */\n   const onSearchEmail = (e) => {\n      dispatch(updateSearchEmail(e.target.value));\n      dispatch(searchEmail(e.target.value));\n   }\n\n   const { searchEmailText } = emailApp;\n   return (\n      <FormGroup className=\"mb-0\">\n         <Input\n            type=\"text\"\n            name=\"search\"\n            id=\"search-todo\"\n            placeholder=\"Search Mail\"\n            onChange={(e) => onSearchEmail(e)}\n            value={searchEmailText}\n         />\n      </FormGroup>\n   );\n}\n\nexport default EmailSearch;","/**\n * Mail App\n */\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, AppBar, Toolbar, IconButton, Button, Hidden } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardBody } from 'reactstrap';\nimport { Redirect, Route, Switch, NavLink } from 'react-router-dom';\nimport IntlMessages from 'Util/IntlMessages';\nimport { Helmet } from \"react-helmet\";\n// actions\nimport { getEmails } from 'Store/Actions';\n\n// components\nimport Folders from './components/Folders';\nimport EmailAppSidebar from './components/EmailAppSidebar';\nimport ComposeEmail from './components/ComposeEmail';\nimport EmailSearch from './components/EmailSearch';\n\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      flexGrow: 1,\n      height: 'auto',\n      zIndex: 1,\n      overflow: 'hidden',\n      position: 'relative',\n      display: 'flex',\n      width: '100%',\n   },\n   appBar: {\n      position: 'absolute',\n      marginLeft: theme.direction !== 'rtl' ? drawerWidth : 0,\n      marginRight: theme.direction === 'rtl' ? drawerWidth : 0,\n      [theme.breakpoints.up('md')]: {\n         width: `calc(100% - ${drawerWidth}px)`,\n      }\n   },\n   navIconHide: {\n      [theme.breakpoints.up('md')]: {\n         display: 'none',\n      },\n   },\n   toolbar: theme.mixins.toolbar,\n   drawerPaper: {\n      width: drawerWidth,\n      [theme.breakpoints.up('md')]: {\n         position: 'relative',\n      },\n      backgroundColor: 'transparent',\n   },\n   content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(3),\n   },\n}));\n\nconst composeMailNavLink = React.forwardRef((props, ref) => (\n   <NavLink innerRef={ref} to=\"/mail/compose\" {...props} />\n));\n\nfunction MailApp(props) {\n   const classes = useStyles();\n   const [mobileOpen, setMobileOpen] = useState(false);\n   const emailApp = useSelector(state => state.emailApp);\n   const settings = useSelector(state => state.settings);\n\n   const dispatch = useDispatch();\n\n   const handleDrawerToggle = () => {\n      setMobileOpen(!mobileOpen);\n   };\n\n   useEffect(() => {\n      dispatch(getEmails());\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [])\n   \n   const { sendingEmail } = emailApp;\n   const { match } = props\n   const { rtlLayout } = settings\n   const drawer = (\n      <div className=\"mail-sidebar-wrap\">\n         <Helmet>\n            <title>Automaton | Mail App</title>\n            <meta name=\"description\" content=\"Automaton Maps\" />\n         </Helmet>\n         <div className=\"user-wrap d-flex justify-content-between\">\n            <div className=\"media align-items-center\">\n               <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/avatars/user-15.jpg`}\n                  alt=\"user-profile\"\n                  className=\"img-fluid rounded-circle mr-3\"\n                  width=\"60\"\n                  height=\"60\"\n               />\n               <div className=\"media-body\">\n                  <h5 className=\"text-white mb-0\">Braxton Hudson</h5>\n                  <p className=\"text-white font-xs mb-0\">braxton@example.com</p>\n               </div>\n            </div>\n         </div>\n         <div className=\"p-20\">\n            <Button\n               // component={NavLink}\n               component={composeMailNavLink}\n               to={`${match.url}/compose`}\n               variant=\"contained\"\n               className=\"bbbb btn-danger text-white btn-block font-weight-bold\"\n            >\n               <i className=\"zmdi zmdi-edit mr-10 font-lg\"></i>\n               <IntlMessages id=\"widgets.composeMail\" />\n            </Button>\n         </div>\n         <EmailAppSidebar />\n      </div>\n   );\n   return (\n      <div className=\"rct-mail-wrapper\">\n         <div className={classes.root}>\n            <AppBar className={classes.appBar}>\n               <Toolbar className=\"d-flex justify-content-between\">\n                  <IconButton\n                     color=\"inherit\"\n                     aria-label=\"open drawer\"\n                     onClick={handleDrawerToggle}\n                     className={classes.navIconHide}>\n                     <MenuIcon />\n                  </IconButton>\n                  <EmailSearch />\n                  <div className=\"d-flex align-items-center\">\n                     <IconButton className=\"mx-1 btn-sm\">\n                        <i className=\"zmdi zmdi-arrow-left\"></i>\n                     </IconButton>\n                     <IconButton className=\"mx-1 btn-sm\">\n                        <i className=\"zmdi zmdi-arrow-right\"></i>\n                     </IconButton>\n                  </div>\n               </Toolbar>\n            </AppBar>\n            <Hidden mdUp className=\"mail-list-wrap\">\n               <Drawer\n                  variant=\"temporary\"\n                  anchor={rtlLayout === false ? 'right' : 'left'}\n                  open={mobileOpen}\n                  onClose={handleDrawerToggle}\n                  classes={{\n                     paper: classes.drawerPaper,\n                  }}\n                  ModalProps={{\n                     keepMounted: true,\n                  }}\n               >\n                  {drawer}\n               </Drawer>\n            </Hidden>\n            <Hidden smDown implementation=\"css\" className=\"mail-list-wrap\">\n               <Drawer\n                  variant=\"permanent\"\n                  open\n                  classes={{\n                     paper: classes.drawerPaper,\n                  }}\n               >\n                  {drawer}\n               </Drawer>\n            </Hidden>\n            <div className={`bg-transparent ${classes.content}`}>\n               <div className={classes.toolbar} />\n               {sendingEmail &&\n                  <div className=\"sending-email-loader d-flex justify-content-center\">\n                     <Card>\n                        <CardBody>\n                           <h5>Sending.....</h5>\n                        </CardBody>\n                     </Card>\n                  </div>\n               }\n               <Switch>\n                  <Redirect exact from={`${match.url}/`} to={`${match.url}/folder`} />\n                  <Route path={`${match.url}/folder`} component={Folders} />\n                  <Route path={`${match.url}/compose`} component={ComposeEmail} />\n               </Switch>\n            </div>\n         </div>\n      </div>\n   );\n}\n\n\nexport default MailApp;\n"],"sourceRoot":""}