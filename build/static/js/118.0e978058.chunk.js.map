{"version":3,"sources":["Routes/dashboard/Admin/CustomerManagement/index.js","../node_modules/react-toggle-switch/dist/scripts/switch.min.js"],"names":["CustomerManagement","props","useHistory","useRef","useState","users","setUsers","filteredUsers","setFilteredUsers","searchText","setSearchText","activePage","setActivePage","totalPageCount","setTotalPageCount","selectedUser","loading","setLoading","setAddNewUserModal","updateNewUserModal","setupdateNewUserModal","deleteUserModal","setdeleteUserModal","username","email","first_name","last_name","mobile_number","addNewUserDetail","setAddNewUserDetail","openViewUserDialog","setOpenViewUserDialog","useEffect","localStorage","getItem","getCustomersListData","accessToken","JSON","parse","getCustomerList","then","res","status","data","results","parseInt","count","catch","err","response","onChangeAddNewUserDetails","key","value","className","name","content","title","id","match","fullBlock","style","justifyContent","type","placeholder","border","borderBottom","onChange","e","target","variant","color","cursor","onClick","getSearchedCustomer","length","NotificationManager","error","map","user","i","active","is_active","phone","display","gap","CustomerDisable","console","log","setTimeout","success","CustomerEnable","handleToggleUser","on","itemsCountPerPage","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","isOpen","toggle","for","backgroundColor","borderRadius","regexName","test","updateCustomerDetails","onClose","open","user_type","Object","defineProperty","exports","_propTypes2","_interopRequireDefault","require","_react2","a","__esModule","default","propTypes","bool","isRequired","func","enabled","string","Switch","b","c","d","onDisabledClick","f","g","children","h","join","createElement","defaultProps"],"mappings":"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","file":"static/js/118.0e978058.chunk.js","sourcesContent":["/**\n * User Management Page\n */\n import React, { useEffect, useState, useRef } from 'react'\n import { Helmet } from 'react-helmet'\n import FormControlLabel from '@material-ui/core/FormControlLabel'\n import Button from '@material-ui/core/Button'\n import Checkbox from '@material-ui/core/Checkbox'\nimport Switch from 'react-toggle-switch';\n\n import {\n   \n   Modal,\n   ModalHeader,\n   ModalBody,\n   ModalFooter,\n   Input,\n   Form,\n   FormGroup,\n   Label,\n } from 'reactstrap'\n import Dialog from '@material-ui/core/Dialog'\n import DialogContent from '@material-ui/core/DialogContent'\n import { NotificationManager } from 'react-notifications'\n import Pagination from \"react-js-pagination\";\n \n import { Link, useHistory } from 'react-router-dom';\n \n // delete confirmation dialog\n import DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n // add new user form\n//  import AddNewUserForm from './AddNewUserForm'\n // update user form\n//  import UpdateUserForm from './UpdateUserForm'\n // page title bar\n import PageTitleBar from './../../../../Components/PageTitleBar/PageTitleBar'\n // intl messages\n import IntlMessages from '../../../../Util/IntlMessages'\n // rct card box\n import RctCollapsibleCard from './../../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n // rct section loader\n import RctSectionLoader from '../../../../Components/RctSectionLoader/RctSectionLoader'\n import '../../../.././Assets/css/user.css'\n import {\n   addNewCustomer,\n   getCustomerList,\n   deleteCustomerDetails,\n   updateCustomerDetails,\n   getSearchedCustomer,\n   CustomerDisable,\n   CustomerEnable,\n   \n } from '../../../.././Api/'\n \n export default function CustomerManagement(props) {\n   const history = useHistory();\n   const deleteConfirmationDialog = useRef()\n  //  const [users, setUsers] = useState() // use when data is coming from api\n  const [users, setUsers] = useState([])\n  //  const [filteredUsers, setFilteredUsers] = useState() // use when the data is coming fom api\n   const [filteredUsers, setFilteredUsers] = useState([])\n   const [searchText, setSearchText] = useState('');\n   const [activePage , setActivePage] = useState(1)\n   const [totalPageCount, setTotalPageCount] = useState('');\n   \n   const [selectedUser, setSelectedUser] = useState(null)\n   const [loading, setLoading] = useState(false)\n   const [addNewUserModal, setAddNewUserModal] = useState(false)\n   const [updateNewUserModal, setupdateNewUserModal] = useState(false)\n   const [deleteUserModal, setdeleteUserModal] = useState(false)\n  \n \n   const [addNewUserDetail, setAddNewUserDetail] = useState({\n     username: '',\n     email: '',\n     first_name: '',\n     last_name: '',\n     mobile_number: '',\n   })\n \n   const [updateUserDetail, setUpdateUserDetail] = useState({\n     first_name: '',\n     last_name: '',\n     mobile_number: '',\n   })\n \n\n   \n   const [openViewUserDialog, setOpenViewUserDialog] = useState(false)\n   const [editUser, setEditUser] = useState(null)\n   const [selectedUsers, setSelectedUsers] = useState(0)\n   const [viewDetails, setViewDetails] = useState()\n \n   useEffect(() => {\n     const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n     // conditional rendring\n     // if(isLoggedInBool !== \"true\"){\n     //   history.push(\"/login\")\n     //     localStorage.clear();\n     // } else {\n       getCustomersListData();\n     // }\n   }, [])\n \n   const getCustomersListData = () => {\n     const accessToken = JSON.parse(localStorage.getItem('token'))\n     if (accessToken !== null) {\n       getCustomerList(accessToken, activePage)\n         .then((res) => {\n           if (res?.status === 200) {\n             setUsers(res?.data?.results);\n             setFilteredUsers(res?.data?.results);\n             setTotalPageCount(parseInt(res?.data?.count));\n             // console.log('Response from customerlist :', res)\n           } else {\n             // console.log('Response from customerlist:', res)\n           }\n         })\n         .catch((err) => {\n           // console.log(\"status of invalid token\", err?.response?.data, err?.response?.status)\n           if(err?.response?.status == 401){\n           // conditional rendring\n             // localStorage.clear();\n             // history.push(\"/login\");\n             // window.location.reload();\n           } else {\n             // console.log('Response from customerlist:', err)\n           }\n         })\n     }\n   }\n \n \n \n   const getSearchedCustomerData = () => {\n     const accessToken = JSON.parse(localStorage.getItem('token'))\n     if (accessToken !== null) {\n       getSearchedCustomer(accessToken, searchText)\n         .then((res) => {\n           if (res?.status === 200 && res?.data?.results.length>0) {\n             setFilteredUsers(res?.data?.results);\n             setSearchText('')\n             // console.log('Response from customerlist :', res)\n           } else {\n             // console.log('Response from customerlist:', res)\n             setFilteredUsers(users);\n             setSearchText('');\n             NotificationManager.error(\"No user found!\")\n           }\n         })\n         .catch((err) => {\n           // console.log('Response from customerlist:', err)\n         })\n     }\n   }\n \n   /**\n    * On Delete\n    */\n   const onDelete = (data) => {\n     setdeleteUserModal(true)\n     setSelectedUser(data)\n   }\n \n   // API Call For delete User\n   const handleToggleUser = (user,e) => {\n   \n \n     const accessToken = JSON.parse(localStorage.getItem('token'))\n     if (accessToken !== null) {\n      \n        if(user?.is_active){\n         \n          CustomerDisable(accessToken,user.id)\n          .then((res) => {\n            if (res?.status === 200) {\n              setdeleteUserModal(false)\n              setLoading(true)\n               console.log('Response', res)\n              setTimeout(() => {\n                setLoading(false)\n                getCustomersListData()\n                NotificationManager.success('User disable successfully  !! ')\n              }, 2000)\n            } else if (res?.status === 400) {\n              setdeleteUserModal(false)\n              NotificationManager.error('Error while disable user')\n            } else {\n              setdeleteUserModal(false)\n              NotificationManager.error('Error while disable user')\n            }\n          })\n          .catch((err) => {\n            setdeleteUserModal(false)\n            NotificationManager.error('Error while disable user')\n          })\n        }else{\n         \n          CustomerEnable(accessToken,user.id)\n          .then((res) => {\n            if (res?.status === 200) {\n              setdeleteUserModal(false)\n              setLoading(true)\n               console.log('Response', res)\n              setTimeout(() => {\n                setLoading(false)\n                getCustomersListData()\n                NotificationManager.success('User enable successfully  !! ')\n              }, 2000)\n            } else if (res?.status === 400) {\n              setdeleteUserModal(false)\n              NotificationManager.error('Error while enable user')\n            } else {\n              setdeleteUserModal(false)\n              NotificationManager.error('Error while enable user')\n            }\n          })\n          .catch((err) => {\n            setdeleteUserModal(false)\n            NotificationManager.error('Error while enable user')\n          })\n        }\n\n    \n     }\n   }\n \n   /**\n    * Open Add New User Modal\n    */\n   const opnAddNewUserModal = (e) => {\n     e.preventDefault()\n     setAddNewUserModal(true)\n   }\n \n   const opnUpdateUserModal = (user) => {\n     // e.preventDefault()\n     // console.log(\"open update user modal function ran\")\n     setupdateNewUserModal(true)\n     setAddNewUserDetail(user)\n     setSelectedUser(user)\n     // console.log(\"update user\",user)\n   }\n \n   /**\n    * On Change Add New User Details\n    */\n   const onChangeAddNewUserDetails = (key, value) => {\n     setAddNewUserDetail({\n       ...addNewUserDetail,\n       [key]: value,\n     })\n   }\n \n   /**\n    * Add New User\n    */\n   const addNewUser = () => {\n     const {username, email, first_name, last_name, mobile_number} = addNewUserDetail;\n     let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n     let regexName = /^[a-zA-Z]{1,30}$/; // only alpha, no space, min-1, max-30\n     let regexContact = /^\\d{10}$/; // only number 0-9 length-10\n \n     if (username !== '' && email !== '' && first_name !== '' && last_name !== '' && mobile_number !== '') {\n       if(regexEmail.test(email.trim(\"\")) === true){\n         if(regexName.test(first_name.trim(\"\")) === true){\n           if(regexName.test(last_name.trim(\"\")) === true){\n             if(regexContact.test(mobile_number) === true){\n               const accessToken = JSON.parse(localStorage.getItem('token'))\n               if (accessToken !== null) {\n                 addNewCustomer(accessToken, username.toLowerCase(), email.toLowerCase(), first_name, last_name, mobile_number,)\n                   .then((res) => {\n                     if (res?.status === 200) {\n                       setAddNewUserModal(false)\n                       setLoading(true)\n \n                       setTimeout(() => {\n                         setLoading(false)\n                         getCustomersListData()\n                         NotificationManager.success(res?.data?.message)\n                       }, 2000)\n \n                       setAddNewUserDetail({\n                         username: '',\n                         email: '',\n                         first_name: '',\n                         last_name: '',\n                         mobile_number: '',\n                       })\n \n                       console.log('Response from addcustomer:', res)\n                     }\n                   })\n                   .catch((err) => {\n                     // console.log(err, \"errorrr\")\n                     // console.log(err?.response, \"errorrr resposne\")\n                     // console.log(err?.response?.data, \"errorrr resposne\")\n \n                     if(err?.response?.status === 400){\n                       let emailError = err?.response?.data?.email?.[0];\n                       let userNameError = err?.response?.data?.username?.[0];\n \n                       if(emailError && userNameError){\n                         NotificationManager.error(emailError);\n                         NotificationManager.error(userNameError);\n                       } else if(emailError){\n                         NotificationManager.error(emailError);\n                       } else if(userNameError){\n                         NotificationManager.error(userNameError);\n                       }\n                     } else if(err?.response?.status === 500){\n                       NotificationManager.error(\"Internal server error !\");\n                     }\n                   })\n               }\n             } else {\n               NotificationManager.error('Mobile Number must be 10 digits!');\n             }\n           } else {\n             NotificationManager.error('Last name must contain only alphabet and no spacings!');\n           }\n         } else {\n           NotificationManager.error('First name must contain only alphabet and no spacings!');\n         }   \n       } else {\n         NotificationManager.error('Invalid email address format!');\n       }\n     } else {\n       NotificationManager.error('Please provide all customer details')\n     }\n   }\n \n   /**\n    * Update User\n    */\n   const updateUser = () => {\n     // console.log('Edit user:', addNewUserDetail)\n     const { first_name, last_name, mobile_number, id } = addNewUserDetail\n     let regexName = /^[a-zA-Z]{1,30}$/; // only alpha, no space, min-1, max-30\n     let regexContact = /^\\d{10}$/; // only number 0-9 length-10\n \n     if (first_name !== '' && last_name !== '' && mobile_number !== '') {\n       if(regexName.test(first_name) === true){\n         if(regexName.test(last_name) === true){\n           if(regexContact.test(mobile_number) === true){\n             const accessToken = JSON.parse(localStorage.getItem('token'))\n             if (accessToken !== null) {\n               updateCustomerDetails(accessToken,first_name, last_name, mobile_number, id)\n                 .then((res) => {\n                   if (res?.status === 200) {              \n                     setupdateNewUserModal(false)\n                     setLoading(true)\n                     setTimeout(() => {\n                       setLoading(false)\n                       getCustomersListData();\n                       NotificationManager.success('Updated user successfully!');\n                     }, 2000)\n                     setAddNewUserDetail({\n                       username: '',\n                       email: '',\n                       first_name: '',\n                       last_name: '',\n                       mobile_number: '',\n                     })\n                     console.log('Response from updatecustomer:', res)\n                   } else if (res?.status === 400) {\n                     setAddNewUserModal(false)\n                     NotificationManager.error(res?.data?.email, res?.data?.username)\n                   } else {\n                     setAddNewUserModal(false)\n                     NotificationManager.error('Error while updating customer')\n                   }\n                 })\n                 .catch((err) => {\n                   NotificationManager.error('Error while updating customer')\n                 })\n             }\n           } else {\n             NotificationManager.error('Mobile Number must be 10 digits!');\n           }\n         } else {\n           NotificationManager.error('Last name must contain only alphabet and no spacings!');\n         }\n       } else {\n         NotificationManager.error('First name must contain only alphabet and no spacings!');\n       }\n     } else {\n       NotificationManager.error('Please provide all customer details')\n     }\n   }\n \n   const handleUpdateCancel = () => {\n     setupdateNewUserModal(false)\n     setAddNewUserDetail({\n       username: '',\n       email: '',\n       first_name: '',\n       last_name: '',\n       mobile_number: '',\n     })\n   }\n \n   // View User Details\n   const viewUserDetail = (data) => {\n     console.log('User information:', data)\n     setOpenViewUserDialog(true)\n     setSelectedUser(data)\n   }\n \n   /**\n    * On Edit User\n    */\n   const onEditUser = (user) => {\n     setupdateNewUserModal(true)\n     setEditUser(user)\n   }\n \n   /**\n    * On Add & Update User Modal Close\n    */\n   const onAddUpdateUserModalClose = () => {\n     setAddNewUserModal(false)\n     // setEditUser(null)\n     setAddNewUserDetail({\n       username: '',\n       email: '',\n       first_name: '',\n       last_name: '',\n       mobile_number: '',\n     })\n   }\n \n   /**\n    * On Update User Details\n    */\n   const onUpdateUserDetails = (key, value) => {\n     setUpdateUserDetail({\n       ...updateUserDetail,\n       [key]: value,\n     })\n   }\n \n \n   const handleSearchData = () => {\n     // console.log(\"Search Text\", searchText,filteredUsers)\n     if (searchText) {\n       const newData = users.filter(item => {\n         const itemData = item.username ? item.username.toUpperCase() : ''.toUpperCase();\n         const textData = searchText.toUpperCase();\n         return itemData.indexOf(textData) > -1;\n       });\n       setFilteredUsers(newData);\n       setSearchText('')\n     } else {\n       setFilteredUsers(users);\n       // setsearch(text);\n     }\n   }\n \n   const handlePageChange = (pageNumber) => {\n     // console.log(\"pagination\", pageNumber)\n        if (activePage !== pageNumber) {\n         const accessToken = JSON.parse(localStorage.getItem('token'))\n         if (accessToken !== null) {\n           getCustomerList(accessToken, pageNumber)\n             .then((res) => {\n               if (res?.status === 200) {\n                 setUsers(res?.data?.results);\n                 setFilteredUsers(res?.data?.results);\n                 setTotalPageCount(res?.data?.count);\n                 // console.log('Response from customerlist :', res)\n               } else {\n                 // console.log('Response from customerlist:', res)\n               }\n             })\n             .catch((err) => {\n               // console.log('Response from customerlist:', err)\n             })\n         }\n      \n       setActivePage(pageNumber)\n     } \n   }\n  \n   // console.log(addNewUserDetail, \"addNewUserDetail data\")\n   // console.log(users, \"usersss\")\n   // console.log(filteredUsers, \"filtered user\")\n   return (\n     <div className=\"user-management\">\n       <Helmet>\n         <title>Automaton | Customers List</title>\n         <meta name=\"description\" content=\"Automaton Widgets\" />\n       </Helmet>\n       <PageTitleBar\n         title={<IntlMessages id=\"custmermangement\" />}\n         match={props.match}\n       />\n       <RctCollapsibleCard fullBlock>\n         <div className=\"table-responsive\">\n           <div className=\"d-flex py-20 px-10 border-bottom\" style={{justifyContent:'space-between'}}>\n           <div className='search-row'>\n               <input type=\"text\" placeholder='Search' className='search-input py-2' style={{border:\"none\", borderBottom:\"1px solid black\"}} value={searchText} onChange={(e) => setSearchText(e.target.value)}/>\n               <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\"  style={{ cursor: \"pointer\"}}  onClick={getSearchedCustomerData}>Search</Button>\n                 </div> \n         \n                 {/* <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\"  style={{ cursor: \"pointer\"}}   onClick={(e) => opnAddNewUserModal(e)}> <i className=\"zmdi zmdi-plus mx-2\"></i>Users</Button> */}\n \n                \n               \n           \n           </div>\n           <table className=\"table table-middle table-hover mb-0\">\n             <thead>\n               <tr>\n                 <th></th>\n                 <th>No</th>\n                 <th>User</th>\n                 <th>Email</th>\n                 <th>Phone</th>\n                 <th>Action</th>\n               </tr>\n             </thead>\n \n             {/****** mine filtered Table body, without ternary conditional value  *****/}\n             <tbody>\n             {filteredUsers &&\n                 filteredUsers.map((user, i,data) => {\n                   let active = user?.is_active  \n                 return(\n\n                   <tr key={i}>\n                     <td></td>\n                     <td>{user?.id}</td>\n                     <td>\n                       <div className=\"media\">\n                         <div className=\"media-body\">\n                           <h5 className=\"mb-5 fw-bold\">{user?.user}</h5>\n                         </div>\n                       </div>\n                     </td>\n                     <td>{user?.email ? user?.email : '-'}</td>\n                     <td>\n                       {user?.phone ? user?.phone : '-'}\n                     </td>\n \n                     <td className=\"list-action\" style={{display:\"flex\", gap:\"3px\"}}>\n                   \n                       <Switch\n                         onClick={()=>handleToggleUser(user)}\n                        on={active}\n                        className={user?.is_active==true?\"bg-primary\":\"bg-danger\"}\n                     />\n                      \n                     </td>\n                   </tr>\n                 )})}\n             </tbody>\n \n           </table> \n            {\n               users?.length > 0 &&\n               <div className='paginationDiv'>\n                 <Pagination\n                             activePage={activePage}\n                             itemsCountPerPage={10}\n                             pageRangeDisplayed={5}\n                             onChange={(e) => handlePageChange(e)}\n                              itemClass=\"page-item\"\n                             linkClass=\"page-link\"\n                             hideFirstLastPages={true}\n                             totalItemsCount={totalPageCount}\n                         />\n \n                    \n                   </div>\n             }\n         </div>\n         {loading && <RctSectionLoader />}\n       </RctCollapsibleCard>\n \n       {/* Modal for Add New Customer */}\n       {/* <Modal\n         isOpen={addNewUserModal}\n         toggle={() => onAddUpdateUserModalClose()}\n         className=\"addCustomerModal \"\n         \n       >\n         <ModalHeader toggle={() => onAddUpdateUserModalClose()}>\n           <strong>Welcome</strong>\n         </ModalHeader>\n         <ModalBody>\n           <AddNewUserForm\n             addNewUserDetails={addNewUserDetail}\n             onChangeAddNewUserDetails={onChangeAddNewUserDetails}\n           />\n         </ModalBody>\n         <ModalFooter style={{display:\"flex\", justifyContent:\"space-between\", padding:\"20px 50px\"}}>\n \n           <Button variant=\"contained\" color=\"primary\" onClick={() => addNewUser()} className=\"py-2\" style={{ color:\"#fff\",}} >\n               Send\n           </Button>\n           <Button variant=\"contained\"  onClick={() => onAddUpdateUserModalClose()} className=\"py-2 px-3 bg-danger text-white\" style={{ cursor:\"pointer\"}}>\n               Cancel\n           </Button>\n         </ModalFooter>\n       </Modal> */}\n \n       {/* Modal for update customer */}\n       <Modal\n         isOpen={updateNewUserModal}\n         className=\"addCustomerModal\"\n       >\n         <ModalHeader toggle={() => setupdateNewUserModal(false)}>\n           Update Customer\n         </ModalHeader>\n         <ModalBody>\n          \n           <Form>\n             <FormGroup>\n               <Label for=\"firstName\">First Name</Label>\n               <Input\n                 type=\"text\"\n                 name=\"firstName\"\n                 id=\"firstName\"\n                 placeholder=\"Enter First Name\"\n                 value={addNewUserDetail.first_name}\n                  onChange={(e) => onChangeAddNewUserDetails('first_name', e.target.value)}\n               />\n             </FormGroup>\n             <FormGroup>\n               <Label for=\"lastName\">Last Name</Label>\n               <Input\n                 type=\"text\"\n                 name=\"lastName\"\n                 id=\"lastName\"\n                 placeholder=\"Enter Last Name\"\n                  value={addNewUserDetail.last_name}\n                  onChange={(e) => onChangeAddNewUserDetails('last_name', e.target.value)}\n               />\n             </FormGroup>\n             <FormGroup>\n               <Label for=\"Contact\">Contact Number</Label>\n               <Input\n                 type=\"number\"\n                 name=\"mobile\"\n                 id=\"mobile\"\n                 placeholder=\"Enter Contact Number\"\n                  value={addNewUserDetail.mobile_number}\n                  onChange={(e) => onChangeAddNewUserDetails('mobile_number', e.target.value)}\n               />\n             </FormGroup>\n           </Form>\n         </ModalBody>\n         <ModalFooter>\n           <Button\n             variant=\"contained\"\n             style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\"}} \n             className=\"text-white\"\n             onClick={updateUser}\n           >\n             Update\n           </Button>\n \n           <Button\n             variant=\"contained\"\n             className=\"text-white btn-secondary\"\n             onClick={handleUpdateCancel}\n           >\n             Cancel\n           </Button>\n         </ModalFooter>\n       </Modal>\n \n       <Modal\n         isOpen={deleteUserModal}\n         className=\"addCustomerModal\"\n       >\n         <ModalBody>\n           Are you sure want to delete {selectedUser?.username} ?\n         </ModalBody>\n         <ModalFooter>\n           <Button\n             variant=\"contained\"\n             // color=\"primary\"\n             style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\"}} \n             className=\"text-white\"\n            //  onClick={handleDeleteUser}\n           >\n             Delete\n           </Button>\n \n           <Button\n             variant=\"contained\"\n             className=\"text-white btn-secondary\"\n             onClick={() => setdeleteUserModal(false)}\n           >\n             Cancel\n           </Button>\n         </ModalFooter>\n       </Modal>\n \n       <Dialog\n         onClose={() => setOpenViewUserDialog(false)}\n         open={openViewUserDialog}\n       >\n         <DialogContent className=\"view_profile\">\n           {selectedUser !== null && (\n             <div>\n               <div className=\"clearfix\">\n                 <div className=\"media pull-left\">\n                   <div className=\"media-body\">\n                     <div>\n                       <p>Username : </p>\n                       <span className=\"fw-bold\">{selectedUser.username}</span>\n                     </div>\n                     <div>\n                       <p>First Name : </p>\n                       <span className=\"fw-bold\">{selectedUser.first_name}</span>\n                     </div>\n                     <div>\n                       <p>Last Name : </p>\n                       <span className=\"fw-bold\">{selectedUser.last_name}</span>\n                     </div>\n \n                     <div>\n                       <p>Email : </p>\n                       <span className=\"fw-bold\">{selectedUser.email}</span>\n                     </div>\n                     <div>\n                       <p>Contact Number : </p>\n                       <span className=\"fw-bold\">\n                         {selectedUser.mobile_number}\n                       </span>\n                     </div>\n \n                     <div>\n                       <p>User Type : </p>\n                       <span className=\"badge badge-warning\">\n                         {selectedUser.user_type}\n                       </span>\n                     </div>\n                   </div>\n                 </div>\n               </div>\n             </div>\n           )}\n         </DialogContent>\n       </Dialog>\n     </div>\n   )\n }\n ","'use strict';Object.defineProperty(exports,'__esModule',{value:!0});var _propTypes=require('prop-types'),_propTypes2=_interopRequireDefault(_propTypes),_react=require('react'),_react2=_interopRequireDefault(_react);function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var propTypes={on:_propTypes2.default.bool.isRequired,onClick:_propTypes2.default.func.isRequired,enabled:_propTypes2.default.bool,className:_propTypes2.default.string},defaultProps={enabled:!0,className:'',onDisabledClick:function onDisabledClick(){}};function Switch(a){var b=a.on,c=a.onClick,d=a.onDisabledClick,f=a.enabled,e=a.className,g=a.children,h=['switch',e,b?'on ':'',f?'':'disabled '].join(' ');return _react2.default.createElement('div',{className:h,onClick:function onClick(a){return f?c(a):d(a)}},_react2.default.createElement('div',{className:'switch-toggle',children:g}))}Switch.propTypes=propTypes,Switch.defaultProps=defaultProps,exports.default=Switch;\n"],"sourceRoot":""}