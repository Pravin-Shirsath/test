{"version":3,"sources":["Routes/users/user-management/AddNewUserForm.js","Routes/users/user-management/index.js"],"names":["AddNewUserForm","addNewUserDetails","onChangeAddNewUserDetails","Form","className","FormGroup","Label","for","Input","type","name","id","placeholder","value","onChange","e","target","email","first_name","last_name","mobile_number","UserProfile","props","useHistory","useRef","useState","users","setUsers","filteredUsers","setFilteredUsers","selectedUser","setSelectedUser","loading","setLoading","addNewUserModal","setAddNewUserModal","updateNewUserModal","setupdateNewUserModal","deleteUserModal","setdeleteUserModal","searchText","setSearchText","activePage","setActivePage","totalPageCount","setTotalPageCount","username","addNewUserDetail","setAddNewUserDetail","openViewUserDialog","setOpenViewUserDialog","useEffect","localStorage","getItem","getCustomersListData","accessToken","JSON","parse","getCustomerList","then","res","status","data","results","parseInt","count","catch","err","response","key","onAddUpdateUserModalClose","Helmet","content","PageTitleBar","title","IntlMessages","match","RctCollapsibleCard","fullBlock","style","justifyContent","border","borderBottom","backgroundColor","color","borderRadius","cursor","onClick","getSearchedCustomer","length","NotificationManager","error","preventDefault","opnAddNewUserModal","map","user","padding","console","log","opnUpdateUserModal","itemsCountPerPage","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","RctSectionLoader","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","Button","variant","regexName","test","trim","addNewCustomer","toLowerCase","setTimeout","success","message","emailError","userNameError","addNewUser","updateCustomerDetails","deleteCustomerDetails","Dialog","onClose","open","DialogContent","user_type"],"mappings":"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","file":"static/js/239.5cf277a3.chunk.js","sourcesContent":["/**\n * Add New User Form\n */\nimport React from 'react';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst AddNewUserForm = ({ addNewUserDetails, onChangeAddNewUserDetails }) => (\n    <Form className='addNewCustomerForm'>\n        <FormGroup>\n            <Label for=\"userName\">Username</Label>\n            <Input\n                type=\"text\"\n                name=\"userName\"\n                id=\"userName\"\n                placeholder=\"Enter Username\"\n                value={addNewUserDetails.name}\n                onChange={(e) => onChangeAddNewUserDetails('username', e.target.value)}\n            />\n        </FormGroup>\n        <FormGroup>\n            <Label for=\"userEmail\">Email</Label>\n            <Input\n                type=\"email\"\n                name=\"userEmail\"\n                id=\"userEmail\"\n                placeholder=\"Enter Email\"\n                value={addNewUserDetails.email}\n                onChange={(e) => onChangeAddNewUserDetails('email', e.target.value)}\n            />\n        </FormGroup>\n        <FormGroup>\n            <Label for=\"firstName\">First Name</Label>\n            <Input\n                type=\"text\"\n                name=\"firstName\"\n                id=\"firstName\"\n                placeholder=\"Enter First Name\"\n                value={addNewUserDetails.first_name}\n                onChange={(e) => onChangeAddNewUserDetails('first_name', e.target.value)}\n            />\n        </FormGroup>\n        <FormGroup>\n            <Label for=\"lastName\">Last Name</Label>\n            <Input\n                type=\"text\"\n                name=\"lastName\"\n                id=\"lastName\"\n                placeholder=\"Enter Last Name\"\n                value={addNewUserDetails.last_name}\n                onChange={(e) => onChangeAddNewUserDetails('last_name', e.target.value)}\n            />\n        </FormGroup>\n   \n        <FormGroup>\n            <Label for=\"Contact\">Contact Number</Label>\n            <Input\n                type=\"number\"\n                name=\"mobile\"\n                id=\"mobile\"\n                placeholder=\"Enter Contact Number\"\n                value={addNewUserDetails.mobile_number}\n                onChange={(e) => onChangeAddNewUserDetails('mobile_number', e.target.value)}\n            />\n        </FormGroup>\n        \n        \n        \n    </Form>\n);\n\nexport default AddNewUserForm;\n","/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport {\n  \n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n} from 'reactstrap'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { NotificationManager } from 'react-notifications'\nimport Pagination from \"react-js-pagination\";\n\nimport { Link, useHistory } from 'react-router-dom';\n\n// delete confirmation dialog\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n// add new user form\nimport AddNewUserForm from './AddNewUserForm'\n// update user form\nimport UpdateUserForm from './UpdateUserForm'\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar'\n// intl messages\nimport IntlMessages from 'Util/IntlMessages'\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport {\n  addNewCustomer,\n  getCustomerList,\n  deleteCustomerDetails,\n  updateCustomerDetails,\n  getSearchedCustomer,\n} from '../../../Api/'\n\nexport default function UserProfile(props) {\n  const history = useHistory();\n  const deleteConfirmationDialog = useRef()\n  const [users, setUsers] = useState()\n  const [filteredUsers, setFilteredUsers] = useState()\n\n  const [selectedUser, setSelectedUser] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [addNewUserModal, setAddNewUserModal] = useState(false)\n  const [updateNewUserModal, setupdateNewUserModal] = useState(false)\n  const [deleteUserModal, setdeleteUserModal] = useState(false)\n  const [searchText, setSearchText] = useState('');\n  const [activePage , setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState('');\n\n  const [addNewUserDetail, setAddNewUserDetail] = useState({\n    username: '',\n    email: '',\n    first_name: '',\n    last_name: '',\n    mobile_number: '',\n  })\n\n  const [updateUserDetail, setUpdateUserDetail] = useState({\n    first_name: '',\n    last_name: '',\n    mobile_number: '',\n  })\n\n  const [openViewUserDialog, setOpenViewUserDialog] = useState(false)\n  const [editUser, setEditUser] = useState(null)\n  const [selectedUsers, setSelectedUsers] = useState(0)\n  const [viewDetails, setViewDetails] = useState()\n\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    // conditional rendring\n    // if(isLoggedInBool !== \"true\"){\n    //   history.push(\"/login\")\n    //     localStorage.clear();\n    // } else {\n      getCustomersListData();\n    // }\n  }, [])\n\n  const getCustomersListData = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      getCustomerList(accessToken, activePage)\n        .then((res) => {\n          if (res?.status === 200) {\n            setUsers(res?.data?.results);\n            setFilteredUsers(res?.data?.results);\n            setTotalPageCount(parseInt(res?.data?.count));\n            // console.log('Response from customerlist :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n          }\n        })\n        .catch((err) => {\n          // console.log(\"status of invalid token\", err?.response?.data, err?.response?.status)\n          if(err?.response?.status == 401){\n          // conditional rendring\n            // localStorage.clear();\n            // history.push(\"/login\");\n            // window.location.reload();\n          } else {\n            // console.log('Response from customerlist:', err)\n          }\n        })\n    }\n  }\n\n\n\n  const getSearchedCustomerData = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      getSearchedCustomer(accessToken, searchText)\n        .then((res) => {\n          if (res?.status === 200 && res?.data?.results.length>0) {\n            setFilteredUsers(res?.data?.results);\n            setSearchText('')\n            // console.log('Response from customerlist :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n            setFilteredUsers(users);\n            setSearchText('');\n            NotificationManager.error(\"No user found!\")\n          }\n        })\n        .catch((err) => {\n          // console.log('Response from customerlist:', err)\n        })\n    }\n  }\n\n  /**\n   * On Delete\n   */\n  const onDelete = (data) => {\n    setdeleteUserModal(true)\n    setSelectedUser(data)\n  }\n\n  // API Call For delete User\n  const handleDeleteUser = () => {\n    const { id } = selectedUser\n\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      deleteCustomerDetails(accessToken, id)\n        .then((res) => {\n          if (res?.status === 200) {\n            setdeleteUserModal(false)\n            setLoading(true)\n            // console.log('Response', res)\n            setTimeout(() => {\n              setLoading(false)\n              getCustomersListData()\n              NotificationManager.success('User successfully deleted !! ')\n            }, 2000)\n          } else if (res?.status === 400) {\n            setdeleteUserModal(false)\n            NotificationManager.error('Error while deleting customer')\n          } else {\n            setdeleteUserModal(false)\n            NotificationManager.error('Error while deleting customer')\n          }\n        })\n        .catch((err) => {\n          setdeleteUserModal(false)\n          NotificationManager.error('Error while deleting customer')\n        })\n    }\n  }\n\n  /**\n   * Open Add New User Modal\n   */\n  const opnAddNewUserModal = (e) => {\n    e.preventDefault()\n    setAddNewUserModal(true)\n  }\n\n  const opnUpdateUserModal = (user) => {\n    // e.preventDefault()\n    // console.log(\"open update user modal function ran\")\n    setupdateNewUserModal(true)\n    setAddNewUserDetail(user)\n    setSelectedUser(user)\n    // console.log(\"update user\",user)\n  }\n\n  /**\n   * On Change Add New User Details\n   */\n  const onChangeAddNewUserDetails = (key, value) => {\n    setAddNewUserDetail({\n      ...addNewUserDetail,\n      [key]: value,\n    })\n  }\n\n  /**\n   * Add New User\n   */\n  const addNewUser = () => {\n    const {username, email, first_name, last_name, mobile_number} = addNewUserDetail;\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    let regexName = /^[a-zA-Z]{1,30}$/; // only alpha, no space, min-1, max-30\n    let regexContact = /^\\d{10}$/; // only number 0-9 length-10\n\n    if (username !== '' && email !== '' && first_name !== '' && last_name !== '' && mobile_number !== '') {\n      if(regexEmail.test(email.trim(\"\")) === true){\n        if(regexName.test(first_name.trim(\"\")) === true){\n          if(regexName.test(last_name.trim(\"\")) === true){\n            if(regexContact.test(mobile_number) === true){\n              const accessToken = JSON.parse(localStorage.getItem('token'))\n              if (accessToken !== null) {\n                addNewCustomer(accessToken, username.toLowerCase(), email.toLowerCase(), first_name, last_name, mobile_number,)\n                  .then((res) => {\n                    if (res?.status === 200) {\n                      setAddNewUserModal(false)\n                      setLoading(true)\n\n                      setTimeout(() => {\n                        setLoading(false)\n                        getCustomersListData()\n                        NotificationManager.success(res?.data?.message)\n                      }, 2000)\n\n                      setAddNewUserDetail({\n                        username: '',\n                        email: '',\n                        first_name: '',\n                        last_name: '',\n                        mobile_number: '',\n                      })\n\n                      console.log('Response from addcustomer:', res)\n                    }\n                  })\n                  .catch((err) => {\n                    // console.log(err, \"errorrr\")\n                    // console.log(err?.response, \"errorrr resposne\")\n                    // console.log(err?.response?.data, \"errorrr resposne\")\n\n                    if(err?.response?.status === 400){\n                      let emailError = err?.response?.data?.email?.[0];\n                      let userNameError = err?.response?.data?.username?.[0];\n\n                      if(emailError && userNameError){\n                        NotificationManager.error(emailError);\n                        NotificationManager.error(userNameError);\n                      } else if(emailError){\n                        NotificationManager.error(emailError);\n                      } else if(userNameError){\n                        NotificationManager.error(userNameError);\n                      }\n                    } else if(err?.response?.status === 500){\n                      NotificationManager.error(\"Internal server error !\");\n                    }\n                  })\n              }\n            } else {\n              NotificationManager.error('Mobile Number must be 10 digits!');\n            }\n          } else {\n            NotificationManager.error('Last name must contain only alphabet and no spacings!');\n          }\n        } else {\n          NotificationManager.error('First name must contain only alphabet and no spacings!');\n        }   \n      } else {\n        NotificationManager.error('Invalid email address format!');\n      }\n    } else {\n      NotificationManager.error('Please provide all customer details')\n    }\n  }\n\n  /**\n   * Update User\n   */\n  const updateUser = () => {\n    // console.log('Edit user:', addNewUserDetail)\n    const { first_name, last_name, mobile_number, id } = addNewUserDetail\n    let regexName = /^[a-zA-Z]{1,30}$/; // only alpha, no space, min-1, max-30\n    let regexContact = /^\\d{10}$/; // only number 0-9 length-10\n\n    if (first_name !== '' && last_name !== '' && mobile_number !== '') {\n      if(regexName.test(first_name) === true){\n        if(regexName.test(last_name) === true){\n          if(regexContact.test(mobile_number) === true){\n            const accessToken = JSON.parse(localStorage.getItem('token'))\n            if (accessToken !== null) {\n              updateCustomerDetails(accessToken,first_name, last_name, mobile_number, id)\n                .then((res) => {\n                  if (res?.status === 200) {              \n                    setupdateNewUserModal(false)\n                    setLoading(true)\n                    setTimeout(() => {\n                      setLoading(false)\n                      getCustomersListData();\n                      NotificationManager.success('Updated user successfully!');\n                    }, 2000)\n                    setAddNewUserDetail({\n                      username: '',\n                      email: '',\n                      first_name: '',\n                      last_name: '',\n                      mobile_number: '',\n                    })\n                    console.log('Response from updatecustomer:', res)\n                  } else if (res?.status === 400) {\n                    setAddNewUserModal(false)\n                    NotificationManager.error(res?.data?.email, res?.data?.username)\n                  } else {\n                    setAddNewUserModal(false)\n                    NotificationManager.error('Error while updating customer')\n                  }\n                })\n                .catch((err) => {\n                  NotificationManager.error('Error while updating customer')\n                })\n            }\n          } else {\n            NotificationManager.error('Mobile Number must be 10 digits!');\n          }\n        } else {\n          NotificationManager.error('Last name must contain only alphabet and no spacings!');\n        }\n      } else {\n        NotificationManager.error('First name must contain only alphabet and no spacings!');\n      }\n    } else {\n      NotificationManager.error('Please provide all customer details')\n    }\n  }\n\n  const handleUpdateCancel = () => {\n    setupdateNewUserModal(false)\n    setAddNewUserDetail({\n      username: '',\n      email: '',\n      first_name: '',\n      last_name: '',\n      mobile_number: '',\n    })\n  }\n\n  // View User Details\n  const viewUserDetail = (data) => {\n    console.log('User information:', data)\n    setOpenViewUserDialog(true)\n    setSelectedUser(data)\n  }\n\n  /**\n   * On Edit User\n   */\n  const onEditUser = (user) => {\n    setupdateNewUserModal(true)\n    setEditUser(user)\n  }\n\n  /**\n   * On Add & Update User Modal Close\n   */\n  const onAddUpdateUserModalClose = () => {\n    setAddNewUserModal(false)\n    // setEditUser(null)\n    setAddNewUserDetail({\n      username: '',\n      email: '',\n      first_name: '',\n      last_name: '',\n      mobile_number: '',\n    })\n  }\n\n  /**\n   * On Update User Details\n   */\n  const onUpdateUserDetails = (key, value) => {\n    setUpdateUserDetail({\n      ...updateUserDetail,\n      [key]: value,\n    })\n  }\n\n\n  const handleSearchData = () => {\n    // console.log(\"Search Text\", searchText,filteredUsers)\n    if (searchText) {\n      const newData = users.filter(item => {\n        const itemData = item.username ? item.username.toUpperCase() : ''.toUpperCase();\n        const textData = searchText.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredUsers(newData);\n      setSearchText('')\n    } else {\n      setFilteredUsers(users);\n      // setsearch(text);\n    }\n  }\n\n  const handlePageChange = (pageNumber) => {\n    // console.log(\"pagination\", pageNumber)\n       if (activePage !== pageNumber) {\n        const accessToken = JSON.parse(localStorage.getItem('token'))\n        if (accessToken !== null) {\n          getCustomerList(accessToken, pageNumber)\n            .then((res) => {\n              if (res?.status === 200) {\n                setUsers(res?.data?.results);\n                setFilteredUsers(res?.data?.results);\n                setTotalPageCount(res?.data?.count);\n                // console.log('Response from customerlist :', res)\n              } else {\n                // console.log('Response from customerlist:', res)\n              }\n            })\n            .catch((err) => {\n              // console.log('Response from customerlist:', err)\n            })\n        }\n     \n      setActivePage(pageNumber)\n    } \n  }\n\n  // console.log(addNewUserDetail, \"addNewUserDetail data\")\n  // console.log(users, \"usersss\")\n  // console.log(filteredUsers, \"filtered user\")\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>Automaton | Customers List</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      <PageTitleBar\n        title={<IntlMessages id=\"sidebar.userManagement\" />}\n        match={props.match}\n      />\n      <RctCollapsibleCard fullBlock>\n        <div className=\"table-responsive\">\n          <div className=\"d-flex py-20 px-10 border-bottom\" style={{justifyContent:'space-between'}}>\n          <div className='search-row'>\n              <input type=\"text\" placeholder='Search' className='search-input py-2' style={{border:\"none\", borderBottom:\"1px solid black\"}} value={searchText} onChange={(e) => setSearchText(e.target.value)}/>\n              <button style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\", cursor: \"pointer\"}} className='btn-block py-2 m-auto' onClick={getSearchedCustomerData}>Search</button>\n            </div> \n        \n\n              <button\n                  onClick={(e) => opnAddNewUserModal(e)}\n                  style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\", cursor: \"pointer\"}} \n                  className='py-2 px-2'\n                >\n                <i className=\"zmdi zmdi-plus\"></i> Add New Customer\n              </button>\n\n          \n          </div>\n          <table className=\"table table-middle table-hover mb-0\">\n            <thead>\n              <tr>\n                <th></th>\n                <th>Username</th>\n                <th>Email Address</th>\n                <th>First name</th>\n                <th>Last name</th>\n                <th>Contact No</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n\n            {/****** mine filtered Table body, without ternary conditional value  *****/}\n            <tbody>\n              {filteredUsers &&\n                filteredUsers.map((user, id) => (\n                  <tr key={id}>\n                    <td></td>\n                    <td>\n                      <div className=\"media\">\n                        <div className=\"media-body\">\n                          <h5 className=\"mb-5 fw-bold\">{user?.username}</h5>\n                        </div>\n                      </div>\n                    </td>\n                    <td>{user?.email ? user?.email : '-'}</td>\n                    <td>{user?.first_name}</td>\n                    <td>{user?.last_name}</td>\n                    <td style={{ padding: '0px 45px' }}>\n                      {user?.mobile_number ? user?.mobile_number : '-'}\n                    </td>\n\n                    <td className=\"list-action\">\n                      <button\n                        type=\"button\"\n                        className=\"rct-link-btn\"\n                        onClick={() => viewUserDetail(user)}\n                      >\n                        <i className=\"ti-eye\"></i>\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"rct-link-btn\"\n                        onClick={() => opnUpdateUserModal(user)}\n                        // onClick={() => onEditUser(user)}\n                      >\n                        <i className=\"ti-pencil\"></i>\n                      </button>\n                      <button\n                        type=\"button\" \n                        className=\"rct-link-btn\"\n                        onClick={() => onDelete(user)}\n                      >\n                        <i className=\"ti-close\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n\n          </table> \n           {\n              users?.length > 0 &&\n              <div className='paginationDiv'>\n                <Pagination\n                            activePage={activePage}\n                            itemsCountPerPage={10}\n                            pageRangeDisplayed={5}\n                            onChange={(e) => handlePageChange(e)}\n                             itemClass=\"page-item\"\n                            linkClass=\"page-link\"\n                            hideFirstLastPages={true}\n                            totalItemsCount={totalPageCount}\n                        />\n\n                   \n                  </div>\n            }\n        </div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n\n      {/* Modal for Add New Customer */}\n      <Modal\n        isOpen={addNewUserModal}\n        toggle={() => onAddUpdateUserModalClose()}\n        className=\"addCustomerModal\"\n      >\n        <ModalHeader toggle={() => onAddUpdateUserModalClose()}>\n          Add New Customer\n        </ModalHeader>\n        <ModalBody>\n          <AddNewUserForm\n            addNewUserDetails={addNewUserDetail}\n            onChangeAddNewUserDetails={onChangeAddNewUserDetails}\n          />\n        </ModalBody>\n        <ModalFooter>\n         \n\n          <Button variant=\"contained\" onClick={() => addNewUser()} className=\"py-2\" style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\"}} >\n              Add\n          </Button>\n          <Button variant=\"contained\"  onClick={() => onAddUpdateUserModalClose()} className=\"py-2 px-3\" style={{backgroundColor: \"#E0E0E0\", color:\"#000\", borderRadius: \"6px\", cursor:\"pointer\"}}>\n              Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      {/* Modal for update customer */}\n      <Modal\n        isOpen={updateNewUserModal}\n        className=\"addCustomerModal\"\n      >\n        <ModalHeader toggle={() => setupdateNewUserModal(false)}>\n          Update Customer\n        </ModalHeader>\n        <ModalBody>\n         \n          <Form>\n            <FormGroup>\n              <Label for=\"firstName\">First Name</Label>\n              <Input\n                type=\"text\"\n                name=\"firstName\"\n                id=\"firstName\"\n                placeholder=\"Enter First Name\"\n                value={addNewUserDetail.first_name}\n                 onChange={(e) => onChangeAddNewUserDetails('first_name', e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"lastName\">Last Name</Label>\n              <Input\n                type=\"text\"\n                name=\"lastName\"\n                id=\"lastName\"\n                placeholder=\"Enter Last Name\"\n                 value={addNewUserDetail.last_name}\n                 onChange={(e) => onChangeAddNewUserDetails('last_name', e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"Contact\">Contact Number</Label>\n              <Input\n                type=\"number\"\n                name=\"mobile\"\n                id=\"mobile\"\n                placeholder=\"Enter Contact Number\"\n                 value={addNewUserDetail.mobile_number}\n                 onChange={(e) => onChangeAddNewUserDetails('mobile_number', e.target.value)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\"}} \n            className=\"text-white\"\n            onClick={updateUser}\n          >\n            Update\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            className=\"text-white btn-secondary\"\n            onClick={handleUpdateCancel}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <Modal\n        isOpen={deleteUserModal}\n        className=\"addCustomerModal\"\n      >\n        <ModalBody>\n          Are you sure want to delete {selectedUser?.username} ?\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            // color=\"primary\"\n            style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\"}} \n            className=\"text-white\"\n            onClick={handleDeleteUser}\n          >\n            Delete\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            className=\"text-white btn-secondary\"\n            onClick={() => setdeleteUserModal(false)}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <Dialog\n        onClose={() => setOpenViewUserDialog(false)}\n        open={openViewUserDialog}\n      >\n        <DialogContent className=\"view_profile\">\n          {selectedUser !== null && (\n            <div>\n              <div className=\"clearfix\">\n                <div className=\"media pull-left\">\n                  <div className=\"media-body\">\n                    <div>\n                      <p>Username : </p>\n                      <span className=\"fw-bold\">{selectedUser.username}</span>\n                    </div>\n                    <div>\n                      <p>First Name : </p>\n                      <span className=\"fw-bold\">{selectedUser.first_name}</span>\n                    </div>\n                    <div>\n                      <p>Last Name : </p>\n                      <span className=\"fw-bold\">{selectedUser.last_name}</span>\n                    </div>\n\n                    <div>\n                      <p>Email : </p>\n                      <span className=\"fw-bold\">{selectedUser.email}</span>\n                    </div>\n                    <div>\n                      <p>Contact Number : </p>\n                      <span className=\"fw-bold\">\n                        {selectedUser.mobile_number}\n                      </span>\n                    </div>\n\n                    <div>\n                      <p>User Type : </p>\n                      <span className=\"badge badge-warning\">\n                        {selectedUser.user_type}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n"],"sourceRoot":""}