{"version":3,"sources":["Routes/dashboard/CreateDataset/index.js"],"names":["DashboardModal","require","CreateDataset","props","history","useHistory","useState","loading","datasetName","setDatasetName","comment","setComment","open","setOpen","instance","setInstance","disabled","setDisabled","console","log","UploadFile","accessToken","JSON","parse","localStorage","getItem","undefined","Uppy","id","autoProceed","debug","restrictions","allowedFileTypes","methods","exposedHeaders","use","XHR","endpoint","BASE_URL","headers","Authorization","bundle","formData","fieldName","on","file","response","error","isNetworkError","uppy3","name","content","title","match","uppy","target","document","body","onRequestClose","fullBlock","style","padding","alignItems","justifyContent","display","className","width","backgroundColor","marginTop","row","sm","for","type","onChange","e","value","height","marginBottom","variant","color","onClick","authToken","projectId","createDataset","then","res","data","status","message","NotificationManager","Dataset_created","setItem","project_id","success","catch","push"],"mappings":"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","file":"static/js/86.34adf9dd.chunk.js","sourcesContent":["import \"./createDataset.css\"\n\n// import React, { useEffect, useState, useRef } from \"react\";\n// import { Helmet } from \"react-helmet\";\n// // page title bar\n// import PageTitleBar from \"../../../Components/PageTitleBar/PageTitleBar\";\n// // intl messages\n// import IntlMessages from \"../../../Util/IntlMessages\";\n// // rct card box\n// import RctCollapsibleCard from \"../../../Components/RctCollapsibleCard/RctCollapsibleCard\";\n\n// rct section loader\nimport RctSectionLoader from \"../../../Components/RctSectionLoader/RctSectionLoader\";\nimport UploadIcon from '@mui/icons-material/Upload';\n// import { Button } from \"reactstrap\";\n\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar'\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard'\n// import React,{useState} from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useHistory } from 'react-router'\nimport IntlMessages from 'Util/IntlMessages'\nimport React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback, CustomInput\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { createDataset } from 'Api'\nimport AddIcon from '@mui/icons-material/Add';\n\n\n\nimport Uppy from  \"@uppy/core\";\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/dashboard/dist/style.min.css';\nimport '@uppy/webcam/dist/style.min.css';\nimport { DragDrop, StatusBar ,Dashboard} from '@uppy/react';\nimport Tus from '@uppy/tus'\nimport XHR from '@uppy/xhr-upload';\nconst {\tDashboardModal} = require(\"@uppy/react\");\n// Donâ€™t forget to keep the Uppy instance outside of your component.\n// const uppy = new Uppy()\n// // .use(RemoteSources, { companionUrl: 'https://companion.uppy.io' })\n// // .use(Webcam, { target: Dashboard })\n// // .use(ImageEditor, { target: Dashboard })\n// .use(Tus, { endpoint: 'https://tusd.tusdemo.net/files/' })\n// .on('complete', (result) => {\n//   console.log('Upload result:', result)\n// });\n\n\n\n\n\n\nconst CreateDataset = (props) => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [datasetName, setDatasetName] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [open,setOpen]=useState()\n  const [instance,setInstance] =useState()\n  const [disabled,setDisabled]= useState(true)\n  const handleDatasetName = (e) => {\n    setDatasetName(e.target.value)\n  }\n\n  const handleComment = (e) => {\n    setComment(e.target.value)\n  }\n\n  const handleSave = () => {\n    const authToken = JSON.parse(localStorage.getItem(\"token\"));\n    const projectId = localStorage.getItem(\"projId\");\n\n    if(authToken !== null){\n      if(projectId){\n        if(datasetName){\n          console.log(authToken, typeof authToken, \"autthhh token\")\n          createDataset(authToken, projectId, datasetName)\n          .then(res => {\n\n           \n\n            console.log(res, \"resss in handle save function\")\n            console.log(res?.data, \"ress dataaa i n handle save function\")\n\n            if(res?.status == 200){\n\n                   if(typeof(res?.data?.message) == \"string\") {\n                    NotificationManager.error(res?.data?.message)\n                   }else if(res?.data?.message?.Dataset_created){\n                    localStorage.setItem(\"projId\", res?.data?.message?.Dataset_created?.project_id)\n                    localStorage.setItem(\"datasetid\", res?.data?.message?.Dataset_created?.id)\n                    setDisabled(false)\n                    NotificationManager.success(\"Dataset created !\")\n                    setDatasetName(\"\")\n                    setComment(\"\");\n                   }else{\n                    NotificationManager.error(\"Dataset create process failed!\")\n                   }\n                   \n                   \n               \n            }else{\n          \n              NotificationManager.error(\"Dataset create process failed!\")\n            }\n          }).catch((error)=>{\n            console.log(\"Dataset create error\",error)\n          })\n        }\n      }\n    }\n  }\n\n  console.log(datasetName, \"Dataset name\")\n  console.log(comment, \"Commmenttt\")\n\n\n\n\n\n  const UploadFile= async()=>{\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n\n\n\n\n\n    if (open === undefined) {\n       const uppy3 = await new Uppy({\n        id: \"uppy3\",\n        autoProceed: false,\n        debug: true,\n        restrictions:{\n          allowedFileTypes:['image/*']\n        },\n        methods: [\"OPTIONS\", \"GET\", \"POST\", \"PATCH\", \"PUT\"],\n        exposedHeaders: [\"Access-Control-Allow-Headers\"],\n       \n      })\n      .use(XHR, { endpoint: `${BASE_URL}/api/automaton/file-uploads/upload/${143}`,\n                  headers:{\n                  \n                    Authorization:accessToken,\n                    \"Content-Type\": \"multipart/form-data\",\n                  \n                  },\n                  bundle :true,\n                  formData:true,\n                  fieldName:'images',\n                \n                \n                })\n               \n      // .on('complete', (result) => {\n      //   console.log('Upload result:', result)\n      // });\n        .on(\"upload-success\", (file, response) => {\n          console.log(\"upload-success\");\n          // alert(JSON.stringify(file,response))\n          //   this.props.projectSpecificDetails(\n          // \tthis.props.match.params.id,\n          // \t(res, err) => {\n          // \t  console.log(\"res\");\n          // \t  this.setState({\n          // \t\topen: !this.state.open,\n          // \t  });\n          // \t}\n          //   );\n        }).on('upload-error', (file, error, response) => {\n          console.log(\"error===\",file, error, response)\n          if (error.isNetworkError) {\n            // Let your users know that file upload could have failed\n            // due to firewall or ISP issues\n          console.log(\"error===\",error)\n          }\n        })\n\n\n       \n//  document.getElementById(\"upload-button\").addEventListener('click',()=>{\n//   uppy3.getFile().forEach((file)=>{\n//     const formData = new FormData();\n//     formData.append(file.id,formData)\n//     uppy3.UploadFile(file.id,formData)\n//   })\n//  })\n       \n        \n\n\n        setInstance(uppy3);\n        setOpen(true)\n    }else{\n      setOpen(true)\n    }\n   \n  }\n\n\n\n\n\n\n\n\n\n\n\nconsole.log(open,\"open\")\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Automaton | Create Dataset</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      <PageTitleBar\n        title={<IntlMessages id=\"sidebar.createDataset\" />}\n        match={props.match}\n      />\n      {\n        instance != undefined && \n        <DashboardModal\n\t\t\t\t\t\t\t\t\t\tuppy={instance}\n\t\t\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\t\t\ttarget={document.body}\n\t\t\t\t\t\t\t\t\t\tonRequestClose={() => setOpen(false)}\n\t\t\t\t\t\t\t\t\t/>\n\n      }\n      <RctCollapsibleCard fullBlock>\n      <div style={{padding:\"80px\", alignItems: \"center\", justifyContent: 'center', display: \"flex\", }}>\n                <div className=\"user-profile-widget box-shadow-box\" style={{ width: \"60%\", backgroundColor: \"white\" }}>\n                    <div className=\"p-20\">\n                        <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={handleDatasetName}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {handleComment}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\" style={{width:\"100px\", padding:\"7px 5px\"}} className=\"projectCardButton mx-2\" onClick={handleSave}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\" style={{width:\"100px\", padding:\"7px 5px\"}}  className=\"mx-2 d-flex justify-content-center align-items-center\" onClick={()=> history.push(\"/app/dashboard/project\")}>Cancel</Button>\n                                <Button variant=\"contained\" color=\"primary\" style={{width:\"100px\", padding:\"7px 5px\"}} disabled={disabled}  className=\"mx-2 d-flex justify-content-center align-items-center\" onClick={()=>UploadFile()}><UploadIcon/>Upload</Button>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n    </>\n  );\n};\n\nexport default CreateDataset;\n"],"sourceRoot":""}