{"version":3,"sources":["Components/Widgets/DiscoverPeoples.js"],"names":["DiscoverPeoplesWidget","props","useState","people","setPeople","useEffect","getDiscoverPeoples","api","get","then","response","data","catch","error","map","key","button","onClick","newPeople","update","status","$set","togglePeopleFollow","className","src","photo_url","alt","width","height","name","classnames"],"mappings":"6MAgEeA,UApDf,SAA+BC,GAC5B,MAA4BC,mBAAS,MAAK,mBAAnCC,EAAM,KAAEC,EAAS,KAExBC,qBAAU,WACPC,GACH,GAAE,IAGF,IAAMA,EAAqB,WACxBC,IAAIC,IAAI,sBACJC,MAAK,SAACC,GACJN,EAAUM,EAASC,KACtB,IACCC,OAAM,SAAAC,GACJ,GAET,EAWA,OACG,cAAC,IAAI,UACDV,GAAUA,EAAOW,KAAI,SAACH,EAAMI,GAAG,OAC7B,cAAC,IAAQ,CAACC,QAAM,EAAWC,QAAS,kBARlB,SAACF,GACzB,IAAIG,EAAYf,EAChBC,EAAUe,IAAOhB,EAAO,eAAIY,EAAM,CAAEK,OAAQ,CAAEC,MAAOH,EAAUH,GAAKK,WACvE,CAKmDE,CAAmBP,EAAI,EAAC,SAC/D,sBAAKQ,UAAU,uCAAsC,UAClD,qBAAKA,UAAU,4BAA2B,SACvC,sBAAKA,UAAU,QAAO,UACnB,qBAAKA,UAAU,mBAAkB,SAC9B,qBAAKC,IAAKb,EAAKc,UAAWC,IAAI,eAAeH,UAAU,2BAA2BI,MAAM,KAAKC,OAAO,SAEvG,qBAAKL,UAAU,mBAAkB,SAC9B,mBAAGA,UAAU,kBAAiB,SAAEZ,EAAKkB,cAI9C,qBAAKN,UAAU,4BAA2B,SACvC,sBAAMA,UAAWO,IAAW,4BAA6B,CAAE,aAAcnB,EAAKS,OAAQ,cAAeT,EAAKS,SAAU,SAAET,EAAKS,OAAS,YAAc,iBAbrIL,EAgBX,KAIvB,C","file":"static/js/150.2adc1d68.chunk.js","sourcesContent":["/**\n * Discover Peoples\n */\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport update from 'react-addons-update';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n// api\nimport api from 'Api';\n\nfunction DiscoverPeoplesWidget(props){\n   const [people, setPeople] = useState(null)\n\n   useEffect(() => {\n      getDiscoverPeoples();\n   },[])\n   \n   // get discover peoples\n   const getDiscoverPeoples = () => {\n      api.get('discoverPeoples.js')\n         .then((response) => {\n            setPeople(response.data)\n         })\n         .catch(error => {\n            // error handling\n         })\n   }\n\n   /**\n    * Function to follow and unfolow people\n    * @param {object} data\n    */\n   const togglePeopleFollow = (key) => {\n      let newPeople = people;\n      setPeople(update(people, { [key]: { status: { $set: !newPeople[key].status } } }))\n   }\n\n   return (\n      <List>\n         {people && people.map((data, key) => (\n            <ListItem button key={key} onClick={() => togglePeopleFollow(key)}>\n               <div className=\"d-flex justify-content-between w-100\">\n                  <div className=\"d-flex align-items-center\">\n                     <div className=\"media\">\n                        <div className=\"media-left mr-20\">\n                           <img src={data.photo_url} alt=\"user profile\" className=\"rounded-circle img-fluid\" width=\"55\" height=\"55\" />\n                        </div>\n                        <div className=\"media-body pt-15\">\n                           <p className=\"mb-0 text-muted\">{data.name}</p>\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"d-flex align-items-center\">\n                     <span className={classnames('badge badge-pill badge-lg', { 'badge-info': data.status, 'badge-dark': !data.status })}>{data.status ? 'Following' : 'Follow'}</span>\n                  </div>\n               </div>\n            </ListItem>\n         ))}\n      </List>\n   );\n}\n\nexport default DiscoverPeoplesWidget;\n"],"sourceRoot":""}