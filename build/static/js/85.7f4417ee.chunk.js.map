{"version":3,"sources":["Routes/components/snackbar/component/PositionSnackbar.js","Routes/components/snackbar/component/DirectionSnackbar.js","Routes/components/snackbar/component/FadeSnackbar.js","Routes/components/snackbar/index.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js"],"names":["PositionedSnackbar","useState","open","setOpen","vertical","setVertical","horizontal","setHorizontal","handleClick","ver","hori","Button","variant","className","onClick","Snackbar","anchorOrigin","onClose","ContentProps","message","id","DirectionSnackbar","transition","color","FadeSnackbar","SnackbarComponent","props","handleClose","event","reason","PageTitleBar","title","IntlMessages","match","RctCollapsibleCard","colClasses","heading","autoHideDuration","action","dense","IconButton","SnackbarContent","React","ref","classes","_props$role","role","other","_objectWithoutProperties","Paper","_extends","square","elevation","clsx","root","withStyles","theme","emphasis","palette","type","backgroundColor","emphasize","background","default","typography","body2","_defineProperty","getContrastText","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","marginLeft","paddingLeft","marginRight","name","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","children","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","handleClickAway","useEventCallback","insideReactTree","document","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","ownerDocument","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","doc","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","_props$anchorOrigin","_props$autoHideDurati","ClickAwayListenerProps","_props$disableWindowB","disableWindowBlurListener","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","timerAutoHide","_React$useState","exited","setExited","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","handlePause","handleResume","window","concat","capitalize","appear","in","createChainedFunction","timeout","direction","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip"],"mappings":"qNAqDeA,MAhDf,WACG,MAAuBC,oBAAS,GAAM,mBAA/BC,EAAI,KAACC,EAAO,KACnB,EAA+BF,mBAAS,OAAM,mBAAvCG,EAAQ,KAACC,EAAW,KAC3B,EAAmCJ,mBAAS,UAAS,mBAA9CK,EAAU,KAACC,EAAa,KAEzBC,EAAc,SAACC,EAAIC,GACtBP,GAAQ,GACRE,EAAYI,GACZF,EAAcG,EACjB,EAMA,OACG,gCACG,cAACC,EAAA,EAAM,CAACC,QAAQ,YAAYC,UAAU,qCAAqCC,QAAS,kBAAMN,EAAY,MAAM,SAAS,EAAC,SAAC,eAGvH,cAACG,EAAA,EAAM,CAACC,QAAQ,YAAYC,UAAU,oCAAoCC,QAAS,kBAAMN,EAAY,MAAM,QAAQ,EAAC,SAAC,cAGrH,cAACG,EAAA,EAAM,CAACC,QAAQ,YAAYC,UAAU,qCAAqCC,QAAS,kBAAMN,EAAY,SAAS,QAAS,EAAC,SAAC,iBAG1H,cAACG,EAAA,EAAM,CAACC,QAAQ,YAAYC,UAAU,qCAAqCC,QAAS,kBAAMN,EAAY,SAAS,SAAS,EAAC,SAAC,kBAG1H,cAACG,EAAA,EAAM,CAACC,QAAQ,YAAYC,UAAU,kCAAkCC,QAAS,kBAAMN,EAAY,SAAS,OAAO,EAAC,SAAC,gBAGrH,cAACG,EAAA,EAAM,CAACC,QAAQ,YAAYC,UAAU,uCAAuCC,QAAS,kBAAMN,EAAY,MAAM,OAAO,EAAC,SAAC,aAGvH,cAACO,EAAA,EAAQ,CACNC,aAAc,CAAEZ,WAAUE,cAC1BJ,KAAMA,EACNe,QA3BW,WACjBd,GAAQ,EACX,EA0BSe,aAAc,CACX,mBAAoB,cAEvBC,QAAS,sBAAMC,GAAG,aAAY,SAAC,sBAI3C,E,YCHeC,MA1Bf,WACG,MAAwBpB,oBAAS,GAAM,mBAAhCC,EAAI,KAAEC,EAAO,KAEdK,EAAc,SAAAc,GAAU,OAAI,WAC/BnB,GAAQ,EACX,CAAE,EAMF,OACG,gCACG,cAACQ,EAAA,EAAM,CAACC,QAAQ,YAAYC,UAAU,kCAAkCC,QAASN,IAA4B,SAAC,UAC9G,cAACG,EAAA,EAAM,CAACC,QAAQ,YAAYC,UAAU,qCAAqCC,QAASN,IAA0B,SAAC,OAC/G,cAACG,EAAA,EAAM,CAACC,QAAQ,YAAYC,UAAU,oCAAoCC,QAASN,IAA6B,SAAC,SACjH,cAACG,EAAA,EAAM,CAACC,QAAQ,YAAYW,MAAM,UAAUV,UAAU,yBAAyBC,QAASN,IAA4B,SAAC,SACrH,cAACO,EAAA,EAAQ,CACNb,KAAMA,EACNe,QAZW,WACjBd,GAAQ,EACX,EAWSgB,QAAS,sBAAMC,GAAG,aAAY,SAAC,sBAI3C,ECzCe,SAASI,IACrB,MAAwBvB,oBAAS,GAAM,mBAAhCC,EAAI,KAAEC,EAAO,KAUpB,OACG,sBAAKU,UAAU,iBAAgB,UAC5B,cAACF,EAAA,EAAM,CAACC,QAAQ,YAAYW,MAAM,UAAUV,UAAU,mBAAmBC,QAV3D,WACjBX,GAAQ,EACX,EAQoG,SAAC,8BAC/F,cAACY,EAAA,EAAQ,CACNb,KAAMA,EACNe,QATW,WACjBd,GAAQ,EACX,EAQSgB,QAAS,sBAAMC,GAAG,aAAY,SAAC,sBAI3C,C,4BCVe,SAASK,EAAkBC,GAEvC,MAAwBzB,oBAAS,GAAM,mBAAhCC,EAAI,KAAEC,EAAO,KAMdwB,EAAc,SAACC,EAAOC,GACV,cAAXA,GAGJ1B,GAAQ,EACX,EAEA,OACG,sBAAKU,UAAU,mBAAkB,UAC9B,cAACiB,EAAA,EAAY,CAACC,MAAO,cAACC,EAAA,EAAY,CAACZ,GAAG,qBAAuBa,MAAOP,EAAMO,QAC1E,sBAAKpB,UAAU,MAAK,UACjB,cAACqB,EAAA,EAAkB,CAChBC,WAAW,+BACXC,QAAS,cAACJ,EAAA,EAAY,CAACZ,GAAG,uCAAwC,SAElE,cAAC,EAAiB,MAErB,eAACc,EAAA,EAAkB,CAChBC,WAAW,+BACXC,QAAS,cAACJ,EAAA,EAAY,CAACZ,GAAG,2BAA4B,UAEtD,cAACT,EAAA,EAAM,CAACC,QAAQ,YAAYW,MAAM,UAAUV,UAAU,wCAAwCC,QAzBtF,WACjBX,GAAQ,EACX,EAuB+H,SAAC,oBACpH,cAACY,EAAA,EAAQ,CAACC,aAAc,CAAEZ,SAAU,SAAUE,WAAY,QACvDJ,KAAMA,EACNmC,iBAAkB,IAClBpB,QAASU,EACTR,QAAS,sBAAMC,GAAG,aAAY,SAAC,kBAC/BkB,OAAQ,CACL,cAAC3B,EAAA,EAAM,CAACC,QAAQ,YAAuBC,UAAU,+BAA+B0B,MAAM,OAAOzB,QAASa,EAAY,SAAC,UAAnF,QAChC,cAACa,EAAA,EAAU,CAAa,aAAW,QAAQjB,MAAM,UAAUT,QAASa,EAAY,SAC7E,mBAAGd,UAAU,qBADA,YAKtB,cAACW,EAAY,UAGnB,cAACU,EAAA,EAAkB,CAChBE,QAAS,cAACJ,EAAA,EAAY,CAACZ,GAAG,+BAAgC,SAE1D,cAAC,EAAkB,MAEtB,cAACc,EAAA,EAAkB,CAChBE,QAAS,cAACJ,EAAA,EAAY,CAACZ,GAAG,sCAAuC,SAEjE,sBAAKP,UAAU,MAAK,UACjB,sBAAKA,UAAU,+BAA8B,UAC1C,cAAC4B,EAAA,EAAe,CAAC5B,UAAU,mBAAmBM,QAAQ,kCACtD,cAACsB,EAAA,EAAe,CAAC5B,UAAU,mBAAmBM,QAAQ,kCACtD,cAACsB,EAAA,EAAe,CAAC5B,UAAU,kBAAkBM,QAAQ,qCAExD,sBAAKN,UAAU,+BAA8B,UAC1C,cAAC4B,EAAA,EAAe,CAAC5B,UAAU,mBAAmBM,QAAQ,kCACtD,cAACsB,EAAA,EAAe,CAAC5B,UAAU,qBAAqBM,QAAQ,kCACxD,cAACsB,EAAA,EAAe,CAAC5B,UAAU,gBAAgBM,QAAQ,4CAMrE,C,mCCpFA,mEA2CIsB,EAA+BC,cAAiB,SAAyBhB,EAAOiB,GAClF,IAAIL,EAASZ,EAAMY,OACfM,EAAUlB,EAAMkB,QAChB/B,EAAYa,EAAMb,UAClBM,EAAUO,EAAMP,QAChB0B,EAAcnB,EAAMoB,KACpBA,OAAuB,IAAhBD,EAAyB,QAAUA,EAC1CE,EAAQC,YAAyBtB,EAAO,CAAC,SAAU,UAAW,YAAa,UAAW,SAE1F,OAAoBgB,gBAAoBO,IAAOC,YAAS,CACtDJ,KAAMA,EACNK,QAAQ,EACRC,UAAW,EACXvC,UAAWwC,kBAAKT,EAAQU,KAAMzC,GAC9B8B,IAAKA,GACJI,GAAqBL,gBAAoB,MAAO,CACjD7B,UAAW+B,EAAQzB,SAClBA,GAAUmB,EAAsBI,gBAAoB,MAAO,CAC5D7B,UAAW+B,EAAQN,QAClBA,GAAU,KACf,IAiCeiB,iBAvFK,SAAgBC,GAClC,IAAIC,EAAkC,UAAvBD,EAAME,QAAQC,KAAmB,GAAM,IAClDC,EAAkBC,YAAUL,EAAME,QAAQI,WAAWC,QAASN,GAClE,MAAO,CAELH,KAAMJ,YAAS,CAAC,EAAGM,EAAMQ,WAAWC,MAAOC,YAAgB,CACzD3C,MAAOiC,EAAME,QAAQS,gBAAgBP,GACrCA,gBAAiBA,EACjBQ,QAAS,OACTC,WAAY,SACZC,SAAU,OACVC,QAAS,WACTC,aAAchB,EAAMiB,MAAMD,aAC1BE,SAAU,GACTlB,EAAMmB,YAAYC,GAAG,MAAO,CAC7BF,SAAU,UACVG,SAAU,OAIZ1D,QAAS,CACPoD,QAAS,SAIXjC,OAAQ,CACN8B,QAAS,OACTC,WAAY,SACZS,WAAY,OACZC,YAAa,GACbC,aAAc,GAGpB,GAsDkC,CAChCC,KAAM,sBADO1B,CAEZd,E,6HC1FH,SAASyC,EAAoBC,GAC3B,OAAOA,EAAUC,UAAU,GAAGC,aAChC,CA+KeC,MApKf,SAA2B5D,GACzB,IAAI6D,EAAW7D,EAAM6D,SACjBC,EAAwB9D,EAAM+D,iBAC9BA,OAA6C,IAA1BD,GAA2CA,EAC9DE,EAAoBhE,EAAMiE,WAC1BA,OAAmC,IAAtBD,EAA+B,UAAYA,EACxDE,EAAclE,EAAMkE,YACpBC,EAAoBnE,EAAMoE,WAC1BA,OAAmC,IAAtBD,EAA+B,aAAeA,EAC3DE,EAAWrD,UAAa,GACxBsD,EAAUtD,SAAa,MACvBuD,EAAevD,UAAa,GAC5BwD,EAAoBxD,UAAa,GACrCA,aAAgB,WAMd,OAHAyD,YAAW,WACTF,EAAaG,SAAU,CACzB,GAAG,GACI,WACLH,EAAaG,SAAU,CACzB,CACF,GAAG,IAEH,IAAIC,EAAe3D,eAAkB,SAAU4D,GAE7CN,EAAQI,QAAUG,cAAqBD,EACzC,GAAG,IACCE,EAAYC,YAAWlB,EAAS5C,IAAK0D,GAOrCK,EAAkBC,aAAiB,SAAU/E,GAG/C,IAAIgF,EAAkBV,EAAkBE,QAKxC,GAJAF,EAAkBE,SAAU,EAIvBH,EAAaG,SAAYJ,EAAQI,UApD1C,SAA8BxE,GAC5B,OAAOiF,SAASC,gBAAgBC,YAAcnF,EAAMoF,SAAWH,SAASC,gBAAgBG,aAAerF,EAAMsF,OAC/G,CAkDqDC,CAAqBvF,GAKtE,GAAImE,EAASK,QACXL,EAASK,SAAU,MADrB,CAKA,IAAIgB,EAEJ,GAAIxF,EAAMyF,aACRD,EAAYxF,EAAMyF,eAAeC,QAAQtB,EAAQI,UAAY,OAI7DgB,GADUG,YAAcvB,EAAQI,SACfU,gBAAgBU,SAAS5F,EAAM6F,SAAWzB,EAAQI,QAAQoB,SAAS5F,EAAM6F,QAGvFL,IAAc3B,GAAqBmB,GACtChB,EAAYhE,EAbd,CAeF,IAEI8F,EAAwB,SAA+BC,GACzD,OAAO,SAAU/F,GACfsE,EAAkBE,SAAU,EAC5B,IAAIwB,EAAuBrC,EAAS7D,MAAMiG,GAEtCC,GACFA,EAAqBhG,EAEzB,CACF,EAEIiG,EAAgB,CAClBlF,IAAK6D,GA2CP,OAxCmB,IAAfV,IACF+B,EAAc/B,GAAc4B,EAAsB5B,IAGpDpD,aAAgB,WACd,IAAmB,IAAfoD,EAAsB,CACxB,IAAIgC,EAAmB5C,EAAoBY,GACvCiC,EAAMR,YAAcvB,EAAQI,SAE5B4B,EAAkB,WACpBjC,EAASK,SAAU,CACrB,EAIA,OAFA2B,EAAIE,iBAAiBH,EAAkBpB,GACvCqB,EAAIE,iBAAiB,YAAaD,GAC3B,WACLD,EAAIG,oBAAoBJ,EAAkBpB,GAC1CqB,EAAIG,oBAAoB,YAAaF,EACvC,CACF,CAGF,GAAG,CAACtB,EAAiBZ,KAEF,IAAfH,IACFkC,EAAclC,GAAc+B,EAAsB/B,IAGpDjD,aAAgB,WACd,IAAmB,IAAfiD,EAAsB,CACxB,IAAIwC,EAAmBjD,EAAoBS,GACvCoC,EAAMR,YAAcvB,EAAQI,SAEhC,OADA2B,EAAIE,iBAAiBE,EAAkBzB,GAChC,WACLqB,EAAIG,oBAAoBC,EAAkBzB,EAC5C,CACF,CAGF,GAAG,CAACA,EAAiBf,IACDjD,gBAAoBA,WAAgB,KAAmBA,eAAmB6C,EAAUsC,GAC1G,E,kCC7DI9G,EAAwB2B,cAAiB,SAAkBhB,EAAOiB,GACpE,IAAIL,EAASZ,EAAMY,OACf8F,EAAsB1G,EAAMV,aAM5BZ,GALJgI,OAA8C,IAAxBA,EAAiC,CACrDhI,SAAU,SACVE,WAAY,UACV8H,GAE+BhI,SAC/BE,EAAa8H,EAAoB9H,WACjC+H,EAAwB3G,EAAMW,iBAC9BA,OAA6C,IAA1BgG,EAAmC,KAAOA,EAC7D9C,EAAW7D,EAAM6D,SACjB3C,EAAUlB,EAAMkB,QAChB/B,EAAYa,EAAMb,UAClByH,EAAyB5G,EAAM4G,uBAC/BpH,EAAeQ,EAAMR,aACrBqH,EAAwB7G,EAAM8G,0BAC9BA,OAAsD,IAA1BD,GAA2CA,EACvEpH,EAAUO,EAAMP,QAChBF,EAAUS,EAAMT,QAChBwH,EAAU/G,EAAM+G,QAChBC,EAAYhH,EAAMgH,UAClBC,EAAajH,EAAMiH,WACnBC,EAASlH,EAAMkH,OACfC,EAAWnH,EAAMmH,SACjBC,EAAYpH,EAAMoH,UAClBC,EAAerH,EAAMqH,aACrBC,EAAetH,EAAMsH,aACrB9I,EAAOwB,EAAMxB,KACb+I,EAAqBvH,EAAMuH,mBAC3BC,EAAwBxH,EAAMyH,oBAC9BA,OAAgD,IAA1BD,EAAmCE,IAAOF,EAChEG,EAAwB3H,EAAM4H,mBAC9BA,OAA+C,IAA1BD,EAAmC,CAC1DE,MAAOC,IAASC,eAChBC,KAAMF,IAASG,eACbN,EACAO,EAAkBlI,EAAMkI,gBACxB7G,EAAQC,YAAyBtB,EAAO,CAAC,SAAU,eAAgB,mBAAoB,WAAY,UAAW,YAAa,yBAA0B,eAAgB,4BAA6B,UAAW,UAAW,UAAW,YAAa,aAAc,SAAU,WAAY,YAAa,eAAgB,eAAgB,OAAQ,qBAAsB,sBAAuB,qBAAsB,oBAE5YmI,EAAgBnH,WAEhBoH,EAAkBpH,YAAe,GACjCqH,EAASD,EAAgB,GACzBE,EAAYF,EAAgB,GAE5BnI,EAAcgF,aAAiB,WAC7B1F,GACFA,EAAQgJ,WAAM,EAAQC,UAE1B,IACIC,EAAmBxD,aAAiB,SAAUyD,GAC3CnJ,GAAoC,MAAzBmJ,IAIhBC,aAAaR,EAAczD,SAC3ByD,EAAczD,QAAUD,YAAW,WACjCxE,EAAY,KAAM,UACpB,GAAGyI,GACL,IACA1H,aAAgB,WAKd,OAJIxC,GACFiK,EAAiB9H,GAGZ,WACLgI,aAAaR,EAAczD,QAC7B,CACF,GAAG,CAAClG,EAAMmC,EAAkB8H,IAG5B,IAAIG,EAAc,WAChBD,aAAaR,EAAczD,QAC7B,EAIImE,EAAe7H,eAAkB,WACX,MAApBL,GACF8H,EAAuC,MAAtBlB,EAA6BA,EAAwC,GAAnB5G,EAEvE,GAAG,CAACA,EAAkB4G,EAAoBkB,IA6C1C,OAbAzH,aAAgB,WACd,IAAK8F,GAA6BtI,EAGhC,OAFAsK,OAAOvC,iBAAiB,QAASsC,GACjCC,OAAOvC,iBAAiB,OAAQqC,GACzB,WACLE,OAAOtC,oBAAoB,QAASqC,GACpCC,OAAOtC,oBAAoB,OAAQoC,EACrC,CAIJ,GAAG,CAAC9B,EAA2B+B,EAAcrK,KAExCA,GAAQ6J,EACJ,KAGWrH,gBAAoB4C,EAAmBpC,YAAS,CAClE0C,YAhCoB,SAAyBhE,GACzCX,GACFA,EAAQW,EAAO,YAEnB,GA6BG0G,GAAsC5F,gBAAoB,MAAOQ,YAAS,CAC3ErC,UAAWwC,kBAAKT,EAAQU,KAAMV,EAAQ,eAAe6H,OAAOC,YAAWtK,IAAWqK,OAAOC,YAAWpK,KAAeO,GACnHkI,aAnDqB,SAA0BnH,GAC3CmH,GACFA,EAAanH,GAGf0I,GACF,EA8CEtB,aA5CqB,SAA0BpH,GAC3CoH,GACFA,EAAapH,GAGf2I,GACF,EAuCE5H,IAAKA,GACJI,GAAqBL,gBAAoByG,EAAqBjG,YAAS,CACxEyH,QAAQ,EACRC,GAAI1K,EACJuI,QAASoC,aA/BO,WAChBb,GAAU,EACZ,GA6B8CvB,GAC5CC,UAAWA,EACXC,WAAYA,EACZC,OAAQA,EACRC,SAAUgC,aAvCO,WACjBb,GAAU,EACZ,GAqCgDnB,GAC9CC,UAAWA,EACXgC,QAASxB,EACTyB,UAAwB,QAAb3K,EAAqB,OAAS,MACxCwJ,GAAkBrE,GAAyB7C,gBAAoBD,IAAiBS,YAAS,CAC1F/B,QAASA,EACTmB,OAAQA,GACPpB,MACL,IAoKeqC,iBAnYK,SAAgBC,GAClC,IAAIwH,EAAO,CACTC,IAAK,GAEHC,EAAU,CACZC,OAAQ,GAENC,EAAQ,CACVC,eAAgB,YAEdC,EAAO,CACTD,eAAgB,cAEdE,EAAO,CACTN,IAAK,IAEHO,EAAU,CACZL,OAAQ,IAENM,EAAS,CACXL,MAAO,IAELM,EAAQ,CACVJ,KAAM,IAEJK,EAAS,CACXL,KAAM,MACNF,MAAO,OACPQ,UAAW,oBAEb,MAAO,CAELtI,KAAM,CACJuI,OAAQrI,EAAMqI,OAAOC,SACrBC,SAAU,QACV3H,QAAS,OACTkH,KAAM,EACNF,MAAO,EACPC,eAAgB,SAChBhH,WAAY,UAId2H,sBAAuB9I,YAAS,CAAC,EAAG8H,EAAM9G,YAAgB,CAAC,EAAGV,EAAMmB,YAAYC,GAAG,MAAO1B,YAAS,CAAC,EAAGqI,EAAMI,KAG7GM,yBAA0B/I,YAAS,CAAC,EAAGgI,EAAShH,YAAgB,CAAC,EAAGV,EAAMmB,YAAYC,GAAG,MAAO1B,YAAS,CAAC,EAAGsI,EAASG,KAGtHO,qBAAsBhJ,YAAS,CAAC,EAAG8H,EAAMI,EAAOlH,YAAgB,CAAC,EAAGV,EAAMmB,YAAYC,GAAG,MAAO1B,YAAS,CACvGoI,KAAM,QACLC,EAAME,KAGTU,wBAAyBjJ,YAAS,CAAC,EAAGgI,EAASE,EAAOlH,YAAgB,CAAC,EAAGV,EAAMmB,YAAYC,GAAG,MAAO1B,YAAS,CAC7GoI,KAAM,QACLE,EAASC,KAGZW,oBAAqBlJ,YAAS,CAAC,EAAG8H,EAAMM,EAAMpH,YAAgB,CAAC,EAAGV,EAAMmB,YAAYC,GAAG,MAAO1B,YAAS,CACrGkI,MAAO,QACNG,EAAMG,KAGTW,uBAAwBnJ,YAAS,CAAC,EAAGgI,EAASI,EAAMpH,YAAgB,CAAC,EAAGV,EAAMmB,YAAYC,GAAG,MAAO1B,YAAS,CAC3GkI,MAAO,QACNI,EAASE,KAEhB,GA+TkC,CAChCY,MAAM,EACNrH,KAAM,eAFO1B,CAGZxC,E","file":"static/js/85.7f4417ee.chunk.js","sourcesContent":["/*======= Positioned Snackbar ======*/\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nfunction PositionedSnackbar() {\n   const [open,setOpen] = useState(false);\n   const [vertical,setVertical] = useState('top');\n   const [horizontal,setHorizontal] = useState('center');\n\n   const handleClick = (ver,hori) => {\n      setOpen(true);\n      setVertical(ver);\n      setHorizontal(hori);\n   };\n\n   const handleClose = () => {\n      setOpen(false);\n   };\n\n   return (\n      <div>\n         <Button variant=\"contained\" className=\"mr-15 mb-10 btn-primary text-white\" onClick={() => handleClick('top','center')}>\n            Top-Center\n         </Button>\n         <Button variant=\"contained\" className=\"mr-15 mb-10 btn-danger text-white\" onClick={() => handleClick('top','right')}>\n            Top-Right\n         </Button>\n         <Button variant=\"contained\" className=\"mr-15 mb-10 btn-success text-white\" onClick={() => handleClick('bottom','right' )}>\n            Bottom-Right\n         </Button>\n         <Button variant=\"contained\" className=\"mr-15 mb-10 btn-warning text-white\" onClick={() => handleClick('bottom','center')}>\n            Bottom-Center\n            </Button>\n         <Button variant=\"contained\" className=\"mr-15 mb-10 btn-info text-white\" onClick={() => handleClick('bottom','left')}>\n            Bottom-Left\n         </Button>\n         <Button variant=\"contained\" className=\"mr-15 mb-10 btn-secondary text-white\" onClick={() => handleClick('top','left')}>\n            Top-Left\n         </Button>\n         <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            open={open}\n            onClose={handleClose}\n            ContentProps={{\n               'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">I love snacks</span>}\n         />\n      </div>\n   );\n}\n\nexport default PositionedSnackbar;\n","/*====== Transition Snackbar =======*/\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\n\nfunction TransitionLeft(props) {\n   return <Slide direction=\"left\" {...props} />;\n}\n\nfunction TransitionUp(props) {\n   return <Slide direction=\"up\" {...props} />;\n}\n\nfunction TransitionRight(props) {\n   return <Slide direction=\"right\" {...props} />;\n}\n\nfunction TransitionDown(props) {\n   return <Slide direction=\"down\" {...props} />;\n}\n\nfunction DirectionSnackbar() {\n   const [open, setOpen] = useState(false)\n\n   const handleClick = transition => () => {\n      setOpen(true);\n   };\n\n   const handleClose = () => {\n      setOpen(false);\n   };\n\n   return (\n      <div>\n         <Button variant=\"contained\" className=\"btn-info text-white mr-15 mb-10\" onClick={handleClick(TransitionLeft)}>Right</Button>\n         <Button variant=\"contained\" className=\"btn-warning text-white mr-15 mb-10\" onClick={handleClick(TransitionUp)}>Up</Button>\n         <Button variant=\"contained\" className=\"btn-danger text-white mr-15 mb-10\" onClick={handleClick(TransitionRight)}>Left</Button>\n         <Button variant=\"contained\" color=\"primary\" className=\"text-white mr-15 mb-10\" onClick={handleClick(TransitionDown)}>Down</Button>\n         <Snackbar\n            open={open}\n            onClose={handleClose}\n            message={<span id=\"message-id\">I love snacks</span>}\n         />\n      </div>\n   );\n}\n\nexport default DirectionSnackbar;\n","/*======= Fade Snackbar ======*/\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport default function FadeSnackbar() {\n   const [open, setOpen] = useState(false);\n   \n   const handleClick = () => {\n      setOpen(true);\n   };\n\n   const handleClose = () => {\n      setOpen(false);\n   };\n\n   return (\n      <div className=\"d-inline-block\">\n         <Button variant=\"contained\" color=\"primary\" className=\"text-white mb-10\" onClick={handleClick}>Open with Fade Transition</Button>\n         <Snackbar\n            open={open}\n            onClose={handleClose}\n            message={<span id=\"message-id\">I love snacks</span>}\n         />\n      </div>\n   );\n}\n","/**\n * Snackbar\n */\nimport React, { useState } from 'react';\nimport {Button, Snackbar, IconButton, SnackbarContent} from '@material-ui/core';\n//Componets\nimport PositionedSnackbar from './component/PositionSnackbar';\nimport DirectionSnackbar from './component/DirectionSnackbar';\nimport FadeSnackbar from './component/FadeSnackbar';\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n\nexport default function SnackbarComponent(props) {\n   // Simple Snackbar\n   const [open, setOpen] = useState(false);\n\n   const handleClick = () => {\n      setOpen(true);\n   };\n\n   const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n         return;\n      }\n      setOpen(false);\n   };\n\n   return (\n      <div className=\"snackbar-wrapper\">\n         <PageTitleBar title={<IntlMessages id=\"sidebar.snackbar\" />} match={props.match} />\n         <div className=\"row\">\n            <RctCollapsibleCard\n               colClasses=\"col-sm-12 col-md-12 col-xl-6\"\n               heading={<IntlMessages id=\"widgets.transitionControlDirection\" />}\n            >\n               <DirectionSnackbar />\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               colClasses=\"col-sm-12 col-md-12 col-xl-6\"\n               heading={<IntlMessages id=\"widgets.simpleSnackbar\" />}\n            >\n               <Button variant=\"contained\" color=\"primary\" className=\"text-white mr-10 mb-10 d-inline-block\" onClick={handleClick}>simple snackbar</Button>\n               <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'left', }}\n                  open={open}\n                  autoHideDuration={6000}\n                  onClose={handleClose}\n                  message={<span id=\"message-id\">Note archived</span>}\n                  action={[\n                     <Button variant=\"contained\" key=\"undo\" className=\"btn-danger btn-sm text-white\" dense=\"true\" onClick={handleClose}> UNDO </Button>,\n                     <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={handleClose} >\n                        <i className=\"zmdi zmdi-close\"></i>\n                     </IconButton>,\n                  ]}\n               />\n               <FadeSnackbar />\n            </RctCollapsibleCard>\n         </div>\n         <RctCollapsibleCard\n            heading={<IntlMessages id=\"widgets.positionedSnackbar\" />}\n         >\n            <PositionedSnackbar />\n         </RctCollapsibleCard>\n         <RctCollapsibleCard\n            heading={<IntlMessages id=\"widgets.contexualColoredSnackbars\" />}\n         >\n            <div className=\"row\">\n               <div className=\"col-sm-12 col-md-12 col-xl-6\">\n                  <SnackbarContent className=\"bg-primary mb-15\" message=\"I Love Automaton Admin Theme.\" />\n                  <SnackbarContent className=\"bg-success mb-15\" message=\"I Love Automaton Admin Theme.\" />\n                  <SnackbarContent className=\"bg-danger mb-15\" message=\"I Love Automaton Admin Theme.\" />\n               </div>\n               <div className=\"col-sm-12 col-md-12 col-xl-6\">\n                  <SnackbarContent className=\"bg-warning mb-15\" message=\"I Love Automaton Admin Theme.\" />\n                  <SnackbarContent className=\"bg-secondary mb-15\" message=\"I Love Automaton Admin Theme.\" />\n                  <SnackbarContent className=\"bg-info mb-15\" message=\"I Love Automaton Admin Theme.\" />\n               </div>\n            </div>\n         </RctCollapsibleCard>\n      </div>\n   );\n}\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event) {\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$disableReactTr = props.disableReactTree,\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      onClickAway = props.onClickAway,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var activatedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(function () {\n      activatedRef.current = true;\n    }, 0);\n    return function () {\n      activatedRef.current = false;\n    };\n  }, []); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviours like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\n      var doc = ownerDocument(nodeRef.current);\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n\n  var childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired before the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);"],"sourceRoot":""}