{"version":3,"sources":["Routes/dashboard/CreateTask/index.js","Routes/dashboard/ReuseComponent/CustomBreadcrumbs.js","Routes/dashboard/ReuseComponent/EditDataset.js"],"names":["ViewDataset","props","history","useHistory","location","useState","searchText","setSearchText","loading","deleteConfirmationDialog","useRef","activePage","setActivePage","totalPageCount","setTotalPageCount","taskFile","setTaskFile","filteredTaskFiles","setFilteredTaskFiles","modalOpen","setModalOpen","useEffect","localStorage","getItem","getTaskFile","files","state","data","parseInt","count","currencies","value","label","className","name","content","currentPage","breadcrumbData","title","message","ref","fullBlock","style","justifyContent","type","placeholder","border","borderBottom","onChange","e","target","variant","color","cursor","map","file","ind","console","log","file_type","href","file_name","onClick","filterarray","filter","item","id","handleFileSelect","length","itemsCountPerPage","pageRangeDisplayed","pageNumber","itemClass","linkClass","hideFirstLastPages","totalItemsCount","isOpen","size","centered","row","for","sm","select","defaultValue","option","push","url","CustomBreadcrumbs","HandleNavigate","index","myarray","i","undefined","EditDataset","selected","Modalopen","close","reloadlist","open","setOpen","datasetName","setDatasetName","comment","setComment","dataset_name","onClose","margin","padding","marginTop","height","marginBottom","accessToken","JSON","parse","UpadatDataset","then","res","status","NotificationManager","success","error","catch","err"],"mappings":"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","file":"static/js/96.31e4061b.chunk.js","sourcesContent":["\n\n/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Button from '@material-ui/core/Button'\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Col\n} from 'reactstrap'\nimport Pagination from \"react-js-pagination\";\n\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications'\n// delete confirmation dialog\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n// update user form\n//  import UpdateUserForm from './UpdateUserForm'\n// page title bar\nimport PageTitleBar from '../../../Components/PageTitleBar/PageTitleBar'\n// intl messages\nimport IntlMessages from '../../../Util/IntlMessages'\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport {\n  DeleteDataset,\n  getViewProjectDatasets,\n  ViewFiles\n} from '../../../Api/'\n\nimport FolderIcon from '@mui/icons-material/Folder';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport ImageIcon from '@mui/icons-material/Image';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport CheckIcon from '@mui/icons-material/Check';\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\nimport CloseIcon from '@mui/icons-material/Close';\nimport EditDataset from '../ReuseComponent/EditDataset';\nimport CustomBreadcrumbs from \"../ReuseComponent/CustomBreadcrumbs\";\nimport TextField from '@mui/material/TextField';\n\nimport MenuItem from '@mui/material/MenuItem';\nexport default function ViewDataset(props) {\n  const history = useHistory();\n  const {location}=props\n  //  const [users, setUsers] = useState() // use when data is coming from api\n//   const [users, setUsers] = useState([])\n  //  const [filteredUsers, setFilteredUsers] = useState() // use when the data is coming fom api\n//   const [filteredUsers, setFilteredUsers] = useState([])\n  const [searchText, setSearchText] = useState('');\n  \n\n  const [username, setUsername] = useState(\"\")\n//   const [email, setEmail] = useState(\"\")\n \n//   const [selectedUser, setSelectedUser] = useState(null)\n  const [loading, setLoading] = useState(false)\n//   const [addNewUserModal, setAddNewUserModal] = useState(false)\n//   const [updateNewUserModal, setupdateNewUserModal] = useState(false)\n//   const [deleteUserModal, setdeleteUserModal] = useState(false)\n\n  const deleteConfirmationDialog = useRef()\n  const [selected, setSelectedItem] = useState({})\n\n//   const [editUser, setEditUser] = useState(null)\n//   const [selectedUsers, setSelectedUsers] = useState(0)\n//   const [viewDetails, setViewDetails] = useState()\nconst [openEditDataset,setOpenEditDataset] = useState(false)\n\n  const [datasets, setDatasets] = useState([]);\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState('');\n  const [taskFile, setTaskFile] = useState([]);\n  const [filteredTaskFiles, setFilteredTaskFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [modalOpen,setModalOpen]=useState(false);\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    // conditional rendring\n    // if(isLoggedInBool !== \"true\"){\n    //   history.push(\"/login\")\n    //     localStorage.clear();\n    // } else {\n    // getCustomersListData();\n    getTaskFile()\n    // }\n  }, [])\n\n//   const getViewProjectData = () => {\n//     const authToken = JSON?.parse(localStorage.getItem(\"token\"));\n//     const projectId = localStorage?.getItem(\"projId\")\n\n//     if(authToken !== null){\n//       getViewProjectDatasets(authToken, projectId, activePage)\n//       .then(res => {\n//         if(res?.status == 200){\n//           console.log(res?.data?.results, \"project's all lists\")\n//           setDatasets(res?.data?.results)\n//           setFilteredDatasets(res?.data?.results);\n\n//           console.log(res?.data?.count, \"total counts of datasets of projects\")\n//           setTotalPageCount(parseInt(res?.data?.count));\n//         } else {\n//           console.log('Response from View project Datasets lists api:', res)\n//         }\n//       }).catch((error)=>{\n//         console.log(\"error=\",error)\n//       })\n//     }\n//   }\n\nconst getTaskFile = () => {\n          let files = location?.state.files\n  \n                setTaskFile(files?.data || [])\n                setFilteredTaskFiles(files?.data || [])\n                setTotalPageCount(parseInt(files?.count || 1));\n        \n}\n\n  const handlePageChange = (pageNumber) => {\n    console.log(\"pagination\", pageNumber)\n    \n    \n    if (activePage !== pageNumber) {\n           \n          // file filter\n           \n              // setTaskFile(res?.data?.results);\n              // setFilteredTaskFiles(res?.data?.results);\n              // setTotalPageCount(res?.data?.count);\n            \n         \n      setActivePage(pageNumber)\n    }\n  }\n\n  const handleFileSelect = (file) => {\n    console.log(file, \"selecteddd filee\");\n\n    const clone =[...taskFile] \n     const filterarray = taskFile.filter((item)=>{\n       return item.id !== file.id\n     })\n\n    setFilteredTaskFiles(filterarray)\n    setTaskFile(filterarray)\n   \n\n\n\n\n    \n  }\n   \n\n\n\n\n\n  const NewTaskNavigate = ()=>{\n    \n    setModalOpen(true)\n    //  if(selectedFiles.length > 0){\n    //   const  breadcrumbData =location?.state?.breadcrumbData || []\n    //          breadcrumbData.push( { name: 'View Dataset', url: '/app/dashboard/viewDataset' });\n    //          history.push(\"/app/dashboard/createTask\",{breadcrumbData:breadcrumbData});\n\n    //          console.log()\n    //  }else{\n    //   NotificationManager.error(\"you don't have selected file  \");\n\n    //  }\n\n\n\n  }\n\n  const currencies = [\n    {\n      value: 'USD',\n      label: '',\n    },\n    {\n      value: 'EUR',\n      label: 'select',\n    },\n    {\n      value: 'BTC',\n      label: 'select',\n    },\n    {\n      value: 'JPY',\n      label: 'ffg',\n    },\n  ];\n\n\n\n const  Submit =()=>{\n  const  breadcrumbData =location?.state?.breadcrumbData || []\n  breadcrumbData.push( { name: 'View Task', url: '/app/dashboard/createTask' });\n  history.push(\"/app/dashboard/taskStatus\",{breadcrumbData:breadcrumbData});\n  \n  \n }\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>Automaton | Customers List</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      {/* <PageTitleBar\n        title={<IntlMessages id=\"sidebar.viewDataset\" />}\n        match={props.match}\n      /> */}\n     <CustomBreadcrumbs    currentPage={\"View Dataset\"} data={location?.state?.breadcrumbData}  />\n\n                <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n             message=\"This will delete your Dataset permanently.\"\n            //  onConfirm={() => Delete_Datset()}\n             ref={deleteConfirmationDialog} />\n      <RctCollapsibleCard fullBlock>\n     \n        <div className=\"table-responsive\">\n            <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n            <div className='search-row'>\n                <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n                <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} \n                // onClick={getSearchedCustomerData}\n                >Search</Button>\n            </div>\n\n            \n            </div>\n            <div className=\"d-flex align-items-center justify-content-center\">\n              <p className=\"Comman-Heading\">Task-1</p>\n            </div>\n\n            <div className='viewDatasetFilesContainer'>\n                {\n                    filteredTaskFiles && filteredTaskFiles.map((file,ind)=> {\n                      console.log(file)\n                        return(\n                                // <div className=\"mainBox\" key={ind} onClick={()=>handleFileSelect(file)}>\n                                <div className=\"mainBox\" key={ind}>\n                                  <div className=\"imageContainer\">\n                                    {/* {\n                                      file.selectedFile ? <CheckBoxIcon className=\"folderIcon\" /> : (file.file_type == \"pdf\" ? <PictureAsPdfIcon className=\"folderIcon\" /> : (file.file_type == \"jpg\" || file.file_type == \"jpeg\" || file.file_type == \"png\" ? <ImageIcon className=\"folderIcon\" /> : (file.file_type == \"xlsx\" ? <DescriptionIcon className=\"folderIcon\" /> : <FolderIcon className=\"folderIcon\" />)))\n                                    } */}\n\n                                    {\n                                      file.file_type == \"pdf\" ? <a href={file?.file} target=\"_blank\"><PictureAsPdfIcon className=\"folderIcon\" /></a> : (file.file_type == \"jpg\" || file.file_type == \"jpeg\" || file.file_type == \"png\" ? <a href={file?.file} target=\"_blank\"><ImageIcon className=\"folderIcon\" /></a> : (file.file_type == \"xlsx\" ? <a href={file?.file} target=\"_blank\"><DescriptionIcon className=\"folderIcon\" /></a> : <a href={file?.file} target=\"_blank\"><InsertDriveFileIcon className=\"folderIcon\" /></a>))\n                                    }\n\n                                  </div>\n                                  <div className=\"nameContainer\">\n                                    <p>{file.file_name}</p>\n                                  </div>\n\n                                 <div className=\"checkDiv\" onClick={()=>handleFileSelect(file)}>{\n                                  <CloseIcon/>\n                                  }</div>\n                                  \n                                </div>\n                        )\n                    })\n                }\n            </div>\n           \n            {filteredTaskFiles.length == 0 && <center style={{ color: \"black\" }}>Data not available </center>}\n          {\n            taskFile?.length > 0 &&\n            <div className='paginationDiv'> \n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={6}\n                pageRangeDisplayed={5}\n                onChange={(e) => handlePageChange(e)}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                hideFirstLastPages={true}\n                totalItemsCount={totalPageCount}\n              />\n            </div>\n          }\n        </div>\n       <div className=\"d-flex align-items-center justify-content-center\"> \n       <Button \n       variant=\"contained\"\n        color=\"primary\" \n        className=\"text-white mx-5 mb-30\"\n         style={{ cursor: \"pointer\" }} \n        onClick={NewTaskNavigate}>\n        Proceed\n        </Button></div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n\n       \n\n        <Modal\n        isOpen={modalOpen}\n        size=\"lg\"\n        centered={true}\n       \n       >\n       <div   className=\"p-25\"> \n    \n <center className=\" Comman-Heading\">  STARTING THE TASK ACCURACY </center>\n\n  <Form className=\"mt-20\" >\n  <FormGroup row>\n    <Label\n      for=\"exampleEmail\"\n      sm={3}\n    >\n     SELECT OUT PUT\n    </Label>\n    <Col sm={9}>\n    <TextField\n          id=\"outlined-select-currency\"\n          select\n          label=\"Select\"\n          defaultValue=\"EUR\"\n          // helperText=\"Please select your currency\"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n    </Col>\n  </FormGroup>\n  <FormGroup row>\n    <Label\n      for=\"examplePassword\"\n      sm={3}\n    >\n     ORTHOMOSIC\n    </Label>\n    <Col sm={9}>\n    <TextField\n          id=\"outlined-select-currency\"\n          select\n          label=\"Select\"\n          defaultValue=\"EUR\"\n          // helperText=\"Please select your currency\"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n    </Col>\n  </FormGroup>\n  <FormGroup row>\n    <Label\n      for=\"exampleSelect\"\n      sm={3}\n    >\n      ELEVATION MODAL\n    </Label>\n    <Col sm={9}>\n    <TextField\n          id=\"outlined-select-currency\"\n          select\n          label=\"Select\"\n          defaultValue=\"EUR\"\n          // helperText=\"Please select your currency\"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n    </Col>\n  </FormGroup>\n  <FormGroup row>\n    <Label\n      for=\"exampleSelect\"\n      sm={3}\n    >\n      3D MODAL\n    </Label>\n    <Col sm={9}>\n    <TextField\n          id=\"outlined-select-currency\"\n          select\n          label=\"Select\"\n          defaultValue=\"EUR\"\n          // helperText=\"Please select your currency\"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n    </Col>\n  </FormGroup>\n\n</Form>\n<h4>Task Will Be Added To Execution Queue</h4>\n<h4>Do You Want To Process These Image And Create The Task</h4>\n\n<div className=\"d-flex align-items-end justify-content-end\"> \n<Button \nvariant=\"contained\" \ncolor=\"primary\"\n className=\"text-white mx-5\"\n  style={{ cursor: \"pointer\" }} \n onClick={Submit}>\n Yes\n </Button>\n \n <Button \nvariant=\"contained\" \ncolor=\"error\"\n className=\"text-white mx-5 bg-danger\"\n  style={{ cursor: \"pointer\" ,color:\"red\"}} \n onClick={()=>setModalOpen(false)}>\n No\n </Button>\n </div>\n       </div>\n      </Modal>\n\n\n\n\n\n\n      {/* <EditDataset selected={selected} Modalopen={openEditDataset} close={()=>setOpenEditDataset(false)} reloadlist={getTaskFile}/> */}\n    </div>\n  )\n}\n","import React, { useEffect,useState } from 'react';\nimport { useHistory } from 'react-router';\n\n\nconst CustomBreadcrumbs = ({ currentPage, data =[] ,props}) => {\n\nconst [navData,setNavData]=useState(data)\n\n\nuseEffect(()=>{\n\n},[])\n\n  const history = useHistory();\n      console.log(data,\"daaata..\")\n  \n  const HandleNavigate = async (item,index)=>{\n    // const Data = [...navData]\n    let myarray=[]\n    // console.log(index,\"Data=\",Data)\n\n\n     for (let i = 0; i < index; i++) {\n       \n      myarray.push(data[i])\n     }\nconsole.log(myarray,\"myarray\")\n    \n    history.push(item.url,{breadcrumbData:myarray})\n  }\n\n  return (\n    <div className=\"page-title d-flex  align-items-center\">\n      {data != undefined  && data.length > 0 &&data.map((item, index) => (\n        <div key={index} className=\"page-title-wrap  d-flex  align-items-center mr-1\" style={{cursor:\"pointer\"}}>\n          \n        <i className=\"ti-angle-left text-dark  custombredcrum-icon\"></i> <span onClick={()=>HandleNavigate(item,index)} className=\"globalFontFamily custombredcrum-heding\">{item.name}</span>\n         \n        </div>\n      ))}\n      <div className=\"page-title-wrap   d-flex  align-items-center text-white m-0\"  style={{cursor:\"pointer\"}}><i className=\"ti-angle-left  text-white custombredcrum-icon\"></i><span className=\"globalFontFamily custombredcrum-heding\">{currentPage}</span></div>\n    </div>\n  );\n};\n\nexport default CustomBreadcrumbs;\n","import React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { EditProjectDetails, UpadatDataset } from 'Api';\n\nconst EditDataset = ({ selected, Modalopen, close,reloadlist }) => {\n    const [open, setOpen] = useState(false)\n    console.log(selected)\n    const [datasetName, setDatasetName] = useState( \"\")\n    const [comment, setComment] = useState(\"\")\n    \n    \n\n\n    useEffect(() => {\n       if(selected){\n        setDatasetName(selected?.dataset_name || \"\")\n        setComment(selected?.comment)\n       }\n\n        console.log(datasetName,comment,\">>>>>.>>>\")\n        //  setImage(item?.project_image)\n        setOpen(Modalopen)\n\n    }, [Modalopen])\n\n\n\n\n   \n    const SaveEditDetails = () => {\n      \n            const accessToken = JSON.parse(localStorage.getItem('token'))\n           if(datasetName != \"\" || comment != \"\"){\n\n               if (accessToken !== null) {\n                   UpadatDataset(accessToken,selected?.id,datasetName,comment)\n                       .then((res) => {\n                           if (res?.status === 200) {\n                            if(reloadlist){\n                               reloadlist()\n                               setOpen(false)\n                               setDatasetName(\"\")\n                               setComment(\"\")\n                              \n                                if(close){\n                                   close()\n                                   }\n                                   NotificationManager.success(\" Datset updated succesfully!\") \n                            }\n                               console.log('Response from update dataset  :', res)\n                           } else {\n                               // console.log('Response from customerlist:', res)\n   \n                               NotificationManager.error(\"Dataset details update failed!\")\n                           }\n                       })\n                       .catch((err) => {\n                           console.log('Response from Upadat dataset:', err)\n                       })\n               }\n           }else{\n            NotificationManager.error(\"All field is empty\")\n           }\n\n    }\n\n\n    return (\n        <Dialog\n            onClose={() => (close(false), setOpen(false))}\n            open={open}\n\n        >\n            <DialogContent style={{ margin: 0, padding: 0 }}>\n                <div className=\"user-profile-widget\">\n                \n                    <div className=\"p-20\">\n                    \n                    <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={(e)=>setDatasetName(e.target.value)}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {(e)=>{setComment(e.target.value)}}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\"  className=\"mx-2 d-flex justify-content-center align-items-center px-3\" onClick={SaveEditDetails}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\"   className=\"mx-2 d-flex justify-content-center align-items-center\"  onClick={() => (close(false), setOpen(false))}>Cancel</Button>\n                               \n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default EditDataset\n"],"sourceRoot":""}