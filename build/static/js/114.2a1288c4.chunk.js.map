{"version":3,"sources":["Routes/users/user-profile-1/component/UserBlock.js","Routes/users/user-profile-1/index.js","../node_modules/reactstrap/es/Col.js"],"names":["UserBlock","useState","profileData","setProfileData","useEffect","getProfileInfo","accessToken","JSON","parse","localStorage","getItem","console","log","profileInfo","then","res","status","data","catch","err","className","src","process","alt","width","height","first_name","last_name","email","UserProfile","props","firstName","setFirstName","lastName","setLastName","setEmail","mobile_number","phone","setPhone","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","phoneError","setPhoneError","show","setShow","history","useHistory","Helmet","name","content","PageTitleBar","title","IntlMessages","id","match","RctCard","Form","FormGroup","row","Label","for","sm","Col","Input","type","value","onChange","e","target","Button","style","backgroundColor","color","borderRadius","variant","size","onClick","regexName","trim","test","updateProfileInfo","toLowerCase","NotificationManager","success","push","window","location","reload","response","error","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","tag","tagPropType","xs","md","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","isObject","_classNames","colSizeInterfix","colClass","mapToCssModules","classNames","_colClass","length","classes","React","createElement","_extends"],"mappings":"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","file":"static/js/114.2a1288c4.chunk.js","sourcesContent":["/**\n * User Block\n */\nimport React,{useEffect,useState} from 'react';\nimport { profileInfo } from '../../../../Api/index';\n\nfunction UserBlock(){\n   const [profileData, setProfileData] = useState();\n\n   useEffect(() => {\n      getProfileInfo();\n    }, [])\n   \n    const getProfileInfo =  () => {\n      const accessToken = JSON.parse(localStorage.getItem('token'));\n      console.log(\"Token\",accessToken)\n      if(accessToken !== null) {\n         profileInfo(accessToken)\n         .then(res => {      \n            if (res?.status === 200) {\n               setProfileData(res?.data);\n               console.log(\"Profile Info ResponseData\", res?.data)     \n           } else if(res?.status === 400) { \n            console.log(\"Profile Info Response\", res)    \n           }\n           else {\n            console.log(\"Profile Info Response\", res)    \n           }\n     \n   \n         }) .catch(err => {\n            console.log(err);\n          });\n   \n      }\n    }\n\n   return (\n      <div className=\"profile-top mb-20\">\n         <img src={`${process.env.PUBLIC_URL}/assets/images/img/profile-bg.jpg`} alt=\"profile banner\" className=\"img-fluid\" width=\"1920\" height=\"345\" />\n            <div className=\"profile-content\">\n               <div className=\"media align-items-center\">\n               {/* <img src={`${process.env.PUBLIC_URL}/assets/images/avatars/user-15.jpg`} alt=\"user profile\" className=\"rounded-circle bordered\" width=\"140\" height=\"140\" /> */}\n                  <div className=\"media-body pt-25\">\n                        <div className=\"d-flex flex-column align-items-baseline\">\n                           <h2 className=\"user-name text-white\">{profileData?.first_name} {profileData?.last_name}</h2>\n                           {/* <h2>{profileData?.username}</h2> */}\n                           <p>{profileData?.email}</p>\n                        </div>\n                  </div>\n               </div>\n            </div>\n      </div>\n   );\n}\n\nexport default UserBlock;\n","/**\n * User Profile Page\n */\nimport React, { useState, useEffect } from 'react'\n\nimport { Helmet } from 'react-helmet'\n\nimport UserBlock from './component/UserBlock'\nimport { Form, FormGroup, Input, Label, Col } from 'reactstrap'\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications';\n\n// rct card box\nimport { RctCard } from 'Components/RctCard'\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar'\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages'\nimport '../../../Assets/css/main.css'\nimport { updateProfileInfo } from '../../../Api/index'\nimport Button from '@material-ui/core/Button'\n\nexport default function UserProfile(props) {\n  const [firstName, setFirstName] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).first_name);\n  const [lastName, setLastName] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).last_name);\n  const [email, setEmail] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).email);\n  const [phone, setPhone] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).mobile_number);\n  const [firstNameError, setFirstNameError] = useState('')\n  const [lastNameError, setLastNameError] = useState('')\n  const [emailError, setEmailError] = useState('')\n  const [phoneError, setPhoneError] = useState('')\n  const [show, setShow] = useState(false)\n  const history = useHistory();\n\n\n  //=================== Mams update profile ====================//\n  // const updateProfile = () => {\n  //   const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  //   const phoneRegex = /^[6789]\\d{9}$/;\n\n  //   if (email.trim() == '' && phone.trim() == '' && firstName.trim() == '' && lastName.trim() == '') {\n  //     setFirstNameError('* This is required Field') \n  //     setLastNameError('* This is required Field')\n  //     setEmailError('* This is required Field')\n  //     setPhoneError('* This is required Field')\n  //     setShow(true)\n  //   } else if (emailRegex.test(email.trim())) {\n      // const accessToken = JSON.parse(localStorage.getItem('token'))\n      // if (accessToken !== null) {\n      //   updateProfileInfo(firstName, lastName, email, phone, accessToken)\n      //     .then((res) => {\n      //       if (res?.status === 200) {\n      //         console.log('Response from update profile:', res)\n      //         setShow(false)\n      //         setFirstNameError('') \n      //         setLastNameError('')\n      //         setEmailError('')\n      //         setPhoneError('')\n      //         setFirstName('') \n      //         setLastName('') \n      //         setPhone('') \n      //         setEmail('')\n      //         NotificationManager.success('Profile Updated Successfully!');\n      //         history.push('/app/dashboard/saas');\n      //         window.location.reload();\n      //       }\n      //       // else if (res?.status === 400) {\n      //       //   setShow(false)\n      //       //   setFirstNameError('') \n      //       //   setLastNameError('')\n      //       //   setEmailError('')\n      //       //   setPhoneError('') \n      //       //   setFirstName('') \n      //       //   setLastName('') \n      //       //   setPhone('') \n      //       //   setEmail('')\n      //       //   console.log('Response from auth:', res)\n      //       // } else {\n      //       //   setFirstNameError('') \n      //       //   setLastNameError('')\n      //       //   setEmailError('')\n      //       //   setPhoneError('')\n      //       //   setFirstName('') \n      //       //   setLastName('') \n      //       //   setPhone('') \n      //       //   setEmail('')\n      //       //   console.log('Response from auth:', res)\n      //       // }\n      //     })\n      //     .catch((err) => {\n      //       console.log('Update profile error :', err?.response)\n      //       console.log(err?.response?.data , \"error data\");\n      //       if(err?.response?.status === 400){\n      //         NotificationManager.error(err?.response?.data?.email?.[0]);\n      //       }\n      //     })\n      // }\n  //   } else {\n  //     setShow(true)\n  //     setFirstNameError('')\n  //     setLastNameError('')\n  //     // setPhoneError('* This is required Field')\n  //     setEmailError('* Please Enter Valid Email address')\n  //   }\n  // }\n\n\n  //==================== MY update profile ====================//\n  const updateProfile = () => {\n    const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const phoneRegex = /^\\d{10}$/;  // /^[6789]\\d{9}$/ (previous rule)\n    let regexName = /^[a-zA-Z]{1,30}$/; // only alpha, no space, min-1, max-30\n\n    if (email.trim() !== '' && phone.trim() !== '' && firstName.trim() !== '' && lastName.trim() !== '') {\n      setShow(false)\n      setFirstNameError('') \n      setLastNameError('')\n      setEmailError('')\n      setPhoneError('')\n\n      if(regexName.test(firstName.trim())){\n        if(regexName.test(lastName.trim())){\n          if(phoneRegex.test(phone.trim(\"\"))){\n            if(emailRegex.test(email.trim(\"\"))){\n              const accessToken = JSON.parse(localStorage.getItem('token'))\n              if (accessToken !== null) {\n                updateProfileInfo(firstName, lastName, email.toLowerCase(), phone, accessToken)\n                .then((res) => {\n                  if (res?.status === 200) {\n                    console.log('Response from update profile:', res)\n                    setShow(false)\n                    setFirstNameError('') \n                    setLastNameError('')\n                    setEmailError('')\n                    setPhoneError('')\n                    setFirstName('') \n                    setLastName('') \n                    setPhone('') \n                    setEmail('')\n                    NotificationManager.success('Profile Updated Successfully!');\n                    history.push('/app/dashboard/saas');\n                    window.location.reload();\n                  }\n                })\n                .catch((err) => {\n                  console.log('Update profile error :', err?.response)\n                  console.log(err?.response?.data , \"error data from user profile\");\n                  if(err?.response?.status === 400){\n                    NotificationManager.error(err?.response?.data?.email?.[0]);\n                  }\n                })\n            }\n            } else {\n              NotificationManager.error(\"Invalid email format!\");\n            }\n          } else {\n            NotificationManager.error(\"Phone number must be 10 digit long!\");\n          }\n        } else {\n          NotificationManager.error('Last name must contain only alphabet and no spacings!');\n        }\n      } else {\n        NotificationManager.error('First name must contain only alphabet and no spacings!');\n      }\n    } else {\n      setFirstNameError('* This is required Field') \n      setLastNameError('* This is required Field')\n      setEmailError('* This is required Field')\n      setPhoneError('* This is required Field')\n      setShow(true)\n    }\n  }\n\n\n  return (\n    <div className=\"userProfile-wrapper\">\n      <Helmet>\n        <title>Automaton | User Profile</title>\n        <meta name=\"description\" content=\"User Profile\" />\n      </Helmet>\n      <PageTitleBar\n        title={<IntlMessages id=\"sidebar.userProfile\" />}\n        match={props.match}\n      />\n      <RctCard>\n        <UserBlock />\n        <Form>\n          <div className=\"edit-form\">\n            <FormGroup row>\n              <Label for=\"firstName\" sm={3}>\n                First Name\n              </Label>\n              <Col sm={6}>\n                <Input\n                  type=\"text\"\n                  name=\"firstname\"\n                  className=\"input-lg\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n                {show && <p className=\"error mt-0\">{firstNameError}</p>}\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label for=\"firstName\" sm={3}>\n                Last Name\n              </Label>\n              <Col sm={6}>\n                <Input\n                  type=\"text\"\n                  name=\"lastname\"\n                  className=\"input-lg\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n                {show && <p className=\"error mt-0\">{lastNameError}</p>}\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label for=\"lastName\" sm={3}>\n                Phone Number\n              </Label>\n              <Col sm={6}>\n                <Input\n                  type=\"number\"\n                  name=\"lastName\"\n                  className=\"input-lg\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n                {show && <p className=\"error mt-0\">{phoneError}</p>}\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label for=\"occupation\" sm={3}>\n                Email\n              </Label>\n              <Col sm={6}>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  className=\"input-lg\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n                {show && <p className=\"error mt-0\">{emailError}</p>}\n              </Col>\n            </FormGroup>\n            \n            <FormGroup>\n              <Col sm={9}>\n                <Button\n                  style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\"}} \n                  className=\"text-white update-btn\"\n                  variant=\"contained\"\n                  size=\"large\"\n                  onClick={updateProfile}\n                >\n                  Update Profile\n                </Button>\n              </Col>\n            </FormGroup>\n          </div>\n        </Form>\n      </RctCard>\n    </div>\n  )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;"],"sourceRoot":""}