{"version":3,"sources":["Routes/dashboard/CreateDataset/index.js"],"names":["DashboardModal","require","CreateDataset","props","history","useHistory","useState","loading","datasetName","setDatasetName","comment","setComment","open","setOpen","instance","setInstance","console","log","UploadFile","accessToken","JSON","parse","localStorage","getItem","undefined","Uppy","id","autoProceed","debug","restrictions","allowedFileTypes","methods","exposedHeaders","use","XHR","endpoint","BASE_URL","headers","Authorization","formData","fieldName","on","file","response","uppy3","name","content","title","match","uppy","target","document","body","onRequestClose","fullBlock","style","padding","alignItems","justifyContent","display","className","width","backgroundColor","marginTop","row","sm","for","type","onChange","e","value","Dataset","height","marginBottom","variant","color","onClick","authToken","projectId","createDataset","then","res","data","status","push"],"mappings":"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","file":"static/js/86.652aebd1.chunk.js","sourcesContent":["import \"./createDataset.css\"\n\n// import React, { useEffect, useState, useRef } from \"react\";\n// import { Helmet } from \"react-helmet\";\n// // page title bar\n// import PageTitleBar from \"../../../Components/PageTitleBar/PageTitleBar\";\n// // intl messages\n// import IntlMessages from \"../../../Util/IntlMessages\";\n// // rct card box\n// import RctCollapsibleCard from \"../../../Components/RctCollapsibleCard/RctCollapsibleCard\";\n\n// rct section loader\nimport RctSectionLoader from \"../../../Components/RctSectionLoader/RctSectionLoader\";\n\n// import { Button } from \"reactstrap\";\n\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar'\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard'\n// import React,{useState} from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useHistory } from 'react-router'\nimport IntlMessages from 'Util/IntlMessages'\nimport React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback, CustomInput\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { createDataset } from 'Api'\nimport AddIcon from '@mui/icons-material/Add';\n\n\n\nimport Uppy from  \"@uppy/core\";\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/dashboard/dist/style.min.css';\nimport '@uppy/webcam/dist/style.min.css';\nimport { DragDrop, StatusBar ,Dashboard} from '@uppy/react';\nimport Tus from '@uppy/tus'\nimport XHR from '@uppy/xhr-upload';\nconst {\tDashboardModal} = require(\"@uppy/react\");\n// Donâ€™t forget to keep the Uppy instance outside of your component.\n// const uppy = new Uppy()\n// // .use(RemoteSources, { companionUrl: 'https://companion.uppy.io' })\n// // .use(Webcam, { target: Dashboard })\n// // .use(ImageEditor, { target: Dashboard })\n// .use(Tus, { endpoint: 'https://tusd.tusdemo.net/files/' })\n// .on('complete', (result) => {\n//   console.log('Upload result:', result)\n// });\n\n\n\n\n\n\nconst CreateDataset = (props) => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [datasetName, setDatasetName] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [open,setOpen]=useState()\n  const [instance,setInstance] =useState()\n\n  const handleDatasetName = (e) => {\n    setDatasetName(e.target.value)\n  }\n\n  const handleComment = (e) => {\n    setComment(e.target.value)\n  }\n\n  const handleSave = () => {\n    const authToken = JSON.parse(localStorage.getItem(\"token\"));\n    const projectId = localStorage.getItem(\"projId\");\n\n    if(authToken !== null){\n      if(projectId){\n        if(datasetName){\n          console.log(authToken, typeof authToken, \"autthhh token\")\n          createDataset(authToken, projectId, datasetName)\n          .then(res => {\n            console.log(res, \"resss in handle save function\")\n            console.log(res?.data, \"ress dataaa i n handle save function\")\n\n            if(res.status == \"200\"){\n              // NotificationManager.success(\"dataset created !\")\n              setDatasetName(\"\")\n              setComment(\"\");\n            }\n          })\n        }\n      }\n    }\n  }\n\n  console.log(datasetName, \"Dataset name\")\n  console.log(comment, \"Commmenttt\")\n\n\n\n\n\n  const UploadFile= async()=>{\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n\n    if (open === undefined) {\n       const uppy3 = await new Uppy({\n        id: \"uppy3\",\n        autoProceed: false,\n        debug: true,\n        restrictions:{\n          allowedFileTypes:['image/*']\n        },\n        methods: [\"OPTIONS\", \"GET\", \"POST\", \"PATCH\", \"PUT\"],\n        exposedHeaders: [\"Access-Control-Allow-Headers\"],\n       \n      })\n      .use(XHR, { endpoint: `${BASE_URL}/api/automaton/file-uploads/upload/92/`,\n                  headers:{\n                    Authorization:accessToken,\n                    \"Content-Type\": \"multipart/form-data\"\n\n                  },\n                \n                  formData:true,\n                  fieldName:'images[]'\n                \n                })\n      // .on('complete', (result) => {\n      //   console.log('Upload result:', result)\n      // });\n        .on(\"upload-success\", (file, response) => {\n          console.log(\"upload-success\");\n          // alert(JSON.stringify(file,response))\n          //   this.props.projectSpecificDetails(\n          // \tthis.props.match.params.id,\n          // \t(res, err) => {\n          // \t  console.log(\"res\");\n          // \t  this.setState({\n          // \t\topen: !this.state.open,\n          // \t  });\n          // \t}\n          //   );\n        });\n\n//  document.getElementById(\"upload-button\").addEventListener('click',()=>{\n//   uppy3.getFile().forEach((file)=>{\n//     const formData = new FormData();\n//     formData.append(file.id,formData)\n//     uppy3.UploadFile(file.id,formData)\n//   })\n//  })\n       \n        \n\n\n        setInstance(uppy3);\n        setOpen(true)\n    }else{\n      setOpen(true)\n    }\n   \n  }\n\n\n\n\n\n\n\n\n\n\n\nconsole.log(open,\"open\")\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Automaton | Create Dataset</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      <PageTitleBar\n        title={<IntlMessages id=\"sidebar.createDataset\" />}\n        match={props.match}\n      />\n      {\n        instance != undefined && \n        <DashboardModal\n\t\t\t\t\t\t\t\t\t\tuppy={instance}\n\t\t\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\t\t\ttarget={document.body}\n\t\t\t\t\t\t\t\t\t\tonRequestClose={() => setOpen(false)}\n\t\t\t\t\t\t\t\t\t/>\n\n      }\n      <RctCollapsibleCard fullBlock>\n      <div style={{padding:\"80px\", alignItems: \"center\", justifyContent: 'center', display: \"flex\", }}>\n                <div className=\"user-profile-widget box-shadow-box\" style={{ width: \"60%\", backgroundColor: \"white\" }}>\n                    <div className=\"p-20\">\n                        <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={handleDatasetName}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"Dataset\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {handleComment}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-center\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\" style={{width:\"100px\", padding:\"7px 5px\"}} className=\"projectCardButton mx-2\" onClick={handleSave}>Save</Button>\n                                <Button variant=\"contained\" color=\"primary\" style={{width:\"100px\", padding:\"7px 5px\"}}  className=\"mx-2 d-flex justify-content-center align-items-center\" onClick={()=>UploadFile()}><AddIcon/>Upload</Button>\n                                <Button variant=\"contained\" color=\"danger\" style={{width:\"100px\", padding:\"7px 5px\"}}  className=\"mx-2 d-flex justify-content-center align-items-center\" onClick={()=> history.push(\"/app/dashboard/project\")}>Cancel</Button>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n    </>\n  );\n};\n\nexport default CreateDataset;\n"],"sourceRoot":""}