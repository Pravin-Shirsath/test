{"version":3,"sources":["Routes/components/selection-controls/index.js"],"names":["styles","checked","color","pink","bgsuccess","backgroundColor","textsuccess","bgwarning","textwarning","bgprimary","textprimary","bgdanger","textdanger","withStyles","props","useState","checkedA","setCheckedA","checkedB","setCheckedB","checkedC","setCheckedC","checkedD","setCheckedD","checkedE","setCheckedE","checkedF","setCheckedF","checkedG","setCheckedG","checkedH","setCheckedH","checkedI","setCheckedI","checkedJ","setCheckedJ","checkedK","setCheckedK","checkedL","setCheckedL","checkedM","setCheckedM","checkedN","setCheckedN","checkedO","setCheckedO","checkedP","setCheckedP","checkedQ","setCheckedQ","checkedR","setCheckedR","genderRadio1","setGenderRadio1","genderRadio2","setGenderRadio2","genderRadio3","setGenderRadio3","handleChange","name","console","log","handleChangeRadio","key","e","target","value","classes","className","title","id","match","colClasses","heading","control","onChange","label","indeterminate","disabled","component","required","formControl","group","row","error","contentCustomClasses"],"mappings":"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","file":"static/js/215.6261b60c.chunk.js","sourcesContent":["/**\n * Selection Controls\n */\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormGroup, FormControlLabel, FormControl, FormLabel, FormHelperText, Radio, RadioGroup, Checkbox, Switch } from '@material-ui/core';\nimport { pink } from '@material-ui/core/colors';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n\nconst styles = {\n\tchecked: {\n\t\tcolor: pink[500],\n\t},\n\tbgsuccess: {\n\t\tbackgroundColor: '#25C975',\n\t},\n\ttextsuccess: {\n\t\tcolor: '#25C975',\n\t\t'& + $bgsuccess': {\n\t\t\tbackgroundColor: '#25C975',\n\t\t},\n\t},\n\tbgwarning: {\n\t\tbackgroundColor: '#EEA222',\n\t},\n\ttextwarning: {\n\t\tcolor: '#EEA222',\n\t\t'& + $bgwarning': {\n\t\t\tbackgroundColor: '#EEA222',\n\t\t},\n\t},\n\tbgprimary: {\n\t\tbackgroundColor: '#895DFF',\n\t},\n\ttextprimary: {\n\t\tcolor: '#895DFF',\n\t\t'& + $bgprimary': {\n\t\t\tbackgroundColor: '#895DFF',\n\t\t},\n\t},\n\tbgdanger: {\n\t\tbackgroundColor: '#F04E6A',\n\t},\n\ttextdanger: {\n\t\tcolor: '#F04E6A',\n\t\t'& + $bgdanger': {\n\t\t\tbackgroundColor: '#F04E6A',\n\t\t},\n\t},\n};\n\nfunction SelectionControls(props) {\n   const [checkedA, setCheckedA] = useState(true);\n   const [checkedB, setCheckedB] = useState(false);\n   const [checkedC, setCheckedC] = useState(true);\n   const [checkedD, setCheckedD] = useState(true);\n   const [checkedE, setCheckedE] = useState(true);\n   const [checkedF, setCheckedF] = useState(false);\n   const [checkedG, setCheckedG] = useState(true);\n   const [checkedH, setCheckedH] = useState(true);\n   const [checkedI, setCheckedI] = useState(false);\n   const [checkedJ, setCheckedJ] = useState(true);\n   const [checkedK, setCheckedK] = useState(false);\n   const [checkedL, setCheckedL] = useState(false);\n   const [checkedM, setCheckedM] = useState(true);\n   const [checkedN, setCheckedN] = useState(false);\n   const [checkedO, setCheckedO] = useState(false);\n   const [checkedP, setCheckedP] = useState(false);\n   const [checkedQ, setCheckedQ] = useState(false);\n   const [checkedR, setCheckedR] = useState(false);\n\n   const [genderRadio1, setGenderRadio1] = useState('male');\n   const [genderRadio2, setGenderRadio2] = useState('male');\n   const [genderRadio3, setGenderRadio3] = useState('male');\n\n   const handleChange = (name, checked) => {\n      console.log(name, checked)\n      name(!checked);\n\t};\n\n   const handleChangeRadio = (key,e) => {\n      key(e.target.value);\n\t}\n\n   const { classes } = props;\n   return (\n      <div className=\"selection-controls-wrapper\">\n         <PageTitleBar title={<IntlMessages id=\"sidebar.selectionControls\" />} match={props.match} />\n         <div className=\"row\">\n            <RctCollapsibleCard\n               colClasses=\"col-sm-6 col-md-6 col-xl-3\"\n               heading={<IntlMessages id=\"widgets.simpleCheckbox\" />}\n            >\n               <FormGroup>\n                  <FormControlLabel control={\n                     <Checkbox color=\"primary\" checked={checkedA} onChange={() => handleChange(setCheckedA,checkedA)} value=\"checkedA\" />\n                  } label=\"Option A\"\n                  />\n                  <FormControlLabel control={\n                     <Checkbox color=\"primary\" checked={checkedB} onChange={() => handleChange(setCheckedB,checkedB)} value=\"checkedB\" />\n                  } label=\"Option B\"\n                  />\n                  <FormControlLabel control={\n                     <Checkbox color=\"primary\" checked={checkedC} onChange={() => handleChange(setCheckedC,checkedC)} value=\"checkedC\" />\n                  } label=\"Option C\"\n                  />\n               </FormGroup>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               colClasses=\"col-sm-6 col-md-6 col-xl-3\"\n               heading={<IntlMessages id=\"widgets.interminateSelection\" />}\n            >\n               <FormGroup>\n                  <FormControlLabel\n                     control={\n                        <Checkbox color=\"primary\" checked={checkedD} onChange={() => handleChange(setCheckedD,checkedD)} value=\"checkedD\" indeterminate />\n                     } label=\"Indeterminate 1\"\n                  />\n                  <FormControlLabel\n                     control={\n                        <Checkbox color=\"primary\" checked={checkedE} onChange={() => handleChange(setCheckedE,checkedE)} value=\"checkedE\" indeterminate />\n                     } label=\"Indeterminate 2\"\n                  />\n                  <FormControlLabel\n                     control={\n                        <Checkbox color=\"primary\" checked={checkedF} onChange={() => handleChange(setCheckedF,checkedF)} value=\"checkedF\" indeterminate />\n                     } label=\"Indeterminate 3\"\n                  />\n               </FormGroup>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               colClasses=\"col-sm-6 col-md-6 col-xl-3\"\n               heading={<IntlMessages id=\"widgets.disabledCheckbox\" />}\n            >\n               <FormGroup>\n                  <FormControlLabel disabled onChange={() => handleChange(setCheckedG, checkedG)} control={<Checkbox value={checkedG} />} label=\"UnSelected\" />\n                  <FormControlLabel disabled onChange={() => handleChange(setCheckedH, checkedH)} control={<Checkbox checked value={checkedH} />} label=\"Selected\" />\n                  <FormControlLabel disabled onChange={() => handleChange(setCheckedI, checkedI)} control={<Checkbox value={checkedI} />} label=\"Disabled\" />\n               </FormGroup>\n            </RctCollapsibleCard>\n            <RctCollapsibleCard\n               colClasses=\"col-sm-6 col-md-6 col-xl-3\"\n               heading={<IntlMessages id=\"widgets.customColorCheckbox\" />}\n            >\n               <FormGroup>\n                  <FormControlLabel\n                     control={\n                        <Checkbox color=\"primary\" checked={checkedJ} onChange={() => handleChange(setCheckedJ,checkedJ)}\n                           classes={{ checked: classes.checked, }} value=\"checkedJ\" />\n                     } label=\"custom color 1\"\n                  />\n                  <FormControlLabel\n                     control={\n                        <Checkbox color=\"primary\" checked={checkedK} onChange={() => handleChange(setCheckedK,checkedK)}\n                           classes={{ checked: classes.checked, }} value=\"checkedK\" />\n                     } label=\"custom color 2\"\n                  />\n                  <FormControlLabel\n                     control={\n                        <Checkbox color=\"primary\" checked={checkedL} onChange={() => handleChange(setCheckedL,checkedL)}\n                           classes={{ checked: classes.checked, }} value=\"checkedL\" />\n                     } label=\"custom color 3\"\n                  />\n               </FormGroup>\n            </RctCollapsibleCard>\n         </div>\n         <div className=\"row\">\n            <div className=\"col-sm-12 col-md-12 col-xl-6\">\n               <RctCollapsibleCard\n                  heading={<IntlMessages id=\"widgets.VerticalStyleCheckbox\" />}\n               >\n                  <FormGroup>\n                     <FormControlLabel control={\n                        <Checkbox color=\"primary\" checked={checkedM} onChange={() => handleChange(setCheckedM,checkedM)} value=\"checkedM\" />\n                     } label=\"Option M\"\n                     />\n                     <FormControlLabel control={\n                        <Checkbox color=\"primary\" checked={checkedN} onChange={() => handleChange(setCheckedN,checkedN)} value=\"checkedN\" />\n                     } label=\"Option N\"\n                     />\n                     <FormControlLabel control={\n                        <Checkbox color=\"primary\" checked={checkedO} onChange={() => handleChange(setCheckedO,checkedO)} value=\"checkedO\" />\n                     } label=\"Option O\"\n                     />\n                  </FormGroup>\n               </RctCollapsibleCard>\n               <RctCollapsibleCard\n                  heading={<IntlMessages id=\"widgets.radioButtons\" />}\n               >\n                  <div className=\"rct-block-title\">\n                     <div className=\"row\">\n                        <div className=\"col-sm-12 col-md-5\">\n                           <FormControl component=\"fieldset\" required className={classes.formControl}>\n                              <FormLabel component=\"legend\">Gender</FormLabel>\n                              <RadioGroup aria-label=\"gender\" name=\"gender1\" className={classes.group} value={genderRadio1}\n                                 onChange={(e) => handleChangeRadio(setGenderRadio1,e)} >\n                                 <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                                 <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                                 <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                                 <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"(Disabled option)\" />\n                              </RadioGroup>\n                           </FormControl>\n                        </div>\n                        <div className=\"col-sm-12 col-md-7\">\n                           <FormControl component=\"fieldset\" required>\n                              <FormLabel component=\"legend\">Gender</FormLabel>\n                              <RadioGroup row aria-label=\"gender\" name=\"gender2\" value={genderRadio2} onChange={(e) => handleChangeRadio(setGenderRadio2, e)} >\n                                 <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                                 <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                                 <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                                 <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"Disabled\" />\n                              </RadioGroup>\n                           </FormControl>\n                        </div>\n                     </div>\n                  </div>\n               </RctCollapsibleCard>\n            </div>\n            <div className=\"col-sm-12 col-md-12 col-xl-6\">\n               <RctCollapsibleCard\n                  heading={<IntlMessages id=\"widgets.horizontalStyleCheckbox\" />}\n               >\n                  <FormGroup row>\n                     <FormControlLabel control={\n                        <Checkbox color=\"primary\" checked={checkedP} onChange={() => handleChange(setCheckedP,checkedP)} value=\"checkedP\" />\n                     } label=\"Option M\"\n                     />\n                     <FormControlLabel control={\n                        <Checkbox color=\"primary\" checked={checkedQ} onChange={() => handleChange(setCheckedQ,checkedQ)} value=\"checkedQ\" />\n                     } label=\"Option N\"\n                     />\n                     <FormControlLabel control={\n                        <Checkbox color=\"primary\" checked={checkedR} onChange={() => handleChange(setCheckedR,checkedR)} value=\"checkedR\" />\n                     } label=\"Option O\"\n                     />\n                  </FormGroup>\n               </RctCollapsibleCard>\n               <div className=\"row\">\n                  <RctCollapsibleCard\n                     colClasses=\"col-sm-12 col-md-6\"\n                     heading={<IntlMessages id=\"widgets.disabledRadio\" />}\n                  >\n                     <FormControl component=\"fieldset\" required>\n                        <FormLabel component=\"legend\">Gender</FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"gender3\" value={genderRadio2} onChange={() => handleChange()} >\n                           <FormControlLabel value=\"male2\" disabled control={<Radio />} label=\"Male\" />\n                           <FormControlLabel value=\"female2\" disabled control={<Radio />} label=\"Female\" />\n                           <FormControlLabel value=\"other2\" disabled control={<Radio />} label=\"Other\" />\n                           <FormControlLabel value=\"disabled2\" disabled control={<Radio />} label=\"Disabled\" />\n                        </RadioGroup>\n                     </FormControl>\n                  </RctCollapsibleCard>\n                  <RctCollapsibleCard\n                     colClasses=\"col-sm-12 col-md-6\"\n                     heading={<IntlMessages id=\"widgets.withError\" />}\n                  >\n                     <FormControl component=\"fieldset\" required error>\n                        <FormLabel component=\"legend\">Gender</FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"gender4\" value={genderRadio3} onChange={(e) => handleChangeRadio(setGenderRadio3, e)}>\n                           <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                           <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                           <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                           <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"Disabled\" />\n                        </RadioGroup>\n                        <FormHelperText>You can display an error</FormHelperText>\n                     </FormControl>\n                  </RctCollapsibleCard>\n               </div>\n            </div>\n         </div>\n         <RctCollapsibleCard\n            heading={<IntlMessages id=\"widgets.switches\" />}\n            contentCustomClasses=\"d-flex justify-content-between align-center\"\n         >\n            <Switch checked={checkedA} onChange={() => handleChange(setCheckedA,checkedA)} aria-label=\"checkedA\" />\n            <Switch checked={checkedB} onChange={() => handleChange(setCheckedB,checkedB)} aria-label=\"checkedB\"\n               classes={{ checked: classes.textsuccess }} />\n            <Switch checked={checkedC} onChange={() => handleChange(setCheckedC,checkedC)} aria-label=\"checkedC\"\n               classes={{ checked: classes.textwarning }} />\n            <Switch checked={checkedD} onChange={() => handleChange(setCheckedD,checkedD)} aria-label=\"checkedD\"\n               classes={{ checked: classes.textprimary }} />\n            <Switch checked={checkedE} onChange={() => handleChange(setCheckedE,checkedE)} aria-label=\"checkedE\"\n               classes={{ checked: classes.textdanger }} />\n            <Switch checked={false} aria-label=\"checkedF\" disabled />\n            <Switch checked aria-label=\"checkedG\" disabled />\n         </RctCollapsibleCard>\n      </div>\n   );\n}\n\nexport default withStyles(styles)(SelectionControls);\n"],"sourceRoot":""}