{"version":3,"sources":["Routes/users/user-profile-1/component/UserBlock.js","Routes/users/user-profile-1/index.js"],"names":["UserBlock","GettingImage","useState","profileData","setProfileData","useEffect","getProfileInfo","accessToken","JSON","parse","localStorage","getItem","console","log","profileInfo","then","res","status","data","catch","err","className","style","position","src","profile_image","process","BASE_URL","alt","width","height","bottom","right","backgroundColor","type","opacity","first_name","last_name","username","email","UserProfile","props","firstName","setFirstName","lastName","setLastName","setEmail","mobile_number","phone","setPhone","country","setCountry","zipCode","setZipCode","state","setState","companyName","setCompanyName","billingAddress","setBillingAddress","taxNumber","setTaxNumber","companyAddress","setCompanyAddress","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","phoneError","setPhoneError","image","setImage","countryError","zipCodeError","stateError","companyNameError","setCompanyNameError","billingAddressError","setBillingAddressError","taxNumberError","setTaxNumberError","companyAddressError","show","setShow","history","useHistory","Helmet","name","content","PageTitleBar","title","IntlMessages","id","match","RctCard","pic","undefined","Form","FormGroup","row","Col","sm","Label","for","Input","value","onChange","e","target","classes","fontSize","val","disabled","length","placeholder","defaultCountry","limitMaxLength","Button","color","variant","size","onClick","fd","FormData","regexName","trim","append","test","isValidPhoneNumber","toLowerCase","ProfileDetails","userId","updateProfileInfo","NotificationManager","success","push","response","error","ProfileApiCall","maxWidth"],"mappings":"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","file":"static/js/232.438d5a5f.chunk.js","sourcesContent":["/**\n * User Block\n */\nimport { BASE_URL } from 'Api/APIConst';\nimport React,{useEffect,useState} from 'react';\nimport { NotificationManager } from 'react-notifications';\nimport { profileInfo } from '../../../../Api/index';\n\nfunction UserBlock({GettingImage}){\n   \n   const [profileData, setProfileData] = useState({});\n   const [image, setImage] = useState(null);\n\n   useEffect(() => {\n      getProfileInfo();\n    }, [])\n   \n    const getProfileInfo =  () => {\n      const accessToken = JSON.parse(localStorage.getItem('token'));\n      console.log(\"Token\",accessToken)\n      if(accessToken !== null) {\n         profileInfo(accessToken)\n         .then(res => {      \n            if (res?.status === 200) {\n               setProfileData(res?.data);\n               console.log(\"Profile Info ResponseData\", res?.data)     \n           } else if(res?.status === 400) { \n            console.log(\"Profile Info Response\", res)    \n           }\n           else {\n            console.log(\"Profile Info Response\", res)    \n           }\n     \n   \n         }) .catch(err => {\n            console.log(err);\n          });\n   \n      }\n    }\n\n   \n      const handleImageUpload = e => {\n\n         const [file] = e.target.files;\n         \n         if (e.target.files.length) {\n         \n         var Obj = {\n         \n         preview: URL.createObjectURL(e.target.files[0]),\n         \n         raw: e.target.files[0]\n         \n         };\n         console.log(\"newimg\", Obj.raw);\n        if( Obj?.raw?.type?.includes(\"image\") ){\n        \n         setImage(Obj.preview)\n         GettingImage(Obj?.raw)\n       \n\n        }else{\n          NotificationManager.error(\"Only image format file upload \");\n\n        }\n       \n         \n     \n         \n         // setProfilePic(Obj.raw);\n         \n         \n         \n         \n         }\n         \n         };\n   \n\n   return (\n      \n        \n            <div className=\"profile-content\">\n               <div className=\"media align-items-center\">\n               <div style={{ position:\"relative\"}}>\n               <img src={ profileData?.profile_image == null ?  `${process.env.PUBLIC_URL}/assets/images/avatars/user-15.jpg` :`${BASE_URL+profileData.profile_image}`  } alt=\"user profile\" className=\"rounded-circle bordered\" width=\"140\" height=\"140\" />\n               <i className=\"ti-pencil rounded-circle bordered text-white\" style={{position:\"absolute\",bottom:\"6px\",right:\"20%\",backgroundColor:\"#464D69\"}} > </i>\n               <input type='file' className=\"rounded-circle bordered\"  style={{position:\"absolute\",bottom:\"6px\",right:\"20%\",backgroundColor:\"#464D69\", width:\"30px\", height:\"30px\",opacity:0}}/>\n           \n               </div>\n                  <div className=\"media-body pt-25\">\n                        <div className=\"d-flex flex-column align-items-baseline\">\n                           <h2 className=\"user-name text-white\">{profileData?.first_name} {profileData?.last_name}</h2>\n                           <h2>{profileData?.username}</h2>\n                           <p>{profileData?.email}</p>\n                        </div>\n                  </div>\n               </div>\n            </div>\n   \n   );\n}\n\nexport default UserBlock;\n","/**\n * User Profile Page\n */\nimport React, { useState, useEffect } from 'react'\n\nimport { Helmet } from 'react-helmet'\n\nimport UserBlock from './component/UserBlock'\nimport { Form, FormGroup, Input, Label, Col } from 'reactstrap'\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications';\nimport 'react-phone-number-input/style.css'\nimport PhoneInput,{parsePhoneNumber,isValidPhoneNumber} from 'react-phone-number-input'\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n// rct card box\nimport { RctCard } from 'Components/RctCard'\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar'\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages'\nimport '../../../Assets/css/main.css'\nimport { updateProfileInfo } from '../../../Api/index'\nimport Button from '@material-ui/core/Button'\n\nexport default function UserProfile(props) {\n\n\n  const [firstName, setFirstName] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).first_name);\n  const [lastName, setLastName] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).last_name);\n  const [email, setEmail] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).email);\n  const [phone, setPhone] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).mobile_number);\n\n  const [country, setCountry] = useState(\"\")\n  const [zipCode, setZipCode] = useState(\"\")\n  const [state, setState] = useState(\"\")\n  const [companyName, setCompanyName] = useState(\"\")\n  const [billingAddress, setBillingAddress] = useState(\"\")\n  const [taxNumber, setTaxNumber] = useState(\"\")\n  const [companyAddress, setCompanyAddress] = useState(\"\")\n  \n\n  const [firstNameError, setFirstNameError] = useState('')\n  const [lastNameError, setLastNameError] = useState('')\n  const [emailError, setEmailError] = useState('')\n  const [phoneError, setPhoneError] = useState('')\n  const [image,setImage]=useState(null)\n  const [countryError, setCountryError] = useState(\"\")\n  const [zipCodeError, setZipCodeError] = useState(\"\")\n  const [stateError, setStateError] = useState(\"\")\n  const [companyNameError, setCompanyNameError] = useState(\"\")\n  const [billingAddressError, setBillingAddressError] = useState(\"\")\n  const [taxNumberError, setTaxNumberError] = useState(\"\")\n  const [companyAddressError, setCompanyAddressError] = useState(\"\")\n\n  const [show, setShow] = useState(false)\n  const history = useHistory();\n  console.log({\n    \"firstName:\": firstName, \"lastName:\": lastName, \"email\": email, \"phone\": phone, \"country\": country, \"zipCode:\": zipCode, \"state:\": state, \"companyName:\": companyName,\n    \"billingAddress:\": billingAddress, \"taxNumber:\": taxNumber, \"companyAddress:\": companyAddress\n  }\n  )\n  //==================== MY update profile ====================//\n\n  // getting image from user block component\nconst GettingImage=(pic)=>{\n  \n  if(pic != null && pic != undefined){\n    console.log(\"pic=========\",pic)\n    setImage(pic)\n  }\n}\n\n\n\n\nconst ProfileApiCall=(ProfileDetails)=>{  \n  console.log(\"Profile_Details==\",ProfileDetails)\n  const accessToken = JSON.parse(localStorage.getItem('token'))\n  const userId = JSON.parse(localStorage.getItem('ProfileData')) \n    if (accessToken !== null) {\n\n     \n    \n  updateProfileInfo(ProfileDetails,accessToken,userId.id).then((res) => {\n      if (res?.status === 200) {\n        console.log('Response from update profile:', res)\n        \n   \n\n        setShow(false)\n        setFirstNameError('')\n        setLastNameError('')\n        setEmailError('')\n        setPhoneError('')\n        setCompanyNameError(\"\")\n        setTaxNumberError(\"\")\n        setBillingAddressError(\"\")\n\n        setFirstName('')\n        setLastName('')\n        setPhone('')\n        setEmail('')\n\n        setCountry('')\n        setZipCode('')\n        setState('')\n        setCompanyName('')\n        setBillingAddress('')\n        setTaxNumber('')\n        setCompanyAddress('')\n        NotificationManager.success('Profile Updated Successfully!');\n        history.push('/app/dashboard/saas');\n        // window.location.reload();\n      }\n    })\n    .catch((err) => {\n   \n      console.log('Update profile error :', err?.response)\n      console.log(err?.response?.data, \"error data from user profile\");\n      if (err?.response?.status === 400) {\n        NotificationManager.error(err?.response?.data?.email?.[0]);\n      }\n    })\n}else{\n  NotificationManager.error(\"accessToken not found\");\n}\n\n}\n\n\n  const updateProfile = () => {\n    const Profile_Details = {}\n    const fd = new FormData();\n    const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const phoneRegex = /^\\d{10}$/;  // /^[6789]\\d{9}$/ (previous rule)\n    const regexName = /^[a-zA-Z]{1,30}$/; // only alpha, no space, min-1, max-30\n    const TaxnumberRegex=/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$/\n    const  isValidZip = /^[1-9][0-9]{5}$/\n   \n    if (email.trim() !== '' && (phone !== null || phone !== undefined) && firstName.trim() !== '' && lastName.trim() !== '' && companyName.trim() !== '' && billingAddress.trim() !== '' && taxNumber.trim() !== '') {\n     \n      setShow(false)\n      setFirstNameError('')\n      setLastNameError('')\n      setEmailError('')\n      setPhoneError('')\n      setCompanyNameError(\"\")\n      setTaxNumberError(\"\")\n      setBillingAddressError(\"\")\n     \n     \n      if(country != \"\"){\n      \n        fd.append('country', country)\n      }\n      if( state != \"\" ) {\n      \n        fd.append('state', state)\n      }\n      if(zipCode != \"\"){\n      \n      }\n      if (companyAddress != \"\"){\n      \n        fd.append('company_address', companyAddress)\n      }\n      \n      if(image != null){\n        Profile_Details.profile_image = image\n        fd.append('profile_image', image)\n      }\n\n      if (regexName.test(firstName.trim())) {\n        if (regexName.test(lastName.trim())) {\n         \n          if ((isValidPhoneNumber(phone+\"\".trim(\"\")))) {\n            \n            if (emailRegex.test(email.trim(\"\"))) {\n            \n              if(TaxnumberRegex.test(taxNumber+\"\".trim(\"\"))){\n                                \n              // fd.append('parcel_id', parcelID)              \n              fd.append('first_name', firstName)\n              fd.append('last_name', lastName)\n              fd.append('mobile_number', phone)\n              fd.append('email', email.toLowerCase())\n              fd.append('billing_address', billingAddress)\n              fd.append('tax_number',taxNumber);\n                                      \n               ProfileApiCall(fd)\n\n             }else{\n              NotificationManager.error(\"Invalid Tax format!\");\n             }\n            \n                       \n            } else {\n              NotificationManager.error(\"Invalid email format!\");\n            }\n          } else {\n            NotificationManager.error(\"Phone number must be 10 digit long!\");\n          }\n        } else {\n          NotificationManager.error('Last name must contain only alphabet and no spacings!');\n        }\n      } else {\n        NotificationManager.error('First name must contain only alphabet and no spacings!');\n      }\n    } else {\n      setFirstNameError('')\n      setLastNameError('')\n      setEmailError('')\n      setPhoneError('')\n      \n      setCompanyNameError(\"\")\n      setTaxNumberError(\"\")\n      setBillingAddressError(\"\")\n      \n    if (email.trim() == ''){\n      setEmailError('* This is required Field')\n\n    } \n    if(firstName.trim() == '' ){\n      setFirstNameError('* This is required Field')\n    }\n     if(lastName.trim() == ''){\n      setLastNameError('* This is required Field')\n    }\n     if(companyName.trim() == ''){\n      setCompanyNameError(\"* This is required Field\")\n\n    }\n     if(billingAddress.trim() == ''){\n      setBillingAddressError(\"* This is required Field\")\n\n    }\n    \n    if(taxNumber.trim() == ''){\n      setTaxNumberError(\"* This is required Field\")\n\n    }\n      if(phone == null ){\n\n        setPhoneError('* This is required Field')\n      }\n      \n     \n      \n      setShow(true)\n    }\n  }\n\n\n  return (\n    <div className=\"userProfile-wrapper\">\n      <Helmet>\n        <title>Automaton | User Profile</title>\n        <meta name=\"description\" content=\"User Profile\" />\n      </Helmet>\n      <PageTitleBar\n        title={<IntlMessages id=\"sidebar.userProfile\" />}\n        match={props.match}\n      />\n      <RctCard data-bs-spy=\"scroll\">\n        <UserBlock GettingImage={GettingImage}/>\n\n        <Form className=\"border\">\n          <section className=\"border border-5 py-10 d-flex align-item-center justify-content-center bg-dark text-white\">\n            <h2>Personal Details</h2>\n          </section>\n          <div className=\"edit-form\">\n\n            <FormGroup row >\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"firstName\" sm={3} className=\"d-flex\">\n                    First Name <span className=\"text-danger\">*</span>\n                  </Label>\n                 \n                  <Input\n                    type=\"text\"\n                    name=\"firstname\"\n                    className=\"input-lg\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{firstNameError}</p>}\n                </div>\n              </Col>\n\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"lastName\" sm={3} className=\"d-flex\">\n                    Last Name <span className=\"text-danger\">*</span>\n                  </Label>\n                 \n                  <Input\n                    type=\"text\"\n                    name=\"lastName\"\n                    className=\"input-lg\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{lastNameError}</p>}\n                </div>\n              </Col>\n            </FormGroup>\n\n\n\n\n            <FormGroup row>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"email\" sm={3} className=\"d-flex\">\n                    Email Id <span className=\"text-danger\">*</span>\n                  </Label>\n                 \n                  <Input\n                    type=\"text\"\n                    name=\"email\"\n                    className=\"input-lg\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{emailError}</p>}\n                </div>\n              </Col>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"state\" sm={3}>\n                    State\n                  </Label>\n                  <RegionDropdown\n                    classes=\"w-100 form-control form-control-lg text-md\"\n                     style={{ fontSize: '16px', type: \"text\" }}\n                    country={country}\n                    value={state}\n                    onChange={(val) => (setState(val), console.log(val))} />\n                  {/* <Input\n                    type=\"text\"\n                    name=\"state\"\n                    className=\"input-lg\"\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                    sm={9}\n                  /> */}\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{stateError}</p>}\n                </div>\n              </Col>\n\n            </FormGroup>\n\n            <FormGroup row>\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"country\" sm={3}>\n                    Country\n                  </Label>\n                  <CountryDropdown\n                    classes=\"w-100 form-control form-control-lg text-md\"\n                    value={country}\n                    onChange={(val) => (setCountry(val))}\n                    style={{ fontSize: '17px', type: \"text\" }}\n                  />\n\n\n\n                  {/* <Input\n                    type=\"text\"\n                    name=\"country\"\n                    className=\"input-lg\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                    sm={9}\n                  /> */}\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{countryError}</p>}\n                </div>\n              </Col>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"zipCode\" sm={3}>\n                    Zipcode\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"zipcode\"\n                    className=\"input-lg\"\n                    value={zipCode}\n                    onChange={(e) => setZipCode(e.target.value)}\n                    sm={9}\n                    disabled={ state.length > 0 ? false : true}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{zipCodeError}</p>}\n                </div>\n              </Col>\n\n            </FormGroup>\n\n            <FormGroup row>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"phone\" sm={3} className=\"d-flex\">\n                    Phone <span className=\"text-danger\">*</span>\n                  </Label>\n                 \n                  <PhoneInput\n                    placeholder=\"Enter phone number\"\n                    value={phone}\n                    onChange={(e) => setPhone(e)}\n                    defaultCountry={\"IN\"}\n                    className=\"w-100 form-control form-control-lg text-md\"\n                    // focusInputOnCountrySelection={false}\n\n\n                    limitMaxLength={true}\n\n\n                    sm={9}\n                  />\n                  {/* <Input\n                    type=\"number\"\n                    // placeholder=\"Enter phone number\"\n                    maxLength=\"10\"\n                    max={10}\n                    name=\"phone\"\n                    className=\"input-lg\"\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                    sm={9}\n                  /> */}\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{phoneError}</p>}\n                </div>\n              </Col>\n\n\n\n\n            </FormGroup>\n\n\n          </div>\n          <section className=\"border border-5 py-10 d-flex align-item-center justify-content-center bg-dark text-white\">\n            <h2>Company Details</h2>\n          </section>\n          <div className=\"edit-form\">\n\n            <FormGroup row >\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"companyName\" sm={3} className=\"d-flex\">\n                    Company Name <span className=\"text-danger\">*</span>\n                  </Label>\n                 \n                  <Input\n                    type=\"text\"\n                    name=\"companyName\"\n                    className=\"input-lg\"\n                    value={companyName}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{companyNameError}</p>}\n                </div>\n              </Col>\n\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"billingAddress\" sm={3} className=\"d-flex\">\n                    Billing Address <span className=\"text-danger\">*</span>\n                  </Label>\n                 \n                  <Input\n                    // type=\"text\"\n                    style={{ height: 120 }}\n                    type=\"textarea\"\n                    name=\"billingAddress\"\n                    className=\"input-lg\"\n                    value={billingAddress}\n                    onChange={(e) => setBillingAddress(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{billingAddressError}</p>}\n                </div>\n              </Col>\n            </FormGroup>\n\n\n\n\n            <FormGroup row>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"taxNumber\" sm={3} className=\"d-flex\">\n                    Tax Number <span className=\"text-danger\">*</span>\n                  </Label>\n                 \n                  <Input\n                    type=\"text\"\n                    name=\"taxNumber\"\n                    className=\"input-lg\"\n                    value={taxNumber}\n                    onChange={(e) => setTaxNumber(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{taxNumberError}</p>}\n                </div>\n              </Col>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"companyAddress\" sm={3}>\n                    Company Address\n                  </Label>\n                  <Input\n                    // type=\"text\"\n                    type=\"textarea\"\n                    // rows={15}\n                    style={{ height: 120 }}\n                    name=\"companyAddress\"\n                    className=\"input-lg\"\n                    value={companyAddress}\n                    onChange={(e) => setCompanyAddress(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{companyAddressError}</p>}\n                </div>\n              </Col>\n\n            </FormGroup>\n\n\n\n\n            <FormGroup className=\"row mt-50\">\n              <Col sm={6}>\n                <h4>   <span className=\"text-danger\">*</span> Mandatory Field</h4>\n              </Col>\n              <Col sm={6}>\n                <section className=\"row \" >\n\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      className=\"btn-block text-white px-50 fw-bold bg-primary.bg-gradient\"\n                      variant=\"contained\"\n                      size=\"medium\"\n                       onClick={updateProfile}\n                      style={{ maxWidth: \"150px\" }}\n                    >\n                      Save\n                    </Button>\n\n                  </Col>\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      className=\"btn-block px-50 py-2 text-white fw-bold btn-danger\"\n                      variant=\"contained\"\n                      size=\"medium\"\n                      onClick={()=>{ history.push(\"/\")}}\n                      style={{ maxWidth: \"150px\" }}\n                    >\n                      Cancel\n                    </Button>\n                  </Col>\n\n                </section>\n\n\n              </Col>\n\n\n\n\n\n\n            </FormGroup>\n          </div>\n        </Form>\n      </RctCard>\n    </div>\n  )\n}\n"],"sourceRoot":""}