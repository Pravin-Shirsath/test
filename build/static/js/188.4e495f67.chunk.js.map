{"version":3,"sources":["Routes/charts/recharts/line-chart.js","Routes/charts/recharts/simple-bar-chart.js","Routes/charts/recharts/stacked-bar-chart.js","Routes/charts/recharts/simple-area-chart.js","Routes/charts/recharts/line-bar-area-chart.js","Routes/charts/recharts/simple-radar-chart.js","Routes/charts/recharts/vertical-composed-chart.js","Routes/charts/recharts/stacked-area-chart.js","Routes/charts/recharts/index.js"],"names":["data","name","seriesA","seriesB","LineChartComponent","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","stroke","ChartConfig","axesColor","YAxis","CartesianGrid","vertical","chartGridColor","Tooltip","wrapperStyle","tooltipStyle","cursor","itemStyle","tooltipTextStyle","labelStyle","display","Legend","Line","type","color","primary","activeDot","r","info","SimpleBarChartComponent","BarChart","Bar","fill","StackedBarChartComponent","stackId","default","SimpleAreaChartComponent","AreaChart","Area","fillOpacity","seriesC","LineBarAreaChartComponent","ComposedChart","barSize","warning","subject","A","B","fullMark","SimpleRadarChartComponent","RadarChart","outerRadius","Radar","PolarGrid","PolarAngleAxis","PolarRadiusAxis","VerticalComposedChartComponent","layout","danger","success","StackedAreaChartComponent","ReCharts","props","className","PageTitleBar","title","IntlMessages","id","match","RctCollapsibleCard","heading"],"mappings":"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","file":"static/js/188.4e495f67.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tResponsiveContainer,\n\tLineChart,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tLegend\n} from 'recharts';\nimport ChartConfig, { tooltipStyle, tooltipTextStyle } from 'Constants/chart-config';\n\nconst data = [\n\t{ name: 'Page A', seriesA: 1000, seriesB: 2400 },\n\t{ name: 'Page B', seriesA: 3000, seriesB: 1398 },\n\t{ name: 'Page C', seriesA: 1500, seriesB: 4000 },\n\t{ name: 'Page D', seriesA: 2780, seriesB: 3908 },\n\t{ name: 'Page E', seriesA: 1890, seriesB: 4800 },\n\t{ name: 'Page F', seriesA: 2390, seriesB: 3800 },\n\t{ name: 'Page G', seriesA: 3490, seriesB: 4300 },\n];\n\nfunction LineChartComponent(){\n   return (\n      <ResponsiveContainer width='100%' height={300}>\n         <LineChart data={data}>\n            <XAxis dataKey=\"name\" stroke={ChartConfig.axesColor} />\n            <YAxis stroke={ChartConfig.axesColor} />\n            <CartesianGrid vertical={false} stroke={ChartConfig.chartGridColor} />\n            <Tooltip wrapperStyle={tooltipStyle} cursor={false} itemStyle={tooltipTextStyle} labelStyle={{ display: 'none' }} />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"seriesB\" stroke={ChartConfig.color.primary} activeDot={{ r: 8 }} />\n            <Line type=\"monotone\" dataKey=\"seriesA\" stroke={ChartConfig.color.info} activeDot={{ r: 8 }} />\n         </LineChart>\n      </ResponsiveContainer>\n   );\n}\n\nexport default LineChartComponent;\n","import React from 'react';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from 'recharts';\nimport ChartConfig, { tooltipStyle, tooltipTextStyle } from 'Constants/chart-config';\n\nconst data = [\n  { name: 'Page A', seriesA: 6000, seriesB: 8000 },\n  { name: 'Page B', seriesA: 3000, seriesB: 1398 },\n  { name: 'Page C', seriesA: 2000, seriesB: 9800 },\n  { name: 'Page D', seriesA: 2780, seriesB: 3908 },\n  { name: 'Page E', seriesA: 1890, seriesB: 4800 },\n  { name: 'Page F', seriesA: 2390, seriesB: 5500 },\n  { name: 'Page G', seriesA: 3490, seriesB: 8800 },\n];\n\nfunction SimpleBarChartComponent(){\n   return (\n      <ResponsiveContainer width='100%' height={300}>\n        <BarChart data={data}>\n          <XAxis dataKey=\"name\" stroke={ChartConfig.axesColor} />\n          <YAxis stroke={ChartConfig.axesColor} />\n          <CartesianGrid vertical={false} stroke={ChartConfig.chartGridColor} />\n          <Tooltip wrapperStyle={tooltipStyle} cursor={false} itemStyle={tooltipTextStyle} labelStyle={{ display: 'none' }} />\n          <Legend />\n          <Bar dataKey=\"seriesB\" fill={ChartConfig.color.primary} />\n          <Bar dataKey=\"seriesA\" fill={ChartConfig.color.info} />\n        </BarChart>\n      </ResponsiveContainer>\n   );\n}\n\nexport default SimpleBarChartComponent;\n","import React from 'react';\nimport {\n\tResponsiveContainer,\n\tBarChart,\n\tBar,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tLegend\n} from 'recharts';\nimport ChartConfig, { tooltipStyle, tooltipTextStyle } from 'Constants/chart-config';\n\nconst data = [\n\t{ name: 'Page A', seriesA: 4000, seriesB: 2400 },\n\t{ name: 'Page B', seriesA: 3000, seriesB: 1398 },\n\t{ name: 'Page C', seriesA: 2000, seriesB: 9800 },\n\t{ name: 'Page D', seriesA: 2780, seriesB: 3908 },\n\t{ name: 'Page E', seriesA: 1890, seriesB: 4800 },\n\t{ name: 'Page F', seriesA: 2390, seriesB: 3800 },\n\t{ name: 'Page G', seriesA: 3490, seriesB: 4300 }\n];\n\nfunction StackedBarChartComponent() {\n   return (\n      <ResponsiveContainer width='100%' height={300}>\n         <BarChart data={data}>\n            <XAxis dataKey=\"name\" stroke={ChartConfig.axesColor} />\n            <YAxis stroke={ChartConfig.axesColor} />\n            <CartesianGrid vertical={false} stroke={ChartConfig.chartGridColor} />\n            <Tooltip wrapperStyle={tooltipStyle} cursor={false} itemStyle={tooltipTextStyle} labelStyle={{ display: 'none' }} />\n            <Legend />\n            <Bar dataKey=\"seriesB\" stackId=\"a\" fill={ChartConfig.color.default} />\n            <Bar dataKey=\"seriesA\" stackId=\"a\" fill={ChartConfig.color.primary} />\n         </BarChart>\n      </ResponsiveContainer>\n   );\n}\n\nexport default StackedBarChartComponent;\n","import React from 'react';\nimport {\n\tResponsiveContainer,\n\tAreaChart,\n\tArea,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip\n} from 'recharts';\nimport ChartConfig, { tooltipStyle, tooltipTextStyle } from 'Constants/chart-config';\n\nconst data = [\n\t{ name: 'Page A', seriesA: 4000 },\n\t{ name: 'Page B', seriesA: 3000 },\n\t{ name: 'Page C', seriesA: 2000 },\n\t{ name: 'Page D', seriesA: 2780 },\n\t{ name: 'Page E', seriesA: 1890 },\n\t{ name: 'Page F', seriesA: 2390 },\n\t{ name: 'Page G', seriesA: 3490 }\n];\n\nfunction SimpleAreaChartComponent() {\n   return (\n      <ResponsiveContainer width='100%' height={300}>\n         <AreaChart data={data}>\n            <XAxis dataKey=\"name\" stroke={ChartConfig.axesColor} />\n            <YAxis stroke={ChartConfig.axesColor} />\n            <CartesianGrid vertical={false} stroke={ChartConfig.chartGridColor} />\n            <Tooltip wrapperStyle={tooltipStyle} cursor={false} itemStyle={tooltipTextStyle} labelStyle={{ display: 'none' }} />\n            <Area type='monotone' dataKey='seriesA' stroke={ChartConfig.color.primary} fill={ChartConfig.color.primary} fillOpacity=\"1\" />\n         </AreaChart>\n      </ResponsiveContainer>\n   );\n}\n\nexport default SimpleAreaChartComponent;\n","import React from 'react';\nimport {\n\tResponsiveContainer,\n\tComposedChart,\n\tLine,\n\tArea,\n\tBar,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tLegend\n} from 'recharts';\nimport ChartConfig, { tooltipStyle, tooltipTextStyle } from 'Constants/chart-config';\n\n// chart data\nconst data = [\n\t{ name: 'Page A', seriesA: 290, seriesB: 400, seriesC: 1000 },\n\t{ name: 'Page B', seriesA: 868, seriesB: 1700, seriesC: 1506 },\n\t{ name: 'Page C', seriesA: 1397, seriesB: 1098, seriesC: 989 },\n\t{ name: 'Page D', seriesA: 1480, seriesB: 1400, seriesC: 1228 },\n\t{ name: 'Page E', seriesA: 1520, seriesB: 1600, seriesC: 1100 },\n\t{ name: 'Page F', seriesA: 1400, seriesB: 680, seriesC: 1700 }\n];\n\nexport default function LineBarAreaChartComponent() {\n   return (\n      <ResponsiveContainer width='100%' height={300}>\n         <ComposedChart data={data}>\n            <XAxis dataKey=\"name\" stroke={ChartConfig.axesColor} />\n            <YAxis stroke={ChartConfig.axesColor} />\n            <Tooltip wrapperStyle={tooltipStyle} cursor={false} itemStyle={tooltipTextStyle} labelStyle={{ display: 'none' }} />\n            <Legend />\n            <CartesianGrid vertical={false} stroke={ChartConfig.chartGridColor} />\n            <Area type='monotone' dataKey='seriesC' fill={ChartConfig.color.info} stroke={ChartConfig.color.info} fillOpacity=\"0.9\" />\n            <Bar dataKey='seriesB' barSize={20} fill={ChartConfig.color.primary} />\n            <Line type='monotone' dataKey='seriesA' stroke={ChartConfig.color.warning} fill={ChartConfig.color.warning} />\n         </ComposedChart>\n      </ResponsiveContainer>\n   );\n}\n","import React from 'react';\nimport {\n\tResponsiveContainer,\n\tRadar,\n\tRadarChart,\n\tPolarGrid,\n\tPolarAngleAxis,\n\tPolarRadiusAxis\n} from 'recharts';\nimport ChartConfig from 'Constants/chart-config';\n\n// chart data\nconst data = [\n\t{ subject: 'Math', A: 120, B: 110, fullMark: 150 },\n\t{ subject: 'Chinese', A: 98, B: 130, fullMark: 150 },\n\t{ subject: 'English', A: 86, B: 130, fullMark: 150 },\n\t{ subject: 'Geography', A: 99, B: 100, fullMark: 150 },\n\t{ subject: 'Physics', A: 85, B: 90, fullMark: 150 },\n\t{ subject: 'History', A: 65, B: 85, fullMark: 150 }\n];\n\nexport default function SimpleRadarChartComponent() {\n   return (\n      <ResponsiveContainer width='100%' height={300}>\n         <RadarChart outerRadius={150} data={data}>\n            <Radar name=\"Mike\" dataKey=\"A\" stroke={ChartConfig.color.primary} fill={ChartConfig.color.primary} fillOpacity={1} />\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" stroke={ChartConfig.axesColor} />\n            <PolarRadiusAxis stroke={ChartConfig.axesColor} />\n         </RadarChart>\n      </ResponsiveContainer>\n   );\n}\n","import React from 'react';\nimport {\n\tResponsiveContainer,\n\tComposedChart,\n\tLine,\n\tArea,\n\tBar,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tLegend\n} from 'recharts';\nimport ChartConfig, { tooltipStyle, tooltipTextStyle } from 'Constants/chart-config';\n\nconst data = [\n\t{ name: 'Page A', seriesA: 590, seriesB: 800, seriesC: 1400 },\n\t{ name: 'Page B', seriesA: 868, seriesB: 967, seriesC: 1506 },\n\t{ name: 'Page C', seriesA: 1397, seriesB: 1098, seriesC: 989 },\n\t{ name: 'Page D', seriesA: 1480, seriesB: 1200, seriesC: 1228 },\n\t{ name: 'Page E', seriesA: 1520, seriesB: 1108, seriesC: 1100 },\n\t{ name: 'Page F', seriesA: 1400, seriesB: 680, seriesC: 1700 }\n];\n\nfunction VerticalComposedChartComponent() {\n   return (\n      <ResponsiveContainer width='100%' height={300}>\n         <ComposedChart layout=\"vertical\" data={data}>\n            <XAxis type=\"number\" stroke={ChartConfig.axesColor} />\n            <YAxis dataKey=\"name\" type=\"category\" stroke={ChartConfig.axesColor} />\n            <Tooltip wrapperStyle={tooltipStyle} cursor={false} itemStyle={tooltipTextStyle} labelStyle={{ display: 'none' }} />\n            <Legend />\n            <CartesianGrid vertical={false} stroke={ChartConfig.chartGridColor} />\n            <Area dataKey='seriesC' fill={ChartConfig.color.default} stroke={ChartConfig.color.danger} fillOpacity=\"0.9\" />\n            <Bar dataKey='seriesB' barSize={20} fill={ChartConfig.color.primary} />\n            <Line dataKey='seriesA' stroke={ChartConfig.color.success} />\n         </ComposedChart>\n      </ResponsiveContainer>\n   );\n}\n\nexport default VerticalComposedChartComponent","import React from 'react';\nimport {\n\tResponsiveContainer,\n\tAreaChart,\n\tArea,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip\n} from 'recharts';\nimport ChartConfig, { tooltipStyle, tooltipTextStyle } from 'Constants/chart-config';\n\n// chart data\nconst data = [\n\t{ name: 'Page A', seriesA: 4000, seriesB: 2400, seriesC: 2400 },\n\t{ name: 'Page B', seriesA: 3000, seriesB: 1398, seriesC: 2210 },\n\t{ name: 'Page C', seriesA: 2000, seriesB: 9800, seriesC: 2290 },\n\t{ name: 'Page D', seriesA: 2780, seriesB: 3908, seriesC: 2000 },\n\t{ name: 'Page E', seriesA: 1890, seriesB: 4800, seriesC: 2181 },\n\t{ name: 'Page F', seriesA: 2390, seriesB: 3800, seriesC: 2500 },\n\t{ name: 'Page G', seriesA: 3490, seriesB: 4300, seriesC: 2100 },\n];\n\nexport default function StackedAreaChartComponent(){\n   return (\n      <ResponsiveContainer width='100%' height={300}>\n         <AreaChart data={data}>\n            <XAxis dataKey=\"name\" stroke={ChartConfig.axesColor} />\n            <YAxis stroke={ChartConfig.axesColor} />\n            <CartesianGrid vertical={false} stroke={ChartConfig.chartGridColor} />\n            <Tooltip wrapperStyle={tooltipStyle} cursor={false} itemStyle={tooltipTextStyle} labelStyle={{ display: 'none' }} />\n            <Area type='monotone' dataKey='seriesA' stackId=\"1\" stroke={ChartConfig.color.primary} fill={ChartConfig.color.primary} fillOpacity=\"1\" />\n            <Area type='monotone' dataKey='seriesB' stackId=\"1\" stroke={ChartConfig.color.warning} fill={ChartConfig.color.warning} fillOpacity=\"1\" />\n            <Area type='monotone' dataKey='seriesC' stackId=\"1\" stroke={ChartConfig.color.info} fill={ChartConfig.color.info} fillOpacity=\"1\" />\n         </AreaChart>\n      </ResponsiveContainer>\n   );\n}\n","/**\n * Recharts\n */\nimport React from 'react';\n\nimport LineChart from './line-chart';\nimport SimpleBarChart from './simple-bar-chart';\nimport StackedBarChart from './stacked-bar-chart';\nimport SimpleAreaChart from './simple-area-chart';\nimport LineBarAreaChart from './line-bar-area-chart';\nimport SimpleRadarChart from './simple-radar-chart';\nimport VerticalComposedChart from './vertical-composed-chart';\nimport StackedAreaChart from './stacked-area-chart';\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n\nexport default function ReCharts(props) {\n   return (\n      <div className=\"re-chart-wrapper\">\n         <PageTitleBar\n            title={<IntlMessages id=\"sidebar.reCharts\" />}\n            match={props.match}\n         />\n         <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 col-xl-6\">\n               <RctCollapsibleCard heading=\"Line Chart\">\n                  <LineChart />\n               </RctCollapsibleCard>\n               <RctCollapsibleCard heading=\"Stacked Bar Chart\">\n                  <StackedBarChart />\n               </RctCollapsibleCard>\n               <RctCollapsibleCard heading=\"Area Chart\">\n                  <SimpleAreaChart />\n               </RctCollapsibleCard>\n               <RctCollapsibleCard heading=\"Vertical Chart\">\n                  <VerticalComposedChart />\n               </RctCollapsibleCard>\n            </div>\n            <div className=\"col-sm-12 col-md-6 col-xl-6\">\n               <RctCollapsibleCard heading=\"Bar Chart\">\n                  <SimpleBarChart />\n               </RctCollapsibleCard>\n               <RctCollapsibleCard heading=\"Line Bar Area Chart\">\n                  <LineBarAreaChart />\n               </RctCollapsibleCard>\n               <RctCollapsibleCard heading=\"Stacked Area Chart\">\n                  <StackedAreaChart />\n               </RctCollapsibleCard>\n               <RctCollapsibleCard heading=\"Radar Chart\">\n                  <SimpleRadarChart />\n               </RctCollapsibleCard>\n            </div>\n         </div>\n      </div>\n   );\n}\n"],"sourceRoot":""}