{"version":3,"sources":["Routes/advance-ui-components/stepper/component/Hozlinear.js","Routes/advance-ui-components/stepper/component/HozNonLinear.js","Routes/advance-ui-components/stepper/component/HozAlternative.js","Routes/advance-ui-components/stepper/component/HozNonAlternative.js","Routes/advance-ui-components/stepper/component/VertStapper.js","Routes/advance-ui-components/stepper/index.js"],"names":["getStepContent","step","HorizontalNonLinearStepperWithError","React","useState","activeStep","setActiveStep","Set","skipped","setSkipped","steps","isStepOptional","isStepSkipped","has","className","Stepper","map","label","index","stepProps","labelProps","optional","type","completed","Step","StepLabel","length","Button","variant","onClick","disabled","prevActiveStep","Error","prevSkipped","newSkipped","values","add","delete","color","HorizontalNonLinearStepper","setCompleted","totalSteps","completedSteps","Object","keys","allStepsCompleted","handleNext","newActiveStep","findIndex","i","nonLinear","StepButton","Typography","newCompleted","stepIndex","HorizontalLabelPositionBelowStepper","alternativeLabel","useStyles","makeStyles","theme","root","width","button","marginRight","spacing","backButton","display","instructions","marginTop","marginBottom","HorizontalNonLinearAlternativeLabelStepper","classes","skippedSteps","size","handleStep","isStepComplete","buttonProps","actionsContainer","resetContainer","padding","VerticalLinearStepper","handleBack","orientation","StepContent","Paper","square","elevation","StepperComponent","props","PageTitleBar","title","IntlMessages","id","match","RctCollapsibleCard","heading","HozAlternative"],"mappings":"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","file":"static/js/204.d611f3cd.chunk.js","sourcesContent":["import React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\n\nfunction getSteps() {\n   return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n   switch (step) {\n      case 0:\n         return 'Select campaign settings...';\n      case 1:\n         return 'What is an ad group anyways?';\n      case 2:\n         return 'This is the bit I really care about!';\n      default:\n         return 'Unknown step';\n   }\n}\n\nexport default function HorizontalNonLinearStepperWithError() {\n\n   const [activeStep, setActiveStep] = React.useState(0);\n   const [skipped, setSkipped] = React.useState(new Set());\n   const steps = getSteps();\n\n   const isStepOptional = (step) => {\n      return step === 1;\n   };\n\n   const isStepSkipped = (step) => {\n      return skipped.has(step);\n   };\n\n   const handleNext = () => {\n      let newSkipped = skipped;\n      if (isStepSkipped(activeStep)) {\n         newSkipped = new Set(skipped.values());\n         newSkipped.delete(activeStep);\n      }\n\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped(newSkipped);\n   };\n\n   const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n   };\n\n   const handleSkip = () => {\n      if (!isStepOptional(activeStep)) {\n         // You probably want to guard against something like this,\n         // it should never occur unless someone's actively trying to break something.\n         throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n\n      setSkipped((prevSkipped) => {\n         const newSkipped = new Set(prevSkipped.values());\n         newSkipped.add(activeStep);\n         return newSkipped;\n      });\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n   };\n\n   const handleReset = () => {\n      setActiveStep(0);\n   };\n\n   return (\n      <div className=\"hoz-linear-stepper\">\n         <Stepper activeStep={activeStep}>\n            {steps.map((label, index) => {\n               const stepProps = {};\n               const labelProps = {};\n               if (isStepOptional(index)) {\n                  labelProps.optional = (\n                     <p type=\"caption\">Optional</p>\n                  );\n               }\n               if (isStepSkipped(index)) {\n                  stepProps.completed = false;\n               }\n               return (\n                  <Step key={label} {...stepProps}>\n                     <StepLabel {...labelProps}>{label}</StepLabel>\n                  </Step>\n               );\n            })}\n         </Stepper>\n         <div>\n            {activeStep === steps.length ? (\n               <div>\n                  <p className=\"\">\n                     All steps completed - you&quot;re finished\n                     </p>\n                  <Button variant=\"contained\" onClick={handleReset} className=\"btn-success text-white\">\n                     Reset\n                     </Button>\n               </div>\n            ) : (\n                  <div className=\"pl-40\">\n                     <p>{getStepContent(activeStep)}</p>\n                     <div>\n                        <Button disabled={activeStep === 0} onClick={handleBack} className=\"btn-danger text-white mr-10 mb-10\" >\n                           Back\n                  </Button>\n                        {isStepOptional(activeStep) && (\n                           <Button variant=\"contained\" onClick={handleSkip} className=\"btn-info text-white mr-10 mb-10\" >\n                              Skip\n                    </Button>\n                        )}\n                        <Button variant=\"contained\" onClick={handleNext} color=\"primary\" className=\"text-white mr-10 mb-10\">\n                           {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                        </Button>\n                     </div>\n                  </div>\n               )}\n         </div>\n      </div>\n   );\n}\n","import React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction getSteps() {\n   return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n   switch (step) {\n      case 0:\n         return 'Step 1: Select campaign settings...';\n      case 1:\n         return 'Step 2: What is an ad group anyways?';\n      case 2:\n         return 'Step 3: This is the bit I really care about!';\n      default:\n         return 'Unknown step';\n   }\n}\n\nexport default function HorizontalNonLinearStepper() {\n   const [activeStep, setActiveStep] = React.useState(0);\n   const [completed, setCompleted] = React.useState({});\n   const steps = getSteps();\n\n   const totalSteps = () => {\n      return steps.length;\n   };\n\n   const completedSteps = () => {\n      return Object.keys(completed).length;\n   };\n\n   const isLastStep = () => {\n      return activeStep === totalSteps() - 1;\n   };\n\n   const allStepsCompleted = () => {\n      return completedSteps() === totalSteps();\n   };\n\n   const handleNext = () => {\n      const newActiveStep =\n         isLastStep() && !allStepsCompleted()\n            ? // It's the last step, but not all steps have been completed,\n            // find the first step that has been completed\n            steps.findIndex((step, i) => !(i in completed))\n            : activeStep + 1;\n      setActiveStep(newActiveStep);\n   };\n\n   const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n   };\n\n   const handleStep = (step) => () => {\n      setActiveStep(step);\n   };\n\n   const handleComplete = () => {\n      const newCompleted = completed;\n      newCompleted[activeStep] = true;\n      setCompleted(newCompleted);\n      handleNext();\n   };\n\n   const handleReset = () => {\n      setActiveStep(0);\n      setCompleted({});\n   };\n\n   return (\n      <div className=\"hoz-linear-stepper\">\n         <Stepper nonLinear activeStep={activeStep}>\n            {steps.map((label, index) => (\n               <Step key={label}>\n                  <StepButton onClick={handleStep(index)} completed={completed[index]}>\n                     {label}\n                  </StepButton>\n               </Step>\n            ))}\n         </Stepper>\n         <div>\n            {allStepsCompleted() ? (\n               <div className=\"pl-40\">\n                  <p>All steps completed - you&quot;re finished</p>\n                  <Button variant=\"contained\" className=\"btn-success text-white\" onClick={handleReset}>Reset</Button>\n               </div>\n            ) : (\n                  <div className=\"pl-40\">\n                     <p>{getStepContent(activeStep)}</p>\n                     <Button variant=\"contained\" className=\"btn-danger text-white mr-10 mb-10\" disabled={activeStep === 0} onClick={handleBack}>\n                        Back\n                     </Button>\n                     <Button variant=\"contained\" color=\"primary\" className=\"text-white mr-10 mb-10\" onClick={handleNext}>\n                        Next\n                     </Button>\n                     {activeStep !== steps.length &&\n                        (completed[activeStep] ? (\n                           <Typography variant=\"caption\">\n                              Step {activeStep + 1} already completed\n                           </Typography>\n                        ) : (\n                        <Button variant=\"contained\" color=\"primary\" className=\"text-white mr-10 mb-10\" onClick={handleComplete}>\n                           {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                        </Button>\n                     ))}\n                  </div>\n               )}\n         </div>\n      </div>\n   );\n}\n","import React, { useState } from 'react';\nimport { Stepper, Step, StepLabel, Button } from '@material-ui/core';\n\nfunction getSteps() {\n   return ['Select master blaster campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(stepIndex) {\n   switch (stepIndex) {\n      case 0:\n         return 'Select campaign settings...';\n      case 1:\n         return 'What is an ad group anyways?';\n      case 2:\n         return 'This is the bit I really care about!';\n      default:\n         return 'Uknown stepIndex';\n   }\n}\n\nfunction HorizontalLabelPositionBelowStepper() {\n   const [activeStep, setActiveStep] = useState(0)\n   \n   const handleNext = () => {\n      setActiveStep(activeStep + 1);\n   };\n\n   const handleBack = () => {\n      setActiveStep(activeStep - 1);\n   };\n\n   const handleReset = () => {\n      setActiveStep(0);\n   };\n\n   const steps = getSteps();\n\n   return (\n      <div>\n         <Stepper activeStep={activeStep} alternativeLabel className=\"stepper-rtl\">\n            {steps.map(label => {\n               return (\n                  <Step key={label}>\n                     <StepLabel>{label}</StepLabel>\n                  </Step>\n               );\n            })}\n         </Stepper>\n         <div>\n            {activeStep === steps.length ? (\n               <div className=\"pl-40\">\n                  <p>All steps completed - you&quot;re finished</p>\n                  <Button variant=\"contained\" className=\"btn btn-success text-white\" onClick={handleReset}>Reset</Button>\n               </div>\n            ) : (\n                  <div className=\"pl-40\">\n                     <p>{getStepContent(activeStep)}</p>\n                     <Button variant=\"contained\" className=\"btn-danger text-white mr-10 mb-10\" disabled={activeStep === 0} onClick={handleBack}>\n                        Back\n                     </Button>\n                     <Button variant=\"contained\" color=\"primary\" className=\"text-white mr-10 mb-10\" onClick={handleNext}>\n                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                     </Button>\n                  </div>\n               )}\n         </div>\n      </div>\n   );\n}\n\nexport default HorizontalLabelPositionBelowStepper","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      width: '100%',\n   },\n   button: {\n      marginRight: theme.spacing(1),\n   },\n   backButton: {\n      marginRight: theme.spacing(1),\n   },\n   completed: {\n      display: 'inline-block',\n   },\n   instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n   },\n}));\n\nfunction getSteps() {\n   return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n   switch (step) {\n      case 0:\n         return 'Step 1: Select campaign settings...';\n      case 1:\n         return 'Step 2: What is an ad group anyways?';\n      case 2:\n         return 'Step 3: This is the bit I really care about!';\n      default:\n         return 'Unknown step';\n   }\n}\n\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\n   const classes = useStyles();\n   const [activeStep, setActiveStep] = React.useState(0);\n   const [completed, setCompleted] = React.useState(new Set());\n   const [skipped, setSkipped] = React.useState(new Set());\n   const steps = getSteps();\n\n   const totalSteps = () => {\n      return getSteps().length;\n   };\n\n   const isStepOptional = (step) => {\n      return step === 1;\n   };\n\n   const handleSkip = () => {\n      if (!isStepOptional(activeStep)) {\n         // You probably want to guard against something like this\n         // it should never occur unless someone's actively trying to break something.\n         throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped((prevSkipped) => {\n         const newSkipped = new Set(prevSkipped.values());\n         newSkipped.add(activeStep);\n         return newSkipped;\n      });\n   };\n\n   const skippedSteps = () => {\n      return skipped.size;\n   };\n\n   const completedSteps = () => {\n      return completed.size;\n   };\n\n   const allStepsCompleted = () => {\n      return completedSteps() === totalSteps() - skippedSteps();\n   };\n\n   const isLastStep = () => {\n      return activeStep === totalSteps() - 1;\n   };\n\n   const handleNext = () => {\n      const newActiveStep =\n         isLastStep() && !allStepsCompleted()\n            ? // It's the last step, but not all steps have been completed\n            // find the first step that has been completed\n            steps.findIndex((step, i) => !completed.has(i))\n            : activeStep + 1;\n\n      setActiveStep(newActiveStep);\n   };\n\n   const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n   };\n\n   const handleStep = (step) => () => {\n      setActiveStep(step);\n   };\n\n   const handleComplete = () => {\n      const newCompleted = new Set(completed);\n      newCompleted.add(activeStep);\n      setCompleted(newCompleted);\n\n      /**\n       * Sigh... it would be much nicer to replace the following if conditional with\n       * `if (!this.allStepsComplete())` however state is not set when we do this,\n       * thus we have to resort to not being very DRY.\n       */\n      if (completed.size !== totalSteps() - skippedSteps()) {\n         handleNext();\n      }\n   };\n\n   const handleReset = () => {\n      setActiveStep(0);\n      setCompleted(new Set());\n      setSkipped(new Set());\n   };\n\n   const isStepSkipped = (step) => {\n      return skipped.has(step);\n   };\n\n   function isStepComplete(step) {\n      return completed.has(step);\n   }\n\n   return (\n      <div className={classes.root}>\n         <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n            {steps.map((label, index) => {\n               const stepProps = {};\n               const buttonProps = {};\n               if (isStepOptional(index)) {\n                  buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n               }\n               if (isStepSkipped(index)) {\n                  stepProps.completed = false;\n               }\n               return (\n                  <Step key={label} {...stepProps}>\n                     <StepButton\n                        onClick={handleStep(index)}\n                        completed={isStepComplete(index)}\n                        {...buttonProps}\n                     >\n                        {label}\n                     </StepButton>\n                  </Step>\n               );\n            })}\n         </Stepper>\n         <div>\n            {allStepsCompleted() ? (\n               <div className=\"pl-40\">\n                  <p>All steps completed - you&quot;re finished</p>\n                  <Button variant=\"contained\" className=\"btn-success text-white\" onClick={handleReset}>Reset</Button>\n               </div>\n            ) : (\n               <div className=\"pl-40\">\n                  <p>{getStepContent(activeStep)}</p>\n                  <Button variant=\"contained\" className=\"btn-danger text-white mr-10 mb-10\" disabled={activeStep === 0} onClick={handleBack} >\n                     Back\n                  </Button>\n                  <Button variant=\"contained\" color=\"primary\" className=\"text-white mr-10 mb-10\" onClick={handleNext}>\n                     Next\n                  </Button>\n                  {isStepOptional(activeStep) &&\n                     !completed.has(activeStep) && (\n                        <Button variant=\"contained\" className=\"btn-info text-white mr-10 mb-10\" onClick={handleSkip}>\n                           Skip\n                        </Button>\n                     )}\n                  {activeStep !== steps.length &&\n                     (completed.has(activeStep) ? (\n                        <Typography variant=\"caption\" className={classes.completed}>\n                           Step {activeStep + 1} already completed\n                        </Typography>\n                     ) : (\n                        <Button variant=\"contained\" color=\"primary\" className=\"text-white mr-10 mb-10\" onClick={handleComplete}>\n                           {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                        </Button>\n                     ))}\n               </div>\n            )}\n         </div>\n      </div>\n   );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      width: '100%',\n   },\n   button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n   },\n   actionsContainer: {\n      marginBottom: theme.spacing(2),\n   },\n   resetContainer: {\n      padding: theme.spacing(3),\n   },\n}));\n\nfunction getSteps() {\n   return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n   switch (step) {\n      case 0:\n         return `For each ad campaign that you create, you can control how much\n              you're willing to spend on clicks and conversions, which networks\n              and geographical locations you want your ads to show on, and more.`;\n      case 1:\n         return 'An ad group contains one or more ads which target a shared set of keywords.';\n      case 2:\n         return `Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.`;\n      default:\n         return 'Unknown step';\n   }\n}\n\nexport default function VerticalLinearStepper() {\n   const classes = useStyles();\n   const [activeStep, setActiveStep] = React.useState(0);\n   const steps = getSteps();\n\n   const handleNext = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n   };\n\n   const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n   };\n\n   const handleReset = () => {\n      setActiveStep(0);\n   };\n\n   return (\n      <div className={classes.root}>\n         <Stepper activeStep={activeStep} orientation=\"vertical\">\n            {steps.map((label, index) => (\n               <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                  <StepContent>\n                     <p>{getStepContent(index)}</p>\n                     <div className={classes.actionsContainer}>\n                        <div>\n                           <Button variant=\"contained\" className=\"btn-danger text-white mr-10 mb-10\" disabled={activeStep === 0} onClick={handleBack}>\n                              Back\n                           </Button>\n                           <Button variant=\"contained\" color=\"primary\" className=\"text-white mr-10 mb-10\" onClick={handleNext}>\n                              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                           </Button>\n                        </div>\n                     </div>\n                  </StepContent>\n               </Step>\n            ))}\n         </Stepper>\n         {activeStep === steps.length && (\n            <Paper square elevation={0} className=\"pl-40\">\n               <p>All steps completed - you&quot;re finished</p>\n               <Button variant=\"contained\" className=\"btn-success text-white mr-10 mb-10\" onClick={handleReset}>\n                  Reset\n            \t\t</Button>\n            </Paper>\n         )}\n      </div>\n   );\n}\n","/**\n * Stepper Advance Ui Components\n */\nimport React from 'react';\n\n// Components\nimport Hozlinear from './component/Hozlinear';\nimport HozNonLinear from './component/HozNonLinear';\nimport HozAlternative from './component/HozAlternative.js';\nimport HozNonAlternative from './component/HozNonAlternative.js';\nimport VertStapper from './component/VertStapper.js';\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction StepperComponent(props) {\n   return (\n      <div className=\"stepper-wrapper\">\n         <PageTitleBar title={<IntlMessages id=\"sidebar.stepper\" />} match={props.match} />\n         <RctCollapsibleCard\n            heading=\"Horizontal Linear\"\n         >\n            <Hozlinear />\n         </RctCollapsibleCard>\n         <RctCollapsibleCard\n            heading=\"Horizontal Non-linear\"\n         >\n            <HozNonLinear />\n         </RctCollapsibleCard>\n         <RctCollapsibleCard\n            heading=\"Horizontal Linear - Alternative Label\"\n         >\n            <HozAlternative />\n         </RctCollapsibleCard>\n         <RctCollapsibleCard\n            heading=\"Horizontal Non Linear - Alternative Label\"\n         >\n            <HozNonAlternative />\n         </RctCollapsibleCard>\n         <RctCollapsibleCard\n            heading=\"Vertical Stepper\"\n         >\n            <VertStapper />\n         </RctCollapsibleCard>\n      </div>\n   );\n}\n\nexport default StepperComponent"],"sourceRoot":""}