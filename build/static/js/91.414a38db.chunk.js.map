{"version":3,"sources":["../node_modules/@mui/icons-material/Upload.js","../node_modules/@uppy/xhr-upload/node_modules/nanoid/non-secure/index.js","../node_modules/@uppy/utils/lib/ProgressTimeout.js","../node_modules/@uppy/xhr-upload/lib/locale.js","../node_modules/@uppy/xhr-upload/lib/index.js","../node_modules/reactstrap/es/Col.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","urlAlphabet","_classPrivateFieldLooseBase","receiver","privateKey","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldLooseKey","name","_aliveTimer","_isDone","_onTimedOut","_timeout","ProgressTimeout","timeout","timeoutHandler","this","writable","clearTimeout","setTimeout","strings","uploadStalled","buildResponseError","xhr","err","error","Error","assign","data","isNetworkError","NetworkError","request","setTypeInBlob","file","slice","size","meta","type","_queueRequestSocketToken","_requestSocketToken","XHRUpload","uppy","_opts","opts","getOptions","Client","remote","providerOptions","provider","Provider","RequestClient","client","allowedMetaFields","Array","isArray","keys","post","url","body","protocol","endpoint","fieldname","fieldName","metadata","fromEntries","map","httpMethod","method","useFormData","formData","headers","res","token","title","defaultLocale","locale","defaultOptions","bundle","responseUrlFieldName","limit","withCredentials","responseType","getResponseData","responseText","parsedResponse","JSON","parse","log","getResponseError","_","response","validateStatus","status","i18nInit","handleUpload","bind","internalRateLimitedQueue","requests","RateLimitedQueue","undefined","uploaderEvents","create","wrapPromiseFunction","priority","overrides","getState","xhrUpload","forEach","item","append","formPost","FormData","addMetadata","dataWithUpdatedType","files","options","current","total","Promise","resolve","reject","emit","queuedRequest","createFormDataUpload","XMLHttpRequest","EventTracker","timer","i18n","seconds","Math","ceil","i","random","nanoid","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesUploaded","bytesTotal","done","remove","uploadURL","uploadResp","open","toUpperCase","run","currentOpts","header","setRequestHeader","send","abort","onFileRemove","onCancelAll","_ref","reason","serverToken","connectToServerSocket","setFileState","getFile","socket","host","getSocketHost","companionUrl","createSocket","Socket","target","on","progressData","emitSocketProgress","close","errData","resp","message","cause","_socket","isPaused","_socket2","_temp","_socket3","onRetryRequest","onRetry","onRetryAll","catch","optsFromState","createBundledUpload","emitError","_temp2","promises","parseInt","length","isRemote","uploadRemote","settle","fileID","cb","targetFileID","eventHandler","_this","arguments","fileIDs","some","uploadBundle","uploadFiles","then","capabilities","setState","individualCancellation","addUploader","removeUploader","BasePlugin","VERSION","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","className","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","mapToCssModules","classNames","_colClass","classes","React","createElement","_extends"],"mappings":"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","file":"static/js/91.414a38db.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zm0-10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Upload');\nexports.default = _default;","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n","function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nvar _aliveTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"aliveTimer\");\n\nvar _isDone = /*#__PURE__*/_classPrivateFieldLooseKey(\"isDone\");\n\nvar _onTimedOut = /*#__PURE__*/_classPrivateFieldLooseKey(\"onTimedOut\");\n\nvar _timeout = /*#__PURE__*/_classPrivateFieldLooseKey(\"timeout\");\n\n/**\n * Helper to abort upload requests if there has not been any progress for `timeout` ms.\n * Create an instance using `timer = new ProgressTimeout(10000, onTimeout)`\n * Call `timer.progress()` to signal that there has been progress of any kind.\n * Call `timer.done()` when the upload has completed.\n */\nclass ProgressTimeout {\n  constructor(timeout, timeoutHandler) {\n    Object.defineProperty(this, _aliveTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isDone, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _onTimedOut, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _timeout, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _timeout)[_timeout] = timeout;\n    _classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut] = timeoutHandler;\n  }\n\n  progress() {\n    // Some browsers fire another progress event when the upload is\n    // cancelled, so we have to ignore progress after the timer was\n    // told to stop.\n    if (_classPrivateFieldLooseBase(this, _isDone)[_isDone]) return;\n\n    if (_classPrivateFieldLooseBase(this, _timeout)[_timeout] > 0) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = setTimeout(_classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut], _classPrivateFieldLooseBase(this, _timeout)[_timeout]);\n    }\n  }\n\n  done() {\n    if (!_classPrivateFieldLooseBase(this, _isDone)[_isDone]) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = null;\n      _classPrivateFieldLooseBase(this, _isDone)[_isDone] = true;\n    }\n  }\n\n}\n\nexport default ProgressTimeout;","export default {\n  strings: {\n    // Shown in the Informer if an upload is being canceled because it stalled for too long.\n    uploadStalled: 'Upload has not made any progress for %{seconds} seconds. You may want to retry it.'\n  }\n};","function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nimport BasePlugin from '@uppy/core/lib/BasePlugin.js';\nimport { nanoid } from 'nanoid/non-secure';\nimport { Provider, RequestClient, Socket } from '@uppy/companion-client';\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress';\nimport getSocketHost from '@uppy/utils/lib/getSocketHost';\nimport settle from '@uppy/utils/lib/settle';\nimport EventTracker from '@uppy/utils/lib/EventTracker';\nimport ProgressTimeout from '@uppy/utils/lib/ProgressTimeout';\nimport { RateLimitedQueue, internalRateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue';\nimport NetworkError from '@uppy/utils/lib/NetworkError';\nimport isNetworkError from '@uppy/utils/lib/isNetworkError';\nconst packageJson = {\n  \"version\": \"3.1.0\"\n};\nimport locale from './locale.js';\n\nfunction buildResponseError(xhr, err) {\n  let error = err; // No error message\n\n  if (!error) error = new Error('Upload error'); // Got an error message string\n\n  if (typeof error === 'string') error = new Error(error); // Got something else\n\n  if (!(error instanceof Error)) {\n    error = Object.assign(new Error('Upload error'), {\n      data: error\n    });\n  }\n\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr);\n    return error;\n  }\n\n  error.request = xhr;\n  return error;\n}\n/**\n * Set `data.type` in the blob to `file.meta.type`,\n * because we might have detected a more accurate file type in Uppy\n * https://stackoverflow.com/a/50875615\n *\n * @param {object} file File object with `data`, `size` and `meta` properties\n * @returns {object} blob updated with the new `type` set from `file.meta.type`\n */\n\n\nfunction setTypeInBlob(file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type);\n  return dataWithUpdatedType;\n}\n\nvar _queueRequestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"queueRequestSocketToken\");\n\nvar _requestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"requestSocketToken\");\n\nexport default class XHRUpload extends BasePlugin {\n  // eslint-disable-next-line global-require\n  constructor(uppy, _opts) {\n    super(uppy, _opts);\n    Object.defineProperty(this, _queueRequestSocketToken, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _requestSocketToken, {\n      writable: true,\n      value: async file => {\n        const opts = this.getOptions(file);\n        const Client = file.remote.providerOptions.provider ? Provider : RequestClient;\n        const client = new Client(this.uppy, file.remote.providerOptions);\n        const allowedMetaFields = Array.isArray(opts.allowedMetaFields) ? opts.allowedMetaFields // Send along all fields by default.\n        : Object.keys(file.meta);\n        const res = await client.post(file.remote.url, { ...file.remote.body,\n          protocol: 'multipart',\n          endpoint: opts.endpoint,\n          size: file.data.size,\n          fieldname: opts.fieldName,\n          metadata: Object.fromEntries(allowedMetaFields.map(name => [name, file.meta[name]])),\n          httpMethod: opts.method,\n          useFormData: opts.formData,\n          headers: opts.headers\n        });\n        return res.token;\n      }\n    });\n    this.type = 'uploader';\n    this.id = this.opts.id || 'XHRUpload';\n    this.title = 'XHRUpload';\n    this.defaultLocale = locale; // Default options\n\n    const defaultOptions = {\n      formData: true,\n      fieldName: _opts.bundle ? 'files[]' : 'file',\n      method: 'post',\n      allowedMetaFields: null,\n      responseUrlFieldName: 'url',\n      bundle: false,\n      headers: {},\n      timeout: 30 * 1000,\n      limit: 5,\n      withCredentials: false,\n      responseType: '',\n\n      /**\n       * @param {string} responseText the response body string\n       */\n      getResponseData(responseText) {\n        let parsedResponse = {};\n\n        try {\n          parsedResponse = JSON.parse(responseText);\n        } catch (err) {\n          uppy.log(err);\n        }\n\n        return parsedResponse;\n      },\n\n      /**\n       *\n       * @param {string} _ the response body string\n       * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)\n       */\n      getResponseError(_, response) {\n        let error = new Error('Upload error');\n\n        if (isNetworkError(response)) {\n          error = new NetworkError(error, response);\n        }\n\n        return error;\n      },\n\n      /**\n       * Check if the response from the upload endpoint indicates that the upload was successful.\n       *\n       * @param {number} status the response status code\n       */\n      validateStatus(status) {\n        return status >= 200 && status < 300;\n      }\n\n    };\n    this.opts = { ...defaultOptions,\n      ..._opts\n    };\n    this.i18nInit();\n    this.handleUpload = this.handleUpload.bind(this); // Simultaneous upload limiting is shared across all uploads with this plugin.\n\n    if (internalRateLimitedQueue in this.opts) {\n      this.requests = this.opts[internalRateLimitedQueue];\n    } else {\n      this.requests = new RateLimitedQueue(this.opts.limit);\n    }\n\n    if (this.opts.bundle && !this.opts.formData) {\n      throw new Error('`opts.formData` must be true when `opts.bundle` is enabled.');\n    }\n\n    if ((_opts == null ? void 0 : _opts.allowedMetaFields) === undefined && 'metaFields' in this.opts) {\n      throw new Error('The `metaFields` option has been renamed to `allowedMetaFields`.');\n    }\n\n    this.uploaderEvents = Object.create(null);\n    _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken] = this.requests.wrapPromiseFunction(_classPrivateFieldLooseBase(this, _requestSocketToken)[_requestSocketToken], {\n      priority: -1\n    });\n  }\n\n  getOptions(file) {\n    const overrides = this.uppy.getState().xhrUpload;\n    const {\n      headers\n    } = this.opts;\n    const opts = { ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {}\n    }; // Support for `headers` as a function, only in the XHRUpload settings.\n    // Options set by other plugins in Uppy state or on the files themselves are still merged in afterward.\n    //\n    // ```js\n    // headers: (file) => ({ expires: file.meta.expires })\n    // ```\n\n    if (typeof headers === 'function') {\n      opts.headers = headers(file);\n    } else {\n      Object.assign(opts.headers, this.opts.headers);\n    }\n\n    if (overrides) {\n      Object.assign(opts.headers, overrides.headers);\n    }\n\n    if (file.xhrUpload) {\n      Object.assign(opts.headers, file.xhrUpload.headers);\n    }\n\n    return opts;\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  addMetadata(formData, meta, opts) {\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields) ? opts.allowedMetaFields : Object.keys(meta); // Send along all fields by default.\n\n    allowedMetaFields.forEach(item => {\n      formData.append(item, meta[item]);\n    });\n  }\n\n  createFormDataUpload(file, opts) {\n    const formPost = new FormData();\n    this.addMetadata(formPost, file.meta, opts);\n    const dataWithUpdatedType = setTypeInBlob(file);\n\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name);\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType);\n    }\n\n    return formPost;\n  }\n\n  createBundledUpload(files, opts) {\n    const formPost = new FormData();\n    const {\n      meta\n    } = this.uppy.getState();\n    this.addMetadata(formPost, meta, opts);\n    files.forEach(file => {\n      const options = this.getOptions(file);\n      const dataWithUpdatedType = setTypeInBlob(file);\n\n      if (file.name) {\n        formPost.append(options.fieldName, dataWithUpdatedType, file.name);\n      } else {\n        formPost.append(options.fieldName, dataWithUpdatedType);\n      }\n    });\n    return formPost;\n  }\n\n  upload(file, current, total) {\n    const opts = this.getOptions(file);\n    this.uppy.log(`uploading ${current} of ${total}`);\n    return new Promise((resolve, reject) => {\n      this.uppy.emit('upload-started', file);\n      const data = opts.formData ? this.createFormDataUpload(file, opts) : file.data;\n      const xhr = new XMLHttpRequest();\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy);\n      let queuedRequest;\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', {\n          seconds: Math.ceil(opts.timeout / 1000)\n        }));\n        this.uppy.emit('upload-stalled', error, [file]);\n      });\n      const id = nanoid();\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log(`[XHRUpload] ${id} started`);\n      });\n      xhr.upload.addEventListener('progress', ev => {\n        this.uppy.log(`[XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`); // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n\n        timer.progress();\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total\n          });\n        }\n      });\n      xhr.addEventListener('load', () => {\n        this.uppy.log(`[XHRUpload] ${id} finished`);\n        timer.done();\n        queuedRequest.done();\n\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove();\n          this.uploaderEvents[file.id] = null;\n        }\n\n        if (opts.validateStatus(xhr.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr);\n          const uploadURL = body[opts.responseUrlFieldName];\n          const uploadResp = {\n            status: xhr.status,\n            body,\n            uploadURL\n          };\n          this.uppy.emit('upload-success', file, uploadResp);\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`);\n          }\n\n          return resolve(file);\n        }\n\n        const body = opts.getResponseData(xhr.responseText, xhr);\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n        const response = {\n          status: xhr.status,\n          body\n        };\n        this.uppy.emit('upload-error', file, error, response);\n        return reject(error);\n      });\n      xhr.addEventListener('error', () => {\n        this.uppy.log(`[XHRUpload] ${id} errored`);\n        timer.done();\n        queuedRequest.done();\n\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove();\n          this.uploaderEvents[file.id] = null;\n        }\n\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n        this.uppy.emit('upload-error', file, error);\n        return reject(error);\n      });\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true); // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n\n      xhr.withCredentials = opts.withCredentials;\n\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType;\n      }\n\n      queuedRequest = this.requests.run(() => {\n        this.uppy.emit('upload-started', file); // When using an authentication system like JWT, the bearer token goes as a header. This\n        // header needs to be fresh each time the token is refreshed so computing and setting the\n        // headers just before the upload starts enables this kind of authentication to work properly.\n        // Otherwise, half-way through the list of uploads the token could be stale and the upload would fail.\n\n        const currentOpts = this.getOptions(file);\n        Object.keys(currentOpts.headers).forEach(header => {\n          xhr.setRequestHeader(header, currentOpts.headers[header]);\n        });\n        xhr.send(data);\n        return () => {\n          timer.done();\n          xhr.abort();\n        };\n      });\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort();\n        reject(new Error('File removed'));\n      });\n      this.onCancelAll(file.id, _ref => {\n        let {\n          reason\n        } = _ref;\n\n        if (reason === 'user') {\n          queuedRequest.abort();\n        }\n\n        reject(new Error('Upload cancelled'));\n      });\n    });\n  }\n\n  async uploadRemote(file) {\n    // TODO: we could rewrite this to use server-sent events instead of creating WebSockets.\n    try {\n      this.uppy.emit('upload-started', file);\n\n      if (file.serverToken) {\n        return this.connectToServerSocket(file);\n      }\n\n      const serverToken = await _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken](file);\n      if (!this.uppy.getState().files[file.id]) return undefined;\n      this.uppy.setFileState(file.id, {\n        serverToken\n      });\n      return this.connectToServerSocket(this.uppy.getFile(file.id));\n    } catch (err) {\n      this.uppy.emit('upload-error', file, err);\n      throw err;\n    }\n  }\n\n  connectToServerSocket(file) {\n    return new Promise((resolve, reject) => {\n      const opts = this.getOptions(file);\n      const token = file.serverToken;\n      const host = getSocketHost(file.remote.companionUrl);\n      let socket;\n\n      const createSocket = () => {\n        if (socket != null) return;\n        socket = new Socket({\n          target: `${host}/api/${token}`\n        });\n        socket.on('progress', progressData => emitSocketProgress(this, progressData, file));\n        socket.on('success', data => {\n          const body = opts.getResponseData(data.response.responseText, data.response);\n          const uploadURL = body[opts.responseUrlFieldName];\n          const uploadResp = {\n            status: data.response.status,\n            body,\n            uploadURL\n          };\n          this.uppy.emit('upload-success', file, uploadResp);\n          queuedRequest.done(); // eslint-disable-line no-use-before-define\n\n          socket.close();\n\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove();\n            this.uploaderEvents[file.id] = null;\n          }\n\n          return resolve();\n        });\n        socket.on('error', errData => {\n          const resp = errData.response;\n          const error = resp ? opts.getResponseError(resp.responseText, resp) : Object.assign(new Error(errData.error.message), {\n            cause: errData.error\n          });\n          this.uppy.emit('upload-error', file, error);\n          queuedRequest.done(); // eslint-disable-line no-use-before-define\n\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove();\n            this.uploaderEvents[file.id] = null;\n          }\n\n          reject(error);\n        });\n      };\n\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy);\n      let queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          var _socket;\n\n          (_socket = socket) == null ? void 0 : _socket.send('pause', {});\n        } else {\n          createSocket();\n        }\n\n        return () => socket.close();\n      });\n      this.onFileRemove(file.id, () => {\n        var _socket2;\n\n        (_socket2 = socket) == null ? void 0 : _socket2.send('cancel', {});\n        queuedRequest.abort();\n        resolve(`upload ${file.id} was removed`);\n      });\n      this.onCancelAll(file.id, function (_temp) {\n        let {\n          reason\n        } = _temp === void 0 ? {} : _temp;\n\n        if (reason === 'user') {\n          var _socket3;\n\n          (_socket3 = socket) == null ? void 0 : _socket3.send('cancel', {});\n          queuedRequest.abort();\n        }\n\n        resolve(`upload ${file.id} was canceled`);\n      });\n\n      const onRetryRequest = () => {\n        if (socket == null) {\n          queuedRequest.abort();\n        } else {\n          socket.send('pause', {});\n          queuedRequest.done();\n        }\n\n        queuedRequest = this.requests.run(() => {\n          if (!file.isPaused) {\n            if (socket == null) {\n              createSocket();\n            } else {\n              socket.send('resume', {});\n            }\n          }\n\n          return () => socket.close();\n        });\n      };\n\n      this.onRetry(file.id, onRetryRequest);\n      this.onRetryAll(file.id, onRetryRequest);\n    }).catch(err => {\n      this.uppy.emit('upload-error', file, err);\n      return Promise.reject(err);\n    });\n  }\n\n  uploadBundle(files) {\n    return new Promise((resolve, reject) => {\n      const {\n        endpoint\n      } = this.opts;\n      const {\n        method\n      } = this.opts;\n      const optsFromState = this.uppy.getState().xhrUpload;\n      const formData = this.createBundledUpload(files, { ...this.opts,\n        ...(optsFromState || {})\n      });\n      const xhr = new XMLHttpRequest();\n\n      const emitError = error => {\n        files.forEach(file => {\n          this.uppy.emit('upload-error', file, error);\n        });\n      };\n\n      const timer = new ProgressTimeout(this.opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', {\n          seconds: Math.ceil(this.opts.timeout / 1000)\n        }));\n        this.uppy.emit('upload-stalled', error, files);\n      });\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log('[XHRUpload] started uploading bundle');\n        timer.progress();\n      });\n      xhr.upload.addEventListener('progress', ev => {\n        timer.progress();\n        if (!ev.lengthComputable) return;\n        files.forEach(file => {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded / ev.total * file.size,\n            bytesTotal: file.size\n          });\n        });\n      });\n      xhr.addEventListener('load', ev => {\n        timer.done();\n\n        if (this.opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          const body = this.opts.getResponseData(xhr.responseText, xhr);\n          const uploadResp = {\n            status: ev.target.status,\n            body\n          };\n          files.forEach(file => {\n            this.uppy.emit('upload-success', file, uploadResp);\n          });\n          return resolve();\n        }\n\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error');\n        error.request = xhr;\n        emitError(error);\n        return reject(error);\n      });\n      xhr.addEventListener('error', () => {\n        timer.done();\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error');\n        emitError(error);\n        return reject(error);\n      });\n      this.uppy.on('cancel-all', function (_temp2) {\n        let {\n          reason\n        } = _temp2 === void 0 ? {} : _temp2;\n        if (reason !== 'user') return;\n        timer.done();\n        xhr.abort();\n      });\n      xhr.open(method.toUpperCase(), endpoint, true); // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n\n      xhr.withCredentials = this.opts.withCredentials;\n\n      if (this.opts.responseType !== '') {\n        xhr.responseType = this.opts.responseType;\n      }\n\n      Object.keys(this.opts.headers).forEach(header => {\n        xhr.setRequestHeader(header, this.opts.headers[header]);\n      });\n      xhr.send(formData);\n      files.forEach(file => {\n        this.uppy.emit('upload-started', file);\n      });\n    });\n  }\n\n  uploadFiles(files) {\n    const promises = files.map((file, i) => {\n      const current = parseInt(i, 10) + 1;\n      const total = files.length;\n\n      if (file.error) {\n        return Promise.reject(new Error(file.error));\n      }\n\n      if (file.isRemote) {\n        return this.uploadRemote(file, current, total);\n      }\n\n      return this.upload(file, current, total);\n    });\n    return settle(promises);\n  }\n\n  onFileRemove(fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', file => {\n      if (fileID === file.id) cb(file.id);\n    });\n  }\n\n  onRetry(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', targetFileID => {\n      if (fileID === targetFileID) {\n        cb();\n      }\n    });\n  }\n\n  onRetryAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  onCancelAll(fileID, eventHandler) {\n    var _this = this;\n\n    this.uploaderEvents[fileID].on('cancel-all', function () {\n      if (!_this.uppy.getFile(fileID)) return;\n      eventHandler(...arguments);\n    });\n  }\n\n  handleUpload(fileIDs) {\n    if (fileIDs.length === 0) {\n      this.uppy.log('[XHRUpload] No files to upload!');\n      return Promise.resolve();\n    } // No limit configured by the user, and no RateLimitedQueue passed in by a \"parent\" plugin\n    // (basically just AwsS3) using the internal symbol\n\n\n    if (this.opts.limit === 0 && !this.opts[internalRateLimitedQueue]) {\n      this.uppy.log('[XHRUpload] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/xhr-upload/#limit-0', 'warning');\n    }\n\n    this.uppy.log('[XHRUpload] Uploading...');\n    const files = fileIDs.map(fileID => this.uppy.getFile(fileID));\n\n    if (this.opts.bundle) {\n      // if bundle: true, we don’t support remote uploads\n      const isSomeFileRemote = files.some(file => file.isRemote);\n\n      if (isSomeFileRemote) {\n        throw new Error('Can’t upload remote files when the `bundle: true` option is set');\n      }\n\n      if (typeof this.opts.headers === 'function') {\n        throw new TypeError('`headers` may not be a function when the `bundle: true` option is set');\n      }\n\n      return this.uploadBundle(files);\n    }\n\n    return this.uploadFiles(files).then(() => null);\n  }\n\n  install() {\n    if (this.opts.bundle) {\n      const {\n        capabilities\n      } = this.uppy.getState();\n      this.uppy.setState({\n        capabilities: { ...capabilities,\n          individualCancellation: false\n        }\n      });\n    }\n\n    this.uppy.addUploader(this.handleUpload);\n  }\n\n  uninstall() {\n    if (this.opts.bundle) {\n      const {\n        capabilities\n      } = this.uppy.getState();\n      this.uppy.setState({\n        capabilities: { ...capabilities,\n          individualCancellation: true\n        }\n      });\n    }\n\n    this.uppy.removeUploader(this.handleUpload);\n  }\n\n}\nXHRUpload.VERSION = packageJson.version;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;"],"sourceRoot":""}