{"version":3,"sources":["Components/Charts/SalesChart.js","Components/Widgets/DailySales.js"],"names":["SalesChart","props","labels","label","borderColor","chartdata","pointBackgroundColor","height","pointBorderColor","borderWidth","data","canvas","ctx","getContext","_stroke","stroke","save","shadowColor","ChartConfig","shadowBlur","shadowOffsetX","shadowOffsetY","apply","this","arguments","restore","datasets","fill","lineTension","fillOpacity","pointBorderWidth","pointRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","options","plugins","legend","display","scales","x","ticks","min","grid","drawBorder","y","suggestedMin","beginAtZero","DailySales","className","color","info","white","RctCard","IntlMessages","id"],"mappings":"kJA+EeA,MArEf,SAAoBC,GACjB,IAAQC,EAAuGD,EAAvGC,OAAQC,EAA+FF,EAA/FE,MAAOC,EAAwFH,EAAxFG,YAAaC,EAA2EJ,EAA3EI,UAAWC,EAAgEL,EAAhEK,qBAAsBC,EAA0CN,EAA1CM,OAAQC,EAAkCP,EAAlCO,iBAAkBC,EAAgBR,EAAhBQ,YA+D/F,OACG,cAAC,IAAI,CAACC,KA/DI,SAACC,GACX,IAAMC,EAAMD,EAAOE,WAAW,MACxBC,EAAUF,EAAIG,OAUpB,OATAH,EAAIG,OAAS,WACVH,EAAII,OACJJ,EAAIK,YAAcC,IAAYD,YAC9BL,EAAIO,WAAa,GACjBP,EAAIQ,cAAgB,EACpBR,EAAIS,cAAgB,GACpBP,EAAQQ,MAAMC,KAAMC,WACpBZ,EAAIa,SACP,EACO,CACJvB,OAAQA,EACRwB,SAAU,CACP,CACGvB,MAAOA,EACPwB,MAAM,EACNC,YAAa,EACbC,YAAa,GACbzB,YAAaA,EACbK,YAAaA,EACbD,iBAAkBA,EAClBF,qBAAsBA,EACtBwB,iBAAkB,EAClBC,YAAa,EACbC,0BAA2B1B,EAC3B2B,sBAAuBzB,EACvB0B,sBAAuB,EACvBC,iBAAkB,EAClBzB,KAAML,IAIlB,EA6BqB+B,QA3BL,CACbC,QAAQ,CACLC,OAAO,CACJC,SAAS,IAGfC,OAAQ,CACFC,EAAG,CACAF,SAAS,EACTG,MAAO,CACJC,IAAK,GAERC,KAAM,CACHL,SAAS,EACTM,YAAY,IAGlBC,EAAG,CACAP,SAAS,EACTG,MAAO,CACJK,aAAc,EACdC,aAAa,MAMWzC,OAAQA,GAElD,E,iBC9Be0C,UA9BI,SAAH,OAAM9C,EAAK,EAALA,MAAOE,EAAS,EAATA,UAAWH,EAAM,EAANA,OAAM,OAC7C,gCACC,sBAAKgD,UAAU,OAAM,UACpB,sBAAKA,UAAU,eAAc,UAC5B,mBAAGA,UAAU,2CACb,gCACC,oBAAIA,UAAU,OAAM,SAAC,iBACrB,mBAAGA,UAAU,OAAM,SAAC,sCAGtB,cAAC,EAAU,CACV/C,MAAOA,EACPE,UAAWA,EACXH,OAAQA,EACRE,YAAac,IAAYiC,MAAMC,KAC/B9C,qBAAsBY,IAAYiC,MAAMC,KACxC7C,OAAQ,IACRC,iBAAkBU,IAAYiC,MAAME,MACpC5C,YAAa,OAGf,cAAC6C,EAAA,EAAa,UACb,uBAAMJ,UAAU,kBAAiB,UAChC,mBAAGA,UAAU,2BACb,cAACK,EAAA,EAAY,CAACC,GAAG,mCAGd,C","file":"static/js/142.9de8a183.chunk.js","sourcesContent":["/**\n * Sales Chart Component\n */\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// chart config file\nimport ChartConfig from 'Constants/chart-config';\n\n// Main Component\nfunction SalesChart(props){\n   const { labels, label, borderColor, chartdata, pointBackgroundColor, height, pointBorderColor, borderWidth } = props;\n   const data = (canvas) => {\n      const ctx = canvas.getContext(\"2d\");\n      const _stroke = ctx.stroke;\n      ctx.stroke = function () {\n         ctx.save();\n         ctx.shadowColor = ChartConfig.shadowColor;\n         ctx.shadowBlur = 13;\n         ctx.shadowOffsetX = 0;\n         ctx.shadowOffsetY = 12;\n         _stroke.apply(this, arguments);\n         ctx.restore();\n      };\n      return {\n         labels: labels,\n         datasets: [\n            {\n               label: label,\n               fill: false,\n               lineTension: 0,\n               fillOpacity: 0.3,\n               borderColor: borderColor,\n               borderWidth: borderWidth,\n               pointBorderColor: pointBorderColor,\n               pointBackgroundColor: pointBackgroundColor,\n               pointBorderWidth: 3,\n               pointRadius: 6,\n               pointHoverBackgroundColor: pointBackgroundColor,\n               pointHoverBorderColor: pointBorderColor,\n               pointHoverBorderWidth: 4,\n               pointHoverRadius: 7,\n               data: chartdata,\n            }\n         ]\n      }\n   }\n   // chart options\n   const options = {\n      plugins:{\n         legend:{\n            display: false\n         }\n      },      \n      scales: {\n            x: {\n               display: true,\n               ticks: {\n                  min: 0\n               },\n               grid: {\n                  display: true,\n                  drawBorder: false\n               }\n            },\n            y: {\n               display: false,\n               ticks: {\n                  suggestedMin: 0,\n                  beginAtZero: true\n               }\n            }\n      }\n   };\n   return (\n      <Line data={data} options={options} height={height} />\n   );\n}\n\nexport default SalesChart;","/**\n * Daily Sales Widget\n */\nimport React from 'react';\n\n// chart\nimport SalesChart from 'Components/Charts/SalesChart';\n\n// card component\nimport { RctCardFooter } from 'Components/RctCard';\n\n// constants\nimport ChartConfig from 'Constants/chart-config';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nconst DailySales = ({ label, chartdata, labels }) => (\n\t<div>\n\t\t<div className=\"p-20\">\n\t\t\t<div className=\"mb-20 d-flex\">\n\t\t\t\t<i className=\"mr-15 ti-arrow-up text-success font-lg\"></i>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className=\"mb-5\">12,255 Today</h2>\n\t\t\t\t\t<p className=\"mb-0\">10% increase from yesterday</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SalesChart\n\t\t\t\tlabel={label}\n\t\t\t\tchartdata={chartdata}\n\t\t\t\tlabels={labels}\n\t\t\t\tborderColor={ChartConfig.color.info}\n\t\t\t\tpointBackgroundColor={ChartConfig.color.info}\n\t\t\t\theight={125}\n\t\t\t\tpointBorderColor={ChartConfig.color.white}\n\t\t\t\tborderWidth={4}\n\t\t\t/>\n\t\t</div>\n\t\t<RctCardFooter>\n\t\t\t<span className=\"fs-12 text-base\">\n\t\t\t\t<i className=\"mr-5 zmdi zmdi-refresh\"></i>\n\t\t\t\t<IntlMessages id=\"widgets.updated10Minago\" />\n\t\t\t</span>\n\t\t</RctCardFooter>\n\t</div>\n);\n\nexport default DailySales;\n"],"sourceRoot":""}