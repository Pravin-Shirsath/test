{"version":3,"sources":["../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/Edit.js","Routes/dashboard/ViewProject/index.js","Routes/dashboard/ReuseComponent/CustomBreadcrumbs.js","Constants/DateFormator.js","../node_modules/reactstrap/es/Col.js","../node_modules/@mui/icons-material/Delete.js","Routes/dashboard/ReuseComponent/EditDataset.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","ViewProject","props","history","useHistory","location","useState","searchText","setSearchText","loading","deleteConfirmationDialog","useRef","selected","setSelectedItem","openEditDataset","setOpenEditDataset","datasets","setDatasets","filteredDatasets","setFilteredDatasets","activePage","setActivePage","totalPageCount","setTotalPageCount","useEffect","localStorage","getItem","getViewProjectData","authToken","JSON","parse","projectId","getViewProjectDatasets","then","res","status","console","log","data","results","count","parseInt","catch","error","response","NotificationManager","clear","push","className","name","content","currentPage","state","breadcrumbData","title","message","onConfirm","accessToken","DeleteDataset","id","project_id","current","close","success","err","Delete_Datset","ref","fullBlock","style","justifyContent","type","placeholder","border","borderBottom","onChange","e","target","variant","color","cursor","onClick","getSearchProjectDatasets","length","path","url","HandleCreate","map","dataset","i","created_Date","getFormatDate2","date_created","dataset_name","setItem","handleView","open","itemsCountPerPage","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","Modalopen","reloadlist","CustomBreadcrumbs","HandleNavigate","item","index","myarray","undefined","date","toString","replace","split","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","columnProp","isObject","_classNames","colSizeInterfix","colClass","mapToCssModules","classNames","_colClass","classes","React","createElement","_extends","EditDataset","setOpen","datasetName","setDatasetName","comment","setComment","onClose","margin","padding","marginTop","row","for","height","marginBottom","UpadatDataset"],"mappings":"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","file":"static/js/45.f79661a6.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Button from '@material-ui/core/Button'\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Col\n} from 'reactstrap'\nimport Pagination from \"react-js-pagination\";\n\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications'\n// delete confirmation dialog\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n// update user form\n//  import UpdateUserForm from './UpdateUserForm'\n// page title bar\nimport PageTitleBar from '../../../Components/PageTitleBar/PageTitleBar'\n// intl messages\nimport IntlMessages from '../../../Util/IntlMessages'\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport {\n  DeleteDataset,\n  getSearchProjectDatasets,\n  getViewProjectDatasets\n} from '../../../Api/'\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport EditIcon from '@mui/icons-material/Edit';\nimport EditDataset from '../ReuseComponent/EditDataset';\nimport { getFormatDate2 } from 'Constants/DateFormator';\nimport CustomBreadcrumbs from \"../ReuseComponent/CustomBreadcrumbs\";\n\nexport default function ViewProject(props) {\n  const history = useHistory();\n const {location}=props\n \n  //  const [users, setUsers] = useState() // use when data is coming from api\n  const [users, setUsers] = useState([])\n  //  const [filteredUsers, setFilteredUsers] = useState() // use when the data is coming fom api\n  const [filteredUsers, setFilteredUsers] = useState([])\n  const [searchText, setSearchText] = useState('');\n  \n\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n \n  const [selectedUser, setSelectedUser] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [addNewUserModal, setAddNewUserModal] = useState(false)\n  const [updateNewUserModal, setupdateNewUserModal] = useState(false)\n  const [deleteUserModal, setdeleteUserModal] = useState(false)\n\n  const deleteConfirmationDialog = useRef()\n  const [selected, setSelectedItem] = useState({})\n\n  const [editUser, setEditUser] = useState(null)\n  const [selectedUsers, setSelectedUsers] = useState(0)\n  const [viewDetails, setViewDetails] = useState()\nconst [openEditDataset,setOpenEditDataset] = useState(false)\n\n  const [datasets, setDatasets] = useState([]);\n  const [filteredDatasets,setFilteredDatasets] = useState([])\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState(0);\n\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    // conditional rendring\n    // if(isLoggedInBool !== \"true\"){\n    //   history.push(\"/login\")\n    //     localStorage.clear();\n    // } else {\n    // getCustomersListData();\n    getViewProjectData();\n    // }\n  }, [])\n\n  const getViewProjectData = () => {\n    const authToken = JSON?.parse(localStorage.getItem(\"token\"));\n    const projectId = localStorage?.getItem(\"projId\")\n\n    if(authToken !== null){\n      getViewProjectDatasets(authToken, projectId, activePage)\n      .then(res => {\n        if(res?.status == 200){\n          console.log(res?.data?.results, \"project's all lists\")\n          setDatasets(res?.data?.results)\n          setFilteredDatasets(res?.data?.results);\n\n          console.log(res?.data?.count, \"total counts of datasets of projects\")\n          setTotalPageCount(parseInt(res?.data?.count));\n        } else {\n          console.log('Response from View project Datasets lists api:', res)\n        }\n      })\n      .catch((error)=>{\n        console.log(\"error in viewdataset:\",error)\n        const status = error?.response?.status\n        if(status == 401){\n          NotificationManager.error(\"Something went wrong !\");\n          localStorage.clear();\n          history.push(\"/login\")\n        } else if(status == 500){\n          NotificationManager.error(\"Temporary connectivity issues.\");\n        }\n      })\n    } else {\n      localStorage.clear();\n      history.push(\"/login\")\n    }\n  }\n\n\n\n\n\n\n  const EditModal = (item) => {\n    setSelectedItem(item)\n  \n    setOpenEditDataset(true)\n  }\n\n  const DeletModalOpen = (item) => {\n    setSelectedItem(item)\n    deleteConfirmationDialog.current.open()\n  }\n\n  const Delete_Datset = () => {\n\n\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n     \n      DeleteDataset(accessToken, selected?.id,selected?.project_id)\n        .then((res) => {\n          if (res?.status === 200) {\n            deleteConfirmationDialog.current.close()\n            getViewProjectData();\n            NotificationManager.success(\" Datset deleted !\")\n            console.log('Response from dataset  :', res)\n\n          } else {\n\n\n            NotificationManager.error(\"Delete_Datset deleting process unsucess!\")\n          }\n        })\n        .catch((err) => {\n          console.log('Response from err dataset  :', err)\n          NotificationManager.error(\"Delete_Datset deleting process unsucess!\")\n        })\n    }\n  }\n\n\n\n\n\n  const handlePageChange = (pageNumber) => {\n    console.log(\"pagination\", pageNumber)\n    if (activePage !== pageNumber) {\n      const authToken = JSON.parse(localStorage.getItem('token'))\n      const projectId = localStorage?.getItem(\"projId\")\n\n      if (authToken !== null) {\n        getViewProjectDatasets(authToken, projectId, pageNumber)\n          .then((res) => {\n            if (res?.status === 200) {\n              setDatasets(res?.data?.results);\n              setFilteredDatasets(res?.data?.results);\n              setTotalPageCount(res?.data?.count);\n              console.log('Response from customerlist :', res)\n            } else {\n              // console.log('Response from customerlist:', res)\n            }\n          })\n          .catch((err) => {\n            // console.log('Response from customerlist:', err)\n          })\n      }\n      setActivePage(pageNumber)\n    }\n  }\n\n\n  // Dataset View\n  const handleView = (dataset) => {\n    console.log(dataset?.id, \"selected dataset ID\")\n    localStorage.setItem(\"datasetId\", dataset?.id);\n    if(location?.state?.breadcrumbData){\n      let path = location?.state?.breadcrumbData[0]\n      if(path?.name == \"Dashboard\"){\n        const breadcrumbData = [\n          { name: 'Dashboard', url: '/app/dashboard/saas' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/viewDataset\",{breadcrumbData:breadcrumbData})\n      }else if(path?.name == \"Project\"){\n        const breadcrumbData = [\n          { name: 'Project', url: '/app/dashboard/project' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/viewDataset\",{breadcrumbData:breadcrumbData})\n      }\n    }\n  \n  }\n\n  // Dataset create\n  const HandleCreate=()=>{\n    if(location?.state?.breadcrumbData){\n      let path = location?.state?.breadcrumbData[0]\n      if(path?.name == \"Dashboard\"){\n        const breadcrumbData = [\n          { name: 'Dashboard', url: '/app/dashboard/saas' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/createDataset\",{breadcrumbData:breadcrumbData})\n      }else if(path?.name == \"Project\"){\n        const breadcrumbData = [\n          { name: 'Project', url: '/app/dashboard/project' },\n          { name: 'View Project', url: '/app/dashboard/viewProject' },\n          \n        ];\n        history.push(\"/app/dashboard/createDataset\",{breadcrumbData:breadcrumbData})\n      }\n    }\n       \n  }\n\n  const getSearchedCustomerData = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'));\n    const projectId = localStorage?.getItem(\"projId\")\n    if (accessToken !== null) {\n       getSearchProjectDatasets(accessToken,projectId, searchText)\n        .then((res) => {\n          if (res?.status === 200 && res?.data?.results.length>0) {\n            setFilteredDatasets(res?.data?.results);\n            setSearchText('')\n            // console.log('Response from customerlist :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n            setFilteredDatasets(datasets);\n            setSearchText('');\n            NotificationManager.error(\"No dataset found!\")\n          }\n        })\n        .catch((err) => {\n          // console.log('Response from customerlist:', err)\n        })\n    }\n  }\n\n  console.log(\"history==view project \",history)\n  console.log(\"props \",props)\n  console.log(filteredDatasets, \"filteredd datasets\")\n  console.log(location, \"location in view project\")\n  console.log(props, \"proppsss in view project\")\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>Automaton | Customers List</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      {/* <PageTitleBar\n        title={<IntlMessages id=\"sidebar.viewProject\" />}\n        match={props.match}\n      /> */}\n \n      <CustomBreadcrumbs    currentPage={\"View Project\"} data={location?.state?.breadcrumbData} />\n\n\n                <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n             message=\"This will delete your Dataset permanently.\"\n             onConfirm={() => Delete_Datset()}\n             ref={deleteConfirmationDialog} />\n      <RctCollapsibleCard fullBlock>\n     \n        <div className=\"table-responsive\">\n          <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n            <div className='search-row'>\n              <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n              <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} \n               onClick={getSearchedCustomerData}\n              >Search</Button>\n            </div>\n\n            <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} onClick={()=>HandleCreate()}>Create Dataset</Button>\n\n\n\n\n          </div>\n          <table className=\"table table-middle table-hover mb-0\">\n            <thead>\n              <tr>\n                <th></th>\n                <th>Project ID</th>\n                <th>Dataset Name</th>\n                <th>Date Created</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n\n            {/****** mine filtered Table body, without ternary conditional value  *****/}\n            <tbody>\n              {filteredDatasets &&\n                filteredDatasets.map((dataset, i, data) => {\n                  // let active = user?.is_active\n                  let created_Date = getFormatDate2((dataset?.date_created))\n                  return (\n\n                    <tr key={i}>\n                      <td></td>\n                      <td>{dataset?.project_id}</td>\n                      <td>\n                        <div className=\"media\">\n                          <div className=\"media-body\">\n                            <h5 className=\"mb-5 fw-bold\">{dataset?.dataset_name}</h5>\n                          </div>\n                        </div>\n                      </td>\n                      <td>{created_Date?created_Date: '-'}</td>\n                      <td className=\"list-action d-flex \">\n                    \n                      <VisibilityIcon onClick={()=>handleView(dataset)} />\n                      <EditIcon className=\"mx-2\" onClick={()=> EditModal(dataset)}/> \n                     <DeleteIcon onClick={()=>{DeletModalOpen(dataset)}}/>\n                   \n                    </td>\n                    </tr>\n                  )\n                })\n              }\n\n            </tbody>\n\n          </table>\n          {filteredDatasets.length == 0 && <center style={{ color: \"black\" }}>  Data not available </center>}\n          {\n            datasets?.length > 0 &&\n            <div className='paginationDiv'>\n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={5}\n                pageRangeDisplayed={5}\n                onChange={(e) => handlePageChange(e)}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                hideFirstLastPages={true}\n                totalItemsCount={totalPageCount}\n              />\n            </div>\n          }\n        </div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n\n      <EditDataset selected={selected} Modalopen={openEditDataset} close={()=>setOpenEditDataset(false)} reloadlist={getViewProjectData}/>\n\n\n      {/* Modal for Add New Customer */}\n      {/* <Modal\n        isOpen={addNewUserModal}\n        // toggle={() => onAddUpdateUserModalClose()}\n        className=\"addCustomerModal \"\n\n      >\n        <ModalHeader \n        // toggle={() => onAddUpdateUserModalClose()}\n        >\n          <strong>Welcome</strong>\n        </ModalHeader>\n        <ModalBody>\n          <FormGroup row >\n\n\n            <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n              <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n\n                <span> Username <span className=\"text-danger madatory-field\">*</span></span>\n              </Label>\n              <Input\n                type=\"text\"\n                className=\"input-md\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                sm={10}\n              />\n            </Col>\n\n\n          </FormGroup>\n          <FormGroup row >\n\n\n            <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n              <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n\n                <span> Email Id <span className=\"text-danger madatory-field\">*</span></span>\n              </Label>\n              <Input\n                type=\"text\"\n                className=\"input-md\" \n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                sm={10}\n              />\n            </Col>\n\n\n          </FormGroup>\n        </ModalBody>\n        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n\n          <Button variant=\"contained\" color=\"primary\"\n          // onClick={() => addNewUser()} \n          className=\"py-2 mx-10\" style={{ color: \"#fff\", }} >\n            Send\n          </Button>\n          <Button variant=\"contained\"\n          // onClick={() => onAddUpdateUserModalClose()} \n          className=\"py-2 px-3 bg-danger text-white mx-10\" style={{ cursor: \"pointer\" }}>\n            Cancel\n          </Button>\n        </div>\n      </Modal> */}\n\n\n\n\n      {/* <Modal\n        isOpen={deleteUserModal}\n        className=\"addCustomerModal\"\n      >\n        <ModalBody>\n          Are you sure want to delete {selectedUser?.username} ?\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            // color=\"primary\"\n            style={{ backgroundColor: \"#0b3d45\", color: \"#fff\", borderRadius: \"6px\" }}\n            className=\"text-white\"\n          //  onClick={handleDeleteUser}\n          >\n            Delete\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            className=\"text-white btn-secondary\"\n            onClick={() => setdeleteUserModal(false)}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal> */}\n    </div>\n  )\n}\n","import React, { useEffect,useState } from 'react';\nimport { useHistory } from 'react-router';\n\n\nconst CustomBreadcrumbs = ({ currentPage, data =[] ,props}) => {\n\nconst [navData,setNavData]=useState(data)\n\n\nuseEffect(()=>{\n\n},[])\n\n  const history = useHistory();\n      console.log(data,\"daaata..\")\n  \n  const HandleNavigate = async (item,index)=>{\n    // const Data = [...navData]\n    let myarray=[]\n    // console.log(index,\"Data=\",Data)\n\n\n     for (let i = 0; i < index; i++) {\n       \n      myarray.push(data[i])\n     }\nconsole.log(myarray,\"myarray\")\n    \n    history.push(item.url,{breadcrumbData:myarray})\n  }\n\n  return (\n    <div className=\"page-title d-flex  align-items-center\">\n      {data != undefined  && data.length > 0 &&data.map((item, index) => (\n        <div key={index} className=\"page-title-wrap  d-flex  align-items-center mr-1\">\n          \n        <i className=\"ti-angle-left text-dark  custombredcrum-icon\"></i> <span onClick={()=>HandleNavigate(item,index)} className=\"globalFontFamily custombredcrum-heding\">{item.name}</span>\n         \n        </div>\n      ))}\n      <div className=\"page-title-wrap   d-flex  align-items-center text-white m-0\"><i className=\"ti-angle-left  text-white custombredcrum-icon\"></i><span className=\"globalFontFamily custombredcrum-heding\">{currentPage}</span></div>\n    </div>\n  );\n};\n\nexport default CustomBreadcrumbs;\n","// Get Formatted Time\nexport const getFormatTime=(date)=>{\n    let Sort= date.toString().replace(/T/, ' ').replace(/\\..+/, '').split(\" \")   \n   var time =Sort[1].toString()\n  \n      function tConvert (time) {\n       // Check correct time format and split into components\n          time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n       if (time.length > 1) { \n         time = time.slice (1);\n        time[5] = +time[0] < 12 ? 'AM' : 'PM'; \n         time[0] = +time[0] % 12 || 12; \n           time.splice(3, 1,\" \"); \n       }\n         return time.join (''); \n      }\n       return tConvert(time)\n  } \n\n  // Get Formatted Date\n  export const getFormatDate=(date)=>{\n      if(date){\n        let Sort= date.toString().replace(/T/, ' ').replace(/\\..+/, '').split(\" \")   \n        const months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n        const d = new Date(Sort[0]);\n         let month = months[d.getMonth()];\n         let year= d.getFullYear();\n         let date2=d.getDate()\n        return date2+\" \"+month+\" \"+year\n      }else{\n          return \"\"\n      }\n  \n } \n \n export const getFormatDate2=(date)=>{\n    if(date){\n      let Sort= date.toString().replace(/T/, ' ').replace(/\\..+/, '').split(\" \")   \n      return Sort[0]\n    \n    }else{\n        return \"\"\n    }\n\n} \n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { EditProjectDetails, UpadatDataset } from 'Api';\n\nconst EditDataset = ({ selected, Modalopen, close,reloadlist }) => {\n    const [open, setOpen] = useState(false)\n    console.log(selected)\n    const [datasetName, setDatasetName] = useState( \"\")\n    const [comment, setComment] = useState(\"\")\n    \n    \n\n\n    useEffect(() => {\n       if(selected){\n        setDatasetName(selected?.dataset_name || \"\")\n        setComment(selected?.comment)\n       }\n\n        console.log(datasetName,comment,\">>>>>.>>>\")\n        //  setImage(item?.project_image)\n        setOpen(Modalopen)\n\n    }, [Modalopen])\n\n\n\n\n   \n    const SaveEditDetails = () => {\n      \n            const accessToken = JSON.parse(localStorage.getItem('token'))\n           if(datasetName != \"\" || comment != \"\"){\n\n               if (accessToken !== null) {\n                   UpadatDataset(accessToken,selected?.id,datasetName,comment)\n                       .then((res) => {\n                           if (res?.status === 200) {\n                            if(reloadlist){\n                               reloadlist()\n                               setOpen(false)\n                               setDatasetName(\"\")\n                               setComment(\"\")\n                              \n                                if(close){\n                                   close()\n                                   }\n                                   NotificationManager.success(\" Datset update suceesfull !\") \n                            }\n                               console.log('Response from update dataset  :', res)\n                           } else {\n                               // console.log('Response from customerlist:', res)\n   \n                               NotificationManager.error(\"Dataset details update failed!\")\n                           }\n                       })\n                       .catch((err) => {\n                           console.log('Response from Upadat datasett:', err)\n                       })\n               }\n           }else{\n            NotificationManager.error(\"All field is empty\")\n           }\n\n    }\n\n\n    return (\n        <Dialog\n            onClose={() => (close(false), setOpen(false))}\n            open={open}\n\n        >\n            <DialogContent style={{ margin: 0, padding: 0 }}>\n                <div className=\"user-profile-widget\">\n                \n                    <div className=\"p-20\">\n                    \n                    <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={(e)=>setDatasetName(e.target.value)}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {(e)=>{setComment(e.target.value)}}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\"  className=\"mx-2 d-flex justify-content-center align-items-center px-3\" onClick={SaveEditDetails}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\"   className=\"mx-2 d-flex justify-content-center align-items-center\"  onClick={() => (close(false), setOpen(false))}>Cancel</Button>\n                               \n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default EditDataset\n"],"sourceRoot":""}