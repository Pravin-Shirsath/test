{"version":3,"sources":["Routes/users/user-profile-1/component/UserBlock.js","Routes/users/user-profile-1/index.js"],"names":["UserBlock","useState","profileData","setProfileData","useEffect","getProfileInfo","accessToken","JSON","parse","localStorage","getItem","console","log","profileInfo","then","res","status","data","catch","err","className","src","process","alt","width","height","first_name","last_name","username","email","UserProfile","props","firstName","setFirstName","lastName","setLastName","setEmail","mobile_number","phone","setPhone","country","setCountry","zipCode","setZipCode","state","setState","companyName","setCompanyName","billingAddress","setBillingAddress","taxNumber","setTaxNumber","companyAddress","setCompanyAddress","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","phoneError","setPhoneError","countryError","zipCodeError","stateError","companyNameError","setCompanyNameError","billingAddressError","setBillingAddressError","taxNumberError","setTaxNumberError","companyAddressError","show","setShow","useHistory","ProfileApiCall","NotificationManager","success","error","Helmet","name","content","PageTitleBar","title","IntlMessages","id","match","RctCard","Form","FormGroup","row","Col","sm","Label","for","Input","type","value","onChange","e","target","classes","style","fontSize","val","placeholder","defaultCountry","limitMaxLength","Button","color","variant","size","onClick","regexName","trim","undefined","test","isValidPhoneNumber","maxWidth"],"mappings":"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","file":"static/js/232.83fbd480.chunk.js","sourcesContent":["/**\n * User Block\n */\nimport React,{useEffect,useState} from 'react';\nimport { profileInfo } from '../../../../Api/index';\n\nfunction UserBlock(){\n   const [profileData, setProfileData] = useState();\n\n   useEffect(() => {\n      getProfileInfo();\n    }, [])\n   \n    const getProfileInfo =  () => {\n      const accessToken = JSON.parse(localStorage.getItem('token'));\n      console.log(\"Token\",accessToken)\n      if(accessToken !== null) {\n         profileInfo(accessToken)\n         .then(res => {      \n            if (res?.status === 200) {\n               setProfileData(res?.data);\n               console.log(\"Profile Info ResponseData\", res?.data)     \n           } else if(res?.status === 400) { \n            console.log(\"Profile Info Response\", res)    \n           }\n           else {\n            console.log(\"Profile Info Response\", res)    \n           }\n     \n   \n         }) .catch(err => {\n            console.log(err);\n          });\n   \n      }\n    }\n\n   return (\n      \n        \n            <div className=\"profile-content\">\n               <div className=\"media align-items-center\">\n               <img src={`${process.env.PUBLIC_URL}/assets/images/avatars/user-15.jpg`} alt=\"user profile\" className=\"rounded-circle bordered\" width=\"140\" height=\"140\" />\n                  <div className=\"media-body pt-25\">\n                        <div className=\"d-flex flex-column align-items-baseline\">\n                           <h2 className=\"user-name text-white\">{profileData?.first_name} {profileData?.last_name}</h2>\n                           <h2>{profileData?.username}</h2>\n                           <p>{profileData?.email}</p>\n                        </div>\n                  </div>\n               </div>\n            </div>\n   \n   );\n}\n\nexport default UserBlock;\n","/**\n * User Profile Page\n */\nimport React, { useState, useEffect } from 'react'\n\nimport { Helmet } from 'react-helmet'\n\nimport UserBlock from './component/UserBlock'\nimport { Form, FormGroup, Input, Label, Col } from 'reactstrap'\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications';\nimport 'react-phone-number-input/style.css'\nimport PhoneInput,{parsePhoneNumber,isValidPhoneNumber} from 'react-phone-number-input'\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n// rct card box\nimport { RctCard } from 'Components/RctCard'\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar'\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages'\nimport '../../../Assets/css/main.css'\nimport { updateProfileInfo } from '../../../Api/index'\nimport Button from '@material-ui/core/Button'\n\nexport default function UserProfile(props) {\n\n\n  const [firstName, setFirstName] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).first_name);\n  const [lastName, setLastName] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).last_name);\n  const [email, setEmail] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).email);\n  const [phone, setPhone] = useState(JSON.parse(localStorage.getItem(\"ProfileData\")).mobile_number);\n\n  const [country, setCountry] = useState(\"\")\n  const [zipCode, setZipCode] = useState(\"\")\n  const [state, setState] = useState(\"\")\n  const [companyName, setCompanyName] = useState(\"\")\n  const [billingAddress, setBillingAddress] = useState(\"\")\n  const [taxNumber, setTaxNumber] = useState(\"\")\n  const [companyAddress, setCompanyAddress] = useState(\"\")\n  \n\n  const [firstNameError, setFirstNameError] = useState('')\n  const [lastNameError, setLastNameError] = useState('')\n  const [emailError, setEmailError] = useState('')\n  const [phoneError, setPhoneError] = useState('')\n\n  const [countryError, setCountryError] = useState(\"\")\n  const [zipCodeError, setZipCodeError] = useState(\"\")\n  const [stateError, setStateError] = useState(\"\")\n  const [companyNameError, setCompanyNameError] = useState(\"\")\n  const [billingAddressError, setBillingAddressError] = useState(\"\")\n  const [taxNumberError, setTaxNumberError] = useState(\"\")\n  const [companyAddressError, setCompanyAddressError] = useState(\"\")\n\n  const [show, setShow] = useState(false)\n  const history = useHistory();\n  console.log({\n    \"firstName:\": firstName, \"lastName:\": lastName, \"email\": email, \"phone\": phone, \"country\": country, \"zipCode:\": zipCode, \"state:\": state, \"companyName:\": companyName,\n    \"billingAddress:\": billingAddress, \"taxNumber:\": taxNumber, \"companyAddress:\": companyAddress\n  }\n  )\n  //==================== MY update profile ====================//\n\nconst ProfileApiCall=()=>{  \n  const accessToken = JSON.parse(localStorage.getItem('token'))\n\n    if (accessToken !== null) {\n\n      NotificationManager.success('Profile Updated Successfully!');\n\n  // updateProfileInfo(firstName, lastName, email.toLowerCase(), phone, accessToken)\n  //   .then((res) => {\n  //     if (res?.status === 200) {\n  //       console.log('Response from update profile:', res)\n  //       setShow(false)\n  //       setFirstNameError('')\n  //       setLastNameError('')\n  //       setEmailError('')\n  //       setPhoneError('')\n  //       setCompanyNameError(\"\")\n  //       setTaxNumberError(\"\")\n  //       setBillingAddressError(\"\")\n\n  //       setFirstName('')\n  //       setLastName('')\n  //       setPhone('')\n  //       setEmail('')\n\n  //       setCountry('')\n  //       setZipCode('')\n  //       setState('')\n  //       setCompanyName('')\n  //       setBillingAddress('')\n  //       setTaxNumber('')\n  //       setCompanyAddress('')\n  //       NotificationManager.success('Profile Updated Successfully!');\n  //       history.push('/app/dashboard/saas');\n  //       window.location.reload();\n  //     }\n  //   })\n  //   .catch((err) => {\n   \n  //     console.log('Update profile error :', err?.response)\n  //     console.log(err?.response?.data, \"error data from user profile\");\n  //     if (err?.response?.status === 400) {\n  //       NotificationManager.error(err?.response?.data?.email?.[0]);\n  //     }\n  //   })\n}else{\n  NotificationManager.error(\"accessToken not found\");\n}\n\n}\n\n\n  const updateProfile = () => {\n    const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const phoneRegex = /^\\d{10}$/;  // /^[6789]\\d{9}$/ (previous rule)\n    const regexName = /^[a-zA-Z]{1,30}$/; // only alpha, no space, min-1, max-30\n    const TaxnumberRegex=/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$/\n    const  isValidZip = /^[1-9][0-9]{5}$/\n    if (email.trim() !== '' && (phone !== null || phone !== undefined) && firstName.trim() !== '' && lastName.trim() !== '' && companyName.trim() !== '' && billingAddress.trim() !== '' && taxNumber.trim() !== '') {\n      setShow(false)\n      setFirstNameError('')\n      setLastNameError('')\n      setEmailError('')\n      setPhoneError('')\n      \n      setCompanyNameError(\"\")\n      setTaxNumberError(\"\")\n      setBillingAddressError(\"\")\n     \n     \n      // const phoneNumbervalidation = parsePhoneNumber(phone+\"\")\n \n\n      if (regexName.test(firstName.trim())) {\n        if (regexName.test(lastName.trim())) {\n         \n          if ((isValidPhoneNumber(phone+\"\".trim(\"\")))) {\n            \n            if (emailRegex.test(email.trim(\"\"))) {\n             if(TaxnumberRegex.test(taxNumber+\"\".trim(\"\"))){\n             \n              if(zipCode != \"\"){\n                if(isValidZip.test(zipCode.trim(\"\"))){\n                NotificationManager.error(\"Invalid Zip-Code format!\");\n\n                }else{\n                  ProfileApiCall()\n                }\n              }else{\n                ProfileApiCall()\n              }\n          \n             }else{\n              NotificationManager.error(\"Invalid Tax format!\");\n             }\n              \n            \n            \n            } else {\n              NotificationManager.error(\"Invalid email format!\");\n            }\n          } else {\n            NotificationManager.error(\"Phone number must be 10 digit long!\");\n          }\n        } else {\n          NotificationManager.error('Last name must contain only alphabet and no spacings!');\n        }\n      } else {\n        NotificationManager.error('First name must contain only alphabet and no spacings!');\n      }\n    } else {\n      setFirstNameError('')\n      setLastNameError('')\n      setEmailError('')\n      setPhoneError('')\n      \n      setCompanyNameError(\"\")\n      setTaxNumberError(\"\")\n      setBillingAddressError(\"\")\n      \n    if (email.trim() == ''){\n      setEmailError('* This is required Field')\n\n    } \n    if(firstName.trim() == '' ){\n      setFirstNameError('* This is required Field')\n    }\n     if(lastName.trim() == ''){\n      setLastNameError('* This is required Field')\n    }\n     if(companyName.trim() == ''){\n      setCompanyNameError(\"* This is required Field\")\n\n    }\n     if(billingAddress.trim() == ''){\n      setBillingAddressError(\"* This is required Field\")\n\n    }\n    \n    if(taxNumber.trim() == ''){\n      setTaxNumberError(\"* This is required Field\")\n\n    }\n      if(phone == null ){\n\n        setPhoneError('* This is required Field')\n      }\n      \n     \n      \n      setShow(true)\n    }\n  }\n\n\n  return (\n    <div className=\"userProfile-wrapper\">\n      <Helmet>\n        <title>Automaton | User Profile</title>\n        <meta name=\"description\" content=\"User Profile\" />\n      </Helmet>\n      <PageTitleBar\n        title={<IntlMessages id=\"sidebar.userProfile\" />}\n        match={props.match}\n      />\n      <RctCard data-bs-spy=\"scroll\">\n        <UserBlock />\n\n        <Form className=\"border\">\n          <section className=\"border border-5 py-10 d-flex align-item-center justify-content-center bg-dark text-white\">\n            <h2>Personal Details</h2>\n          </section>\n          <div className=\"edit-form\">\n\n            <FormGroup row >\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"firstName\" sm={3} className=\"d-flex\">\n                    First Name\n                  </Label>\n                  <span className=\"text-danger\">*</span>\n                  <Input\n                    type=\"text\"\n                    name=\"firstname\"\n                    className=\"input-lg\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{firstNameError}</p>}\n                </div>\n              </Col>\n\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"lastName\" sm={3} className=\"d-flex\">\n                    Last Name\n                  </Label>\n                  <span className=\"text-danger\">*</span>\n                  <Input\n                    type=\"text\"\n                    name=\"lastName\"\n                    className=\"input-lg\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{lastNameError}</p>}\n                </div>\n              </Col>\n            </FormGroup>\n\n\n\n\n            <FormGroup row>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"email\" sm={3} className=\"d-flex\">\n                    Email Id\n                  </Label>\n                  <span className=\"text-danger\">*</span>\n                  <Input\n                    type=\"text\"\n                    name=\"email\"\n                    className=\"input-lg\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{emailError}</p>}\n                </div>\n              </Col>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"state\" sm={3}>\n                    State\n                  </Label>\n                  <RegionDropdown\n                    classes=\"w-100 form-control form-control-lg\"\n                    style={{ fontSize: '19px', type: \"text\" }}\n                    country={country}\n                    value={state}\n                    onChange={(val) => (setState(val), console.log(val))} />\n                  {/* <Input\n                    type=\"text\"\n                    name=\"state\"\n                    className=\"input-lg\"\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                    sm={9}\n                  /> */}\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{stateError}</p>}\n                </div>\n              </Col>\n\n            </FormGroup>\n\n            <FormGroup row>\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"country\" sm={3}>\n                    Country\n                  </Label>\n                  <CountryDropdown\n                    classes=\"w-100 form-control form-control-lg text-md\"\n                    value={country}\n                    onChange={(val) => (setCountry(val))}\n                    style={{ fontSize: '17px', type: \"text\" }}\n                  />\n\n\n\n                  {/* <Input\n                    type=\"text\"\n                    name=\"country\"\n                    className=\"input-lg\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                    sm={9}\n                  /> */}\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{countryError}</p>}\n                </div>\n              </Col>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"zipCode\" sm={3}>\n                    Zipcode\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"zipcode\"\n                    className=\"input-lg\"\n                    value={zipCode}\n                    onChange={(e) => setZipCode(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{zipCodeError}</p>}\n                </div>\n              </Col>\n\n            </FormGroup>\n\n            <FormGroup row>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"phone\" sm={3} className=\"d-flex\">\n                    Phone\n                  </Label>\n                  <span className=\"text-danger\">*</span>\n                  <PhoneInput\n                    placeholder=\"Enter phone number\"\n                    value={phone}\n                    onChange={(e) => setPhone(e)}\n                    defaultCountry={\"IN\"}\n                    className=\"w-100 form-control form-control-lg text-md\"\n                    // focusInputOnCountrySelection={false}\n\n\n                    limitMaxLength={true}\n\n\n                    sm={9}\n                  />\n                  {/* <Input\n                    type=\"number\"\n                    // placeholder=\"Enter phone number\"\n                    maxLength=\"10\"\n                    max={10}\n                    name=\"phone\"\n                    className=\"input-lg\"\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                    sm={9}\n                  /> */}\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{phoneError}</p>}\n                </div>\n              </Col>\n\n\n\n\n            </FormGroup>\n\n\n          </div>\n          <section className=\"border border-5 py-10 d-flex align-item-center justify-content-center bg-dark text-white\">\n            <h2>Company Details</h2>\n          </section>\n          <div className=\"edit-form\">\n\n            <FormGroup row >\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"companyName\" sm={3} className=\"d-flex\">\n                    Company Name\n                  </Label>\n                  <span className=\"text-danger\">*</span>\n                  <Input\n                    type=\"text\"\n                    name=\"companyName\"\n                    className=\"input-lg\"\n                    value={companyName}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{companyNameError}</p>}\n                </div>\n              </Col>\n\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"billingAddress\" sm={3} className=\"d-flex\">\n                    Billing Address\n                  </Label>\n                  <span className=\"text-danger\">*</span>\n                  <Input\n                    // type=\"text\"\n                    style={{ height: 120 }}\n                    type=\"textarea\"\n                    name=\"billingAddress\"\n                    className=\"input-lg\"\n                    value={billingAddress}\n                    onChange={(e) => setBillingAddress(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{billingAddressError}</p>}\n                </div>\n              </Col>\n            </FormGroup>\n\n\n\n\n            <FormGroup row>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"taxNumber\" sm={3} className=\"d-flex\">\n                    Tax Number\n                  </Label>\n                  <span className=\"text-danger\">*</span>\n                  <Input\n                    type=\"text\"\n                    name=\"taxNumber\"\n                    className=\"input-lg\"\n                    value={taxNumber}\n                    onChange={(e) => setTaxNumber(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{taxNumberError}</p>}\n                </div>\n              </Col>\n\n              <Col sm={6} >\n                <Col sm={12} className=\"d-flex \">\n                  <Label for=\"companyAddress\" sm={3}>\n                    company Address\n                  </Label>\n                  <Input\n                    // type=\"text\"\n                    type=\"textarea\"\n                    // rows={15}\n                    style={{ height: 120 }}\n                    name=\"companyAddress\"\n                    className=\"input-lg\"\n                    value={companyAddress}\n                    onChange={(e) => setCompanyAddress(e.target.value)}\n                    sm={9}\n                  />\n                </Col>\n                <div className=\"d-flex align-item-center justify-content-center\">\n\n                  {show && <p className=\"error mt-0\">{companyAddressError}</p>}\n                </div>\n              </Col>\n\n            </FormGroup>\n\n\n\n\n            <FormGroup className=\"row mt-50\">\n              <Col sm={6}>\n                <h4>   <span className=\"text-danger\">*</span> Compulsory Field</h4>\n              </Col>\n              <Col sm={6}>\n                <section className=\"row \" >\n\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      className=\"btn-block text-white px-50 fw-bold bg-primary.bg-gradient\"\n                      variant=\"contained\"\n                      size=\"medium\"\n                       onClick={updateProfile}\n                      style={{ maxWidth: \"150px\" }}\n                    >\n                      Save\n                    </Button>\n\n                  </Col>\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      className=\"btn-block px-50 py-2 text-white fw-bold btn-danger\"\n                      variant=\"contained\"\n                      size=\"medium\"\n                      // onClick={()=>{ history.push(\"/signin\")}}\n                      style={{ maxWidth: \"150px\" }}\n                    >\n                      Cancel\n                    </Button>\n                  </Col>\n\n                </section>\n\n\n              </Col>\n\n\n\n\n\n\n            </FormGroup>\n          </div>\n        </Form>\n      </RctCard>\n    </div>\n  )\n}\n"],"sourceRoot":""}