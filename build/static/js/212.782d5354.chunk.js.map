{"version":3,"sources":["Routes/drag-drop/react-dnd/index.js"],"names":["getItems","count","Array","from","length","v","k","map","id","content","reorder","list","startIndex","endIndex","result","splice","removed","getItemStyle","isDragging","draggableStyle","getListStyle","isDraggingOver","ReactDND","props","useState","items","setItems","className","title","match","heading","onDragEnd","destination","newItems","source","index","droppableId","provided","snapshot","ref","innerRef","style","item","draggableId","draggableProps","dragHandleProps","placeholder"],"mappings":"2NAYMA,EAAW,SAAAC,GAAK,OACrBC,MAAMC,KAAK,CAAEC,OAAQH,IAAS,SAACI,EAAGC,GAAC,OAAKA,CAAC,IAAEC,KAAI,SAAAD,GAAC,MAAK,CACpDE,GAAG,0BAAD,OAA4BF,GAC9BG,QAAQ,0BAAD,OAA4BH,GACnC,GAAG,EAECI,EAAU,SAACC,EAAMC,EAAYC,GAClC,IAAMC,EAASZ,MAAMC,KAAKQ,GAC1B,EAAkBG,EAAOC,OAAOH,EAAY,GAArCI,EAAuC,iBAAhC,GAEd,OADAF,EAAOC,OAAOF,EAAU,EAAGG,GACpBF,CACR,EAEMG,EAAe,SAACC,EAAYC,GAAc,sBAC5CA,EAAc,EAEZC,EAAe,SAAAC,GAAc,MAAK,CAExC,CAAC,EAEc,SAASC,EAASC,GAC9B,MAAyBC,mBAASxB,EAAS,KAAI,mBAAxCyB,EAAK,KAACC,EAAQ,KAkBrB,OACG,sBAAKC,UAAU,kBAAiB,UAC7B,cAAC,IAAY,CAACC,MAAO,cAAC,IAAY,CAACpB,GAAG,qBAAuBqB,MAAON,EAAMM,QAC1E,cAAC,IAAkB,CAACC,QAAQ,YAAW,SACpC,cAAC,IAAe,CAACC,UApBV,SAACjB,GAElB,GAAKA,EAAOkB,YAAZ,CAIA,IAAMC,EAAWvB,EACVe,EACNX,EAAOoB,OAAOC,MACdrB,EAAOkB,YAAYG,OAEhBT,EAASO,EAPT,CAQL,EAQiD,SACnC,cAAC,IAAS,CAACG,YAAY,YAAW,SAC9B,SAACC,EAAUC,GAAQ,OACjB,qBAAIX,UAAU,6CAA6CY,IAAKF,EAASG,SAAUC,MAAOrB,EAAakB,EAASjB,gBAAgB,UAC5HI,GAASA,EAAMlB,KAAI,SAACmC,EAAMP,GAAK,OAC7B,cAAC,IAAS,CAAeQ,YAAaD,EAAKlC,GAAI2B,MAAOA,EAAM,SACxD,SAACE,EAAUC,GAAQ,OACjB,qBAAIX,UAAU,kBAAiB,UAC5B,yDACGY,IAAKF,EAASG,UACVH,EAASO,gBACTP,EAASQ,iBAAe,IAC5BlB,UAAU,YACVc,MAAOxB,EACJqB,EAASpB,WACTmB,EAASO,eAAeH,OACzB,SACDC,EAAKjC,WAER4B,EAASS,cACR,GAfKJ,EAAKlC,GAiBT,IAEd6B,EAASS,cACR,UAO1B,C","file":"static/js/212.782d5354.chunk.js","sourcesContent":["/**\n * React Dnd\n */\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n// fake data generator\nconst getItems = count =>\n\tArray.from({ length: count }, (v, k) => k).map(k => ({\n\t\tid: `This is draggable item ${k}`,\n\t\tcontent: `This is draggable item ${k}`,\n\t}));\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n\treturn result;\n};\n// const grid = 8;\nconst getItemStyle = (isDragging, draggableStyle) => ({\n\t...draggableStyle,\n});\nconst getListStyle = isDraggingOver => ({\n\n});\n\nexport default function ReactDND(props) {\n   const [items,setItems] = useState(getItems(10));\n\n\tconst onDragEnd = (result) => {\n\t\t// dropped outside the list\n\t\tif (!result.destination) {\n\t\t\treturn;\n      }\n      \n\t\tconst newItems = reorder(\n         items,\n\t\t\tresult.source.index,\n\t\t\tresult.destination.index\n      );\n      setItems(newItems);\n\t}\n\n\t// Normally you would want to split things out into separate components.\n\t// But in this example everything is just done in one place for simplicity\n   return (\n      <div className=\"dragula-wrapper\">\n         <PageTitleBar title={<IntlMessages id=\"sidebar.reactDnd\" />} match={props.match} />\n         <RctCollapsibleCard heading=\"React DND\">\n            <DragDropContext onDragEnd={onDragEnd}>\n               <Droppable droppableId=\"droppable\">\n                  {(provided, snapshot) => (\n                     <ul className=\"list-unstyled list-group drag-list-wrapper\" ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                        {items && items.map((item, index) => (\n                           <Draggable key={item.id} draggableId={item.id} index={index}>\n                              {(provided, snapshot) => (\n                                 <li className=\"list-group-item\">\n                                    <div\n                                       ref={provided.innerRef}\n                                       {...provided.draggableProps}\n                                       {...provided.dragHandleProps}\n                                       className=\"drag-list\"\n                                       style={getItemStyle(\n                                          snapshot.isDragging,\n                                          provided.draggableProps.style\n                                       )}>\n                                       {item.content}\n                                    </div>\n                                    {provided.placeholder}\n                                 </li>\n                              )}\n                           </Draggable>\n                        ))}\n                        {provided.placeholder}\n                     </ul>\n                  )}\n               </Droppable>\n            </DragDropContext>\n         </RctCollapsibleCard>\n      </div>\n   )\n}\n"],"sourceRoot":""}