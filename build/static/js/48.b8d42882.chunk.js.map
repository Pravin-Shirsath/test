{"version":3,"sources":["Routes/dashboard/CreateTask/index.js","Routes/dashboard/ReuseComponent/CustomBreadcrumbs.js","Components/DeleteConfirmationDialog/DeleteConfirmationDialog.js","Routes/dashboard/ReuseComponent/EditDataset.js"],"names":["ViewDataset","props","history","useHistory","location","useState","searchText","setSearchText","JSON","parse","localStorage","getItem","Taskid","setTaskId","loading","deleteConfirmationDialog","useRef","activePage","setActivePage","totalPageCount","setTotalPageCount","taskFile","setTaskFile","filteredTaskFiles","setFilteredTaskFiles","selectedFiles","modalOpen","setModalOpen","perpagecount","start","end","pagination","setPagination","useEffect","TID","getTaskFile","files","state","data","length","currencies","value","label","className","AppConfig","brandName","name","content","currentPage","breadcrumbData","title","message","ref","fullBlock","style","justifyContent","type","placeholder","border","borderBottom","onChange","e","target","variant","color","cursor","onClick","filtered","filter","file","file_name","toLowerCase","includes","slice","map","ind","console","log","file_type","href","filterarray","item","id","NotificationManager","success","handleFileSelect","itemsCountPerPage","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","authToken","TaskId","IdArray","AddFileToTask","then","res","status","catch","error","isOpen","size","centered","row","for","sm","select","defaultValue","option","push","url","CustomBreadcrumbs","HandleNavigate","index","myarray","i","undefined","DeleteConfirmationDialog","open","this","setState","onConfirm","onClose","close","maxWidth","autoFocus","Component","EditDataset","selected","Modalopen","reloadlist","setOpen","datasetName","setDatasetName","comment","setComment","dataset_name","margin","padding","marginTop","height","marginBottom","accessToken","UpadatDataset","err"],"mappings":"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","file":"static/js/48.b8d42882.chunk.js","sourcesContent":["// createTask ka index.js file\n\n// import \"../ViewDataset/viewdataset.css\"\nimport \"./createtask.css\"\n\n/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Button from '@material-ui/core/Button'\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Col\n} from 'reactstrap'\nimport Pagination from \"react-js-pagination\";\n\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications'\n// delete confirmation dialog\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport {\n  AddFileToTask,\n} from '../../../Api/'\n\nimport FolderIcon from '@mui/icons-material/Folder';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport ImageIcon from '@mui/icons-material/Image';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport CheckIcon from '@mui/icons-material/Check';\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\nimport CloseIcon from '@mui/icons-material/Close';\nimport EditDataset from '../ReuseComponent/EditDataset';\nimport CustomBreadcrumbs from \"../ReuseComponent/CustomBreadcrumbs\";\nimport TextField from '@mui/material/TextField';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport AppConfig from \"Constants/AppConfig\"\nexport default function ViewDataset(props) {\n  const history = useHistory();\n  const { location } = props\n\n  const [searchText, setSearchText] = useState('');\n  const [Taskid, setTaskId] = useState(JSON.parse(localStorage.getItem(\"TaskId\")))\n\n  const [loading, setLoading] = useState(false)\n\n\n  const deleteConfirmationDialog = useRef()\n  const [selected, setSelectedItem] = useState({})\n    ;\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState(0);\n  const [taskFile, setTaskFile] = useState([]);\n  const [filteredTaskFiles, setFilteredTaskFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [searchResult,setSearchResult]=useState([])\n  const [perpagecount, setPerpagecount] = useState(6);\n  const [pagination, setPagination] = useState({\n    start: 0,\n    end: perpagecount\n  });\n\n  useEffect(() => {\n\n    const TID = JSON.parse(localStorage.getItem(\"TaskId\"))\n\n    setTaskId(TID)\n    getTaskFile()\n    // }\n  }, [])\n\n\n  const getTaskFile = () => {\n    let files = location?.state.files\n    setTaskFile(files?.data || [])\n    setFilteredTaskFiles(files?.data || [])\n    setTotalPageCount((files?.data || []).length);\n   \n  }\n\n\n  const searchFile=( )=>{\n    if(searchText != \"\"){\n      const filtered = taskFile.filter(file => {\n     return file.file_name.toLowerCase().includes(searchText+\"\".toLowerCase());\n \n    });\n\n   \n    setActivePage(1)\n    setPagination({\n      start: 0,\n      end: perpagecount\n    })\n    setFilteredTaskFiles(filtered)\n    setTotalPageCount(filtered?.length)\n\n    }\n}\n\n\n\n  const handlePageChange = (pageNumber) => {\n\n    if (activePage !== pageNumber) {\n\n      const value = perpagecount * pageNumber\n          setTotalPageCount(taskFile.length)\n\n           setPagination({\n                   start: value - perpagecount,\n                     end: value\n                   }\n                  )\n\n          setActivePage(pageNumber)\n    }\n  }\n\n  const handleFileSelect = (file) => {\n\n    const filterarray = taskFile.filter((item) => {\n      return item.id !== file.id\n    })\n   \n    setFilteredTaskFiles(filterarray)\n    setTaskFile(filterarray)\n    setTotalPageCount(filterarray.length)\n     NotificationManager.success(\"Removed file !\")\n    \n  }\n\n\n  const Proceed = () => {\n    const authToken = JSON?.parse(localStorage.getItem(\"token\"));\n    const TaskId = localStorage.getItem(\"TaskId\")\n\n    if (filteredTaskFiles.length > 0) {\n      const IdArray = filteredTaskFiles.map(item => item.id)\n      if (authToken !== null) {\n        // console.log(authToken, TaskId, IdArray, \"authToken, DatasetId, IdArray\")\n        AddFileToTask(authToken, TaskId, IdArray)\n          .then(res => {\n            if (res?.status == 200) {\n              console.log(\"res=\", res)\n              if (res?.data?.message) {\n\n                NotificationManager.success(res?.data?.message)\n                setModalOpen(true)\n              }\n            }\n          }).catch((error) => {\n            console.log(\"searchFileerror=\", error)\n          })\n      }\n\n    } else {\n      NotificationManager.error(\"Files is not available\")\n\n    }\n\n  }\n\n  const currencies = [\n    {\n      value: 'USD',\n      label: '',\n    },\n    {\n      value: 'EUR',\n      label: 'select',\n    },\n    {\n      value: 'BTC',\n      label: 'select',\n    },\n    {\n      value: 'JPY',\n      label: 'ffg',\n    },\n  ];\n\n\n  const yesSubmit = () => {\n\n    const breadcrumbData = location?.state?.breadcrumbData || []\n    breadcrumbData.push({ name: 'Create Task', url: '/app/dashboard/createTask' });\n    setModalOpen(false)\n    history.push(\"/app/dashboard/listOfTask\", { breadcrumbData: breadcrumbData, files: { \"count\": 1, data: selectedFiles } });\n  }\n\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>{AppConfig.brandName} | Customers List</title>\n        <meta name=\"description\" content={`${AppConfig.brandName} Widgets`} />\n      </Helmet>\n\n      <CustomBreadcrumbs currentPage={\"Create Task\"} data={location?.state?.breadcrumbData} />\n      \n      <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n        message=\"This will delete your Dataset permanently.\"\n        //  onConfirm={() => Delete_Datset()}\n        ref={deleteConfirmationDialog} />\n      <RctCollapsibleCard fullBlock>\n\n        <div className=\"table-responsive\">\n          <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n            <div className='search-row'>\n              <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n              <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }}\n              onClick={searchFile}\n              >Search</Button>\n            </div>\n\n\n          </div>\n          <div className=\"d-flex align-items-center justify-content-center\">\n            <p className=\"Comman-Heading\">Task-{Taskid}</p>\n          </div>\n\n          <div className='createTaskFilesContainer'>\n            {\n              filteredTaskFiles && filteredTaskFiles.slice(pagination.start, pagination.end).map((file, ind) => {\n                console.log(file)\n                return (\n                  // <div className=\"mainBox\" key={ind} onClick={()=>handleFileSelect(file)}>\n                  <div className=\"mainBox\" key={ind}>\n                    <div className=\"imageContainer\">\n                      {/* {\n                                      file.selectedFile ? <CheckBoxIcon className=\"folderIcon\" /> : (file.file_type == \"pdf\" ? <PictureAsPdfIcon className=\"folderIcon\" /> : (file.file_type == \"jpg\" || file.file_type == \"jpeg\" || file.file_type == \"png\" ? <ImageIcon className=\"folderIcon\" /> : (file.file_type == \"xlsx\" ? <DescriptionIcon className=\"folderIcon\" /> : <FolderIcon className=\"folderIcon\" />)))\n                                    } */}\n                      \n                      {\n                        file.file_type == \"pdf\" ? <a href={file?.file} target=\"_blank\"><PictureAsPdfIcon className=\"folderIcon\" /></a> \n                        : (file.file_type == \"jpg\" || file.file_type == \"jpeg\" || file.file_type == \"png\" ? <a href={file?.file} target=\"_blank\"><ImageIcon className=\"folderIcon\" /></a> \n                        : (file.file_type == \"xlsx\" ? <a href={file?.file} target=\"_blank\"><DescriptionIcon className=\"folderIcon\" /></a> \n                        : <a href={file?.file} target=\"_blank\"><InsertDriveFileIcon className=\"folderIcon\" /></a>))\n                      }\n\n                    </div>\n                    <div className=\"nameContainer\">\n                      <p>{file.file_name}</p>\n                    </div>\n\n                    <div className=\"checkDiv\" onClick={() => handleFileSelect(file)}>{\n                      <CloseIcon />\n                    }</div>\n\n                  </div>\n                )\n              })\n            }\n          </div>\n\n          {filteredTaskFiles.length == 0 && <center style={{ color: \"black\" }}> Data not available </center>}\n          {\n            taskFile?.length > 0 &&\n            <div className='paginationDiv'>\n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={6}\n                pageRangeDisplayed={5}\n                onChange={(e) => handlePageChange(e)}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                hideFirstLastPages={true}\n                totalItemsCount={totalPageCount}\n              />\n            </div>\n          }\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"text-white mx-5 mb-30\"\n            style={{ cursor: \"pointer\" }}\n            onClick={Proceed}>\n            Proceed\n          </Button></div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n\n\n\n      <Modal\n        isOpen={modalOpen}\n        size=\"lg\"\n        centered={true}\n\n      >\n        <div className=\"p-60\">\n\n          <center className=\" Comman-Heading\"> Starting The Task Accuracy </center>\n\n          <Form className=\"mt-50\" >\n            <FormGroup row>\n              <Label\n                for=\"exampleEmail\"\n                sm={3}\n                className=\"d-flex align-items-center justify-content-center\"\n              >\n                Select Out Put\n              </Label>\n              <Col sm={9}>\n                <TextField\n                  id=\"outlined-select-currency\"\n                  select\n                  label=\"Select\"\n                  defaultValue=\"EUR\"\n                // helperText=\"Please select your currency\"\n                >\n                  {currencies.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label\n                for=\"examplePassword\"\n                sm={3}\n                className=\"d-flex align-items-center justify-content-center\"\n              >\n                Orthomosic\n              </Label>\n              <Col sm={9}>\n                <TextField\n                  id=\"outlined-select-currency\"\n                  select\n                  label=\"Select\"\n                  defaultValue=\"EUR\"\n                // helperText=\"Please select your currency\"\n                >\n                  {currencies.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label\n                for=\"exampleSelect\"\n                sm={3}\n                className=\"d-flex align-items-center justify-content-center\"\n              >\n                Elevation Modal\n              </Label>\n              <Col sm={9}>\n                <TextField\n                  id=\"outlined-select-currency\"\n                  select\n                  label=\"Select\"\n                  defaultValue=\"EUR\"\n                // helperText=\"Please select your currency\"\n                >\n                  {currencies.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label\n                for=\"exampleSelect\"\n                sm={3}\n                className=\"d-flex align-items-center justify-content-center\"\n              >\n                3d Modal\n              </Label>\n              <Col sm={9}>\n                <TextField\n                  id=\"outlined-select-currency\"\n                  select\n                  label=\"Select\"\n                  defaultValue=\"EUR\"\n\n                // helperText=\"Please select your currency\"\n                >\n                  {currencies.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Col>\n            </FormGroup>\n\n          </Form>\n          <h4>Task Will Be Added To Execution Queue</h4>\n          <h4>Do You Want To Process These Image And Create The Task</h4>\n\n          <div className=\"d-flex align-items-end justify-content-end\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"text-white mx-5\"\n              style={{ cursor: \"pointer\" }}\n              onClick={yesSubmit}>\n              Yes\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              className=\"text-white mx-5 bg-danger\"\n              style={{ cursor: \"pointer\", color: \"red\" }}\n              onClick={() => setModalOpen(false)}>\n              No\n            </Button>\n          </div>\n        </div>\n      </Modal>\n\n\n\n\n\n\n      {/* <EditDataset selected={selected} Modalopen={openEditDataset} close={()=>setOpenEditDataset(false)} reloadlist={getTaskFile}/> */}\n    </div>\n  )\n}\n\n\n\n","import React, { useEffect,useState } from 'react';\nimport { useHistory } from 'react-router';\nimport \"./CustomBreadcrumbs.css\"\n\nconst CustomBreadcrumbs = ({ currentPage, data =[] ,props}) => {\n\nconst [navData,setNavData]=useState(data)\n\n\nuseEffect(()=>{\n\n},[])\n\n  const history = useHistory();\n      console.log(data,\"daaata..\")\n  \n  const HandleNavigate = async (item,index)=>{\n    // const Data = [...navData]\n    let myarray=[]\n    // console.log(index,\"Data=\",Data)\n\n\n     for (let i = 0; i < index; i++) {\n       \n      myarray.push(data[i])\n     }\nconsole.log(myarray,\"myarray\")\n    \n    history.push(item.url,{breadcrumbData:myarray})\n  }\n\n  return (\n    <div className=\"page-title d-flex  align-items-center\">\n      {data != undefined  && data.length > 0 &&data.map((item, index) => (\n        <div key={index} className=\"page-title-wrap  d-flex  align-items-center mr-1 bread-titile-box\" style={{cursor:\"pointer\"}}>\n          \n        <i className=\"ti-angle-left text-dark  custombredcrum-icon\"></i> <span onClick={()=>HandleNavigate(item,index)} className=\"globalFontFamily custombredcrum-heding\">{item.name}</span>\n         \n        </div>\n      ))}\n      <div className=\"page-title-wrap   d-flex  align-items-center text-white m-0\"  style={{cursor:\"pointer\"}}><i className=\"ti-angle-left  text-white custombredcrum-icon\"></i><span className=\"globalFontFamily custombredcrum-heding\">{currentPage}</span></div>\n    </div>\n  );\n};\n\nexport default CustomBreadcrumbs;\n","/**\n * Delete Confirmation Dialog\n */\nimport React, { Component } from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button} from '@material-ui/core';\n\nclass DeleteConfirmationDialog extends Component {\n\n   state = {\n      open: false\n   }\n\n   // open dialog\n   open() {\n      this.setState({ open: true });\n   }\n\n   // close dialog\n   close() {\n      this.setState({ open: false });\n   }\n\n   render() {\n      const { title, message, onConfirm } = this.props;\n      return (\n         <Dialog\n            open={this.state.open}\n            onClose={() => this.close()}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth=\"false\"\n         >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n               <DialogContentText id=\"alert-dialog-description\">\n                  {message}\n               </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n               <Button onClick={onConfirm} className=\"btn-primary text-white\" autoFocus>\n                  Yes\n               </Button>\n               <Button onClick={() => this.close()} className=\"btn-danger text-white\">\n                  Cancel\n               </Button>\n            </DialogActions>\n         </Dialog>\n      );\n   }\n}\n\nexport default DeleteConfirmationDialog;\n","import React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { EditProjectDetails, UpadatDataset } from 'Api';\n\nconst EditDataset = ({ selected, Modalopen, close,reloadlist }) => {\n    const [open, setOpen] = useState(false)\n    console.log(selected)\n    const [datasetName, setDatasetName] = useState( \"\")\n    const [comment, setComment] = useState(\"\")\n    \n    \n\n\n    useEffect(() => {\n       if(selected){\n        setDatasetName(selected?.dataset_name || \"\")\n        setComment(selected?.comment)\n       }\n\n        console.log(datasetName,comment,\">>>>>.>>>\")\n        //  setImage(item?.project_image)\n        setOpen(Modalopen)\n\n    }, [Modalopen])\n\n\n\n\n   \n    const SaveEditDetails = () => {\n      \n            const accessToken = JSON.parse(localStorage.getItem('token'))\n           if(datasetName != \"\" || comment != \"\"){\n\n               if (accessToken !== null) {\n                   UpadatDataset(accessToken,selected?.id,datasetName,comment)\n                       .then((res) => {\n                           if (res?.status === 200) {\n                            if(reloadlist){\n                               reloadlist()\n                               setOpen(false)\n                               setDatasetName(\"\")\n                               setComment(\"\")\n                              \n                                if(close){\n                                   close()\n                                   }\n                                   NotificationManager.success(\" Datset updated succesfully!\") \n                            }\n                               console.log('Response from update dataset  :', res)\n                           } else {\n                               // console.log('Response from customerlist:', res)\n   \n                               NotificationManager.error(\"Dataset details update failed!\")\n                           }\n                       })\n                       .catch((err) => {\n                           console.log('Response from Upadat dataset:', err)\n                       })\n               }\n           }else{\n            NotificationManager.error(\"All field is empty\")\n           }\n\n    }\n\n\n    return (\n        <Dialog\n            onClose={() => (close(false), setOpen(false))}\n            open={open}\n\n        >\n            <DialogContent style={{ margin: 0, padding: 0 }}>\n                <div className=\"user-profile-widget\">\n                \n                    <div className=\"p-20\">\n                    \n                    <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={(e)=>setDatasetName(e.target.value)}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {(e)=>{setComment(e.target.value)}}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\"  className=\"mx-2 d-flex justify-content-center align-items-center px-3\" onClick={SaveEditDetails}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\"   className=\"mx-2 d-flex justify-content-center align-items-center\"  onClick={() => (close(false), setOpen(false))}>Cancel</Button>\n                               \n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default EditDataset\n"],"sourceRoot":""}