{"version":3,"sources":["../node_modules/@material-ui/core/esm/Accordion/Accordion.js","../node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","../node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","Routes/pages/faq/components/SearchIdeas.js","Routes/pages/faq/index.js","../node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","../node_modules/@babel/runtime/helpers/esm/toArray.js"],"names":["Accordion","React","props","ref","childrenProp","children","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","expandedProp","expanded","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","name","state","_useControlled2","_slicedToArray","setExpandedState","handleChange","event","_React$Children$toArr","toArray","_React$Children$toArr2","_toArray","summary","slice","contextValue","toggle","Paper","_extends","clsx","root","rounded","AccordionContext","Provider","value","in","timeout","id","role","withStyles","theme","transition","duration","transitions","shortest","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","AccordionSummary","expandIcon","focusVisibleClassName","_props$IconButtonProp","IconButtonProps","onClick","_React$useContext","_React$useContext$dis","ButtonBase","focusRipple","disableRipple","component","focusVisible","focused","IconButton","edge","tabIndex","minHeight","padding","spacing","cursor","focus","disabledOpacity","flexGrow","transform","AccordionDetails","SearchIdeas","dispatch","useDispatch","feedback","useSelector","searchIdeaText","RctCollapsibleCard","customClasses","FormGroup","Input","type","e","updateSearchIdeas","target","onUpdateSearchIdeas","Button","variant","color","showFeedbackLoadingIndicator","setTimeout","onSearchIdeas","onSearchIdea","Faq","useState","faqs","setFaqs","useEffect","getFaqs","api","get","then","response","data","catch","error","Helmet","map","faq","key","title","arr"],"mappings":"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","file":"static/js/48.5d931b72.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the accordion will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused, &$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$IconButtonProp = props.IconButtonProps,\n      IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp,\n      onClick = props.onClick,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"IconButtonProps\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),\n    focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    // Guard against when generation of classes is disabled in the stylesheets (`disableGeneration`).\n    // For `disableGeneration` we don't have an accurate warning but `disableGeneration` is an advanced use case anyway.\n    if (props.classes.focused !== undefined && props.classes.focused.indexOf(' ') !== -1) {\n      return new Error(['Material-UI: The `classes.focused` key is deprecated.', 'Use `classes.focusVisible` instead.', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","/**\n * Search Ideas\n */\nimport React from 'react';\nimport { FormGroup, Input } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// actions\nimport { updateSearchIdeas, onSearchIdeas, showFeedbackLoadingIndicator } from 'Store/Actions';\n\n// rct card\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n\nfunction SearchIdeas() {\n   const dispatch = useDispatch();\n   const feedback = useSelector(state => state.feedback);\n   /**\n    * On Search Idea\n    */\n   const onUpdateSearchIdeas = (e) => {\n      dispatch(updateSearchIdeas(e.target.value));\n   }\n\n   /**\n    * On Search Ideas\n    */\n   const onSearchIdea = () => {\n      dispatch(showFeedbackLoadingIndicator());\n      const { searchIdeaText } = feedback;\n      setTimeout(() => {\n         dispatch(onSearchIdeas(searchIdeaText));\n      }, 1500);\n   }\n\n   const { searchIdeaText } = feedback;\n   return (\n      <RctCollapsibleCard customClasses=\"search-filter\">\n         <form>\n            <h2 className=\"heading mb-30\">Type Your Question</h2>\n            <FormGroup className=\"mb-0 w-40\">\n               <Input\n                  type=\"text\"\n                  name=\"search\"\n                  onChange={(e) => onUpdateSearchIdeas(e)}\n                  value={searchIdeaText}\n               />\n            </FormGroup>\n            <Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => onSearchIdea()}>Search</Button>\n         </form>\n      </RctCollapsibleCard>\n   );\n}\n\nexport default SearchIdeas;\n","/**\n * Faq Page\n */\nimport React, {useState, useEffect } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport { Helmet } from \"react-helmet\";\n// api\nimport api from 'Api';\n\n//Components\nimport SearchIdeas from './components/SearchIdeas';\n\nfunction Faq() {\n   const [faqs, setFaqs] = useState(null);\n\n   useEffect(() => {\n      getFaqs()\n   },[])\n\t\t// get faqs\n\tconst getFaqs = () => {\n\t\tapi.get('faqs.js')\n\t\t\t.then((response) => {\n            setFaqs(response.data)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\t// error handling\n\t\t\t})\n\t}\n   return (\n      <div className=\"faq-page-wrapper\">\n         <Helmet>\n            <title>Faqs</title>\n            <meta name=\"description\" content=\"Automaton Faqs Page\" />\n         </Helmet>\n         <SearchIdeas />\n         {faqs && faqs.map((faq, key) => (\n            <Accordion key={key} className=\"mb-30 panel\" defaultExpanded>\n               <AccordionSummary expandIcon={<i className=\"zmdi zmdi-chevron-down\"></i>} className=\"m-0 panel-heading\">\n                  <h4>{faq.title}</h4>\n               </AccordionSummary>\n               <AccordionDetails>\n                  <p>\n                     {faq.content}\n                  </p>\n               </AccordionDetails>\n            </Accordion>\n         ))}\n      </div>\n   )\n}\n\nexport default Faq;\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"sourceRoot":""}