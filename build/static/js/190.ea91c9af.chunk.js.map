{"version":3,"sources":["Routes/components/dialog/component/SimpleExample.js","Routes/components/dialog/component/SimpleDialog.js","Routes/components/dialog/component/AlertDialogSlide.js","Routes/components/dialog/component/ConfirmDialog.js","Routes/components/dialog/component/FullScreenDialog.js","Routes/components/dialog/component/FormDialog.js","Routes/components/dialog/component/ResponsiveDialog.js","Routes/components/dialog/index.js"],"names":["SimpleExample","useState","open","setState","handleClose","Button","variant","onClick","color","className","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","emails","styles","avatar","backgroundColor","blue","SimpleDialogWrapped","withStyles","props","handleListItemClick","value","classes","other","selectedValue","List","map","email","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","SimpleDialogDemo","setOpen","setSelectedValue","Typography","Transition","React","forwardRef","ref","Slide","direction","AlertDialogSlide","TransitionComponent","keepMounted","options","ConfirmationDialog","undefined","setValue","radioGroup","useRef","useEffect","disableBackdropClick","disableEscapeKeyDown","maxWidth","onEntering","current","focus","RadioGroup","name","onChange","event","option","FormControlLabel","control","Radio","label","size","ConfirmDialog","divider","disabled","secondary","FullScreenDialog","fullScreen","AppBar","Toolbar","IconButton","Divider","FormDialog","TextField","margin","type","fullWidth","ResponsiveDialog","withMobileDialog","DialogBox","PageTitleBar","title","IntlMessages","match","RctCollapsibleCard","heading"],"mappings":"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","file":"static/js/190.ea91c9af.chunk.js","sourcesContent":["/**\n * Simple Example\n */\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction SimpleExample() {\n   const [open,setState] = useState(false);\n   \n   const handleClickOpen = () => {\n      setState(true);\n   };\n\n   const handleClose = () => {\n      setState(false);\n   };\n\n   return (\n      <div>\n         <Button variant=\"contained\" onClick={() => handleClickOpen()} color=\"primary\" className=\"text-white\">Open alert dialog</Button>\n         <Dialog open={open} onClose={() => handleClose()} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n            <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n            <DialogContent>\n               <DialogContentText id=\"alert-dialog-description\">\n                  Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\n               </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n               <Button variant=\"contained\" onClick={() => handleClose()} className=\"btn-danger text-white\"> Disagree </Button>\n               <Button variant=\"contained\" onClick={() => handleClose()} color=\"primary\" className=\"text-white\" autoFocus> Agree </Button>\n            </DialogActions>\n         </Dialog>\n      </div>\n   );\n}\n\nexport default SimpleExample;\n","/**\n * Simple Dialog\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Avatar, List, ListItem, ListItemAvatar, ListItemText, Dialog, DialogTitle, Typography} from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport blue from '@material-ui/core/colors/blue';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst styles = {\n   avatar: {\n      backgroundColor: blue[100],\n      color: blue[600],\n   },\n};\n\nfunction SimpleDialog(props) {\n   const handleClose = () => {\n      props.onClose(props.selectedValue);\n   };\n\n   const handleListItemClick = value => {\n      props.onClose(value);\n   };\n\n   const { classes, onClose, selectedValue, ...other } = props;\n   \n   return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n         <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n         <div>\n            <List>\n               {emails.map(email => (\n                  <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n                     <ListItemAvatar>\n                        <Avatar className={classes.avatar}>\n                           <PersonIcon />\n                        </Avatar>\n                     </ListItemAvatar>\n                     <ListItemText primary={email} />\n                  </ListItem>\n               ))}\n               <ListItem button onClick={() => handleListItemClick('addAccount')}>\n                  <ListItemAvatar>\n                     <Avatar>\n                        <AddIcon />\n                     </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"add account\" />\n               </ListItem>\n            </List>\n         </div>\n      </Dialog>\n   )\n}\n\nSimpleDialog.propTypes = {\n   classes: PropTypes.object.isRequired,\n   onClose: PropTypes.func,\n   selectedValue: PropTypes.string,\n};\n\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nfunction SimpleDialogDemo() {\n   const [open,setOpen] = useState(false);\n   const [selectedValue, setSelectedValue] = useState(emails[1])\n\n   const handleClickOpen = () => {\n      setOpen(true);\n   };\n\n   const handleClose = value => {\n      setSelectedValue(value);\n      setOpen(false);\n   };\n\n   return (\n      <div>\n         <Typography variant=\"h6\">Selected: {selectedValue}</Typography>\n         <br />\n         <Button variant=\"contained\" onClick={handleClickOpen} className=\"btn-success text-white btn-block\">Open Simple dialog</Button>\n         <SimpleDialogWrapped\n            selectedValue={selectedValue}\n            open={open}\n            onClose={handleClose}\n         />\n      </div>\n   )\n}\n\nexport default SimpleDialogDemo;\n","/**\n * Animated Dialog\n */\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction AlertDialogSlide(){\n   const [open,setOpen] = useState(false);\n\t\n\tconst handleClickOpen = () => {\n      setOpen(true);\n\t};\n\n\tconst handleClose = () => {\n      setOpen(false);\n\t};\n\n   return (\n      <div>\n         <Button \n            variant=\"contained\" \n            onClick={handleClickOpen} \n            className=\"btn-warning text-white btn-block\">\n            Slide in alert dialog\n         </Button>\n         <Dialog\n            open={open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={() => handleClose}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n         >\n            <DialogTitle id=\"alert-dialog-slide-title\">\n               {\"Use Google's location service?\"}\n            </DialogTitle>\n            <DialogContent>\n               <DialogContentText id=\"alert-dialog-slide-description\">\n                  Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\n               </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n               <Button variant=\"contained\" onClick={() => handleClose()} className=\"btn-danger text-white mr-10\">Disagree</Button>\n               <Button variant=\"contained\" onClick={() => handleClose()} className=\"btn-success text-white mr-10\">Agree</Button>\n            </DialogActions>\n         </Dialog>\n      </div>\n   );\n}\n\nexport default AlertDialogSlide;","/**\n * Confirmation Dialog\n */\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, List, ListItem, ListItemText, Dialog, DialogActions, DialogContent, DialogTitle, Radio, RadioGroup, FormControlLabel } from '@material-ui/core';\n\nconst options = [\n\t'None',\n\t'Atria',\n\t'Callisto',\n\t'Dione',\n\t'Ganymede',\n\t'Hangouts Call',\n\t'Luna',\n\t'Oberon',\n\t'Phobos',\n\t'Pyxis',\n\t'Sedna',\n];\n\nfunction ConfirmationDialog(props) {\n   const [value, setValue] = useState(undefined);\n   const radioGroup = useRef();\n   useEffect(() => {\n      setValue(props.value)\n   }, [props])\n\n\tconst handleEntering = () => {\n\t\tradioGroup.current.focus();\n\t};\n\n\tconst handleCancel = () => {\n\t\tprops.onClose(props.value);\n\t};\n\n\tconst handleOk = () => {\n\t\tprops.onClose(value);\n\t};\n\n\tconst handleChange = (event, value) => {\n      setValue(value);\n\t};\n\n\t\tconst { ...other } = props;\n\n   return (\n      <Dialog disableBackdropClick disableEscapeKeyDown\n         maxWidth=\"sm\" onEntering={handleEntering}\n         aria-labelledby=\"confirmation-dialog-title\"\n         {...other}>\n         <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n         <DialogContent>\n            <RadioGroup\n               ref={radioGroup}\n               aria-label=\"ringtone\"\n               name=\"ringtone\"\n               value={value}\n               onChange={handleChange}>\n               {options.map(option => (\n                  <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n               ))}\n            </RadioGroup>\n         </DialogContent>\n         <DialogActions>\n            <Button variant=\"contained\" size=\"small\" onClick={handleCancel} className=\"btn-danger text-white\">\n               Cancel\n            </Button>\n            <Button variant=\"contained\" size=\"small\" onClick={handleOk} color=\"primary\" className=\"text-white\">\n               Ok\n            </Button>\n         </DialogActions>\n      </Dialog>\n   )\n}\n\nConfirmationDialog.propTypes = {\n\tonClose: PropTypes.func,\n\tvalue: PropTypes.string,\n};\n\nfunction ConfirmDialog() {\n   const [open, setOpen] = useState(false);\n   const [value,setValue] = useState('Dione');\n   \n\tconst handleClickListItem = () => {\n      setOpen(true);\n\t};\n\n\tconst handleClose = value => {\n      setValue(value);\n      setOpen(false);\n\t};\n\n   return (\n      <div>\n         <List>\n            <ListItem button divider disabled>\n               <ListItemText primary=\"Interruptions\" />\n            </ListItem>\n            <ListItem button divider aria-haspopup=\"true\" aria-controls=\"ringtone-menu\"\n               aria-label=\"Phone ringtone\" onClick={handleClickListItem}>\n               <ListItemText primary=\"Phone ringtone\" secondary={value} />\n            </ListItem>\n            <ListItem button divider disabled>\n               <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n            </ListItem>\n            <ConfirmationDialog\n               open={open}\n               onClose={handleClose}\n               value={value}\n            />\n         </List>\n      </div>\n   );\n}\n\nexport default ConfirmDialog;","/**\n * Full Screen Dialog\n */\nimport React, { useState } from 'react';\nimport { Button, Dialog, List, ListItem, ListItemText, Divider, AppBar, Toolbar, IconButton, Slide } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n   const [open,setOpen] = useState(false);\n\t\n\tconst handleClickOpen = () => {\n      setOpen(true);\n\t};\n\n\tconst handleClose = () => {\n      setOpen(false);\n\t};\n\n   return (\n      <div>\n         <Button variant=\"contained\" className=\"btn-danger text-white btn-block\" onClick={handleClickOpen}>Open full-screen dialog</Button>\n         <Dialog fullScreen\n            open={open}\n            onClose={handleClose}\n            TransitionComponent={Transition}>\n            <AppBar className=\"bg-primary\">\n               <Toolbar>\n                  <IconButton color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n                     <CloseIcon />\n                  </IconButton>\n                  <h5 className=\"w-100 mb-0\">Sound</h5>\n                  <Button color=\"inherit\" onClick={handleClose}>save</Button>\n               </Toolbar>\n            </AppBar>\n            <List>\n               <ListItem button>\n                  <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n               </ListItem>\n               <Divider />\n               <ListItem button>\n                  <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n               </ListItem>\n            </List>\n         </Dialog>\n      </div>\n   );\n}\n","/**\n * Form Dialog\n */\nimport React, { useState } from 'react';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\n\nfunction FormDialog() {\n   const [open,setOpen] = useState(false);\n   \n   const handleClickOpen = () => {\n      setOpen(true);\n   };\n\n   const handleClose = () => {\n      setOpen(false);\n   };\n\n   return (\n      <div>\n         <Button variant=\"contained\" className=\"btn-info text-white btn-block\" onClick={handleClickOpen}>Open form dialog</Button>\n         <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n            <DialogContent>\n               <DialogContentText>\n                  To subscribe to this website, please enter your email address here. We will send\n                  updates occationally.\n               </DialogContentText>\n               <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth />\n            </DialogContent>\n            <DialogActions>\n               <Button variant=\"contained\" onClick={handleClose} color=\"primary\" className=\"text-white\">\n                  Cancel\n               </Button>\n               <Button variant=\"contained\" onClick={handleClose} className=\"btn-info text-white\">\n                  Subscribe\n               </Button>\n            </DialogActions>\n         </Dialog>\n      </div>\n   );\n}\n\nexport default FormDialog ","/**\n * Responsive Dialog\n */\nimport React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, withMobileDialog } from '@material-ui/core';\n\nexport default function ResponsiveDialog(props) {\n   const [open,setOpen] = useState(false);\n   \n   const handleClickOpen = () => {\n      setOpen(true);\n   };\n\n   const handleClose = () => {\n      setOpen(false);\n   };\n\n   const { fullScreen } = props;\n   return (\n      <div>\n         <Button variant=\"contained\" className=\"btn-secondary text-white btn-block\" onClick={handleClickOpen}>Open responsive dialog</Button>\n         <Dialog\n            fullScreen={fullScreen}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"responsive-dialog-title\"\n         >\n            <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n            <DialogContent>\n               <DialogContentText>\n                  Let Google help apps determine location. This means sending anonymous location data to\n                  Google, even when no apps are running.\n               </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n               <Button variant=\"contained\" onClick={handleClose} className=\"btn-secondary text-white\">\n                  Disagree\n               </Button>\n               <Button variant=\"contained\" onClick={handleClose} color=\"primary\" className=\"text-white\" autoFocus>\n                  Agree\n               </Button>\n            </DialogActions>\n         </Dialog>\n      </div>\n   );\n}\nwithMobileDialog();\n","/**\n * Dialog\n */\nimport React from 'react';\n\n// components\nimport SimpleExample from './component/SimpleExample';\nimport SimpleDialog from './component/SimpleDialog';\nimport AlertDialogSlide from './component/AlertDialogSlide';\nimport ConfirmDialog from './component/ConfirmDialog';\nimport FullScreenDialog from './component/FullScreenDialog';\nimport FormDialog from './component/FormDialog';\nimport ResponsiveDialog from './component/ResponsiveDialog';\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n\nexport default function DialogBox(props){\n   return (\n      <div className=\"dialog-wrapper\">\n        <PageTitleBar title={<IntlMessages id=\"sidebar.dialog\" />} match={props.match} />\n        <RctCollapsibleCard\n          heading={<IntlMessages id=\"widgets.dialogs\" />}\n        >\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-sm-6 col-md-4 col-xl-3\">\n              <div className=\"card text-center p-20 mb-30\">\n                <h5 className=\"mb-20\">Alert Dialog</h5>\n                <SimpleExample />\n              </div>\n              <div className=\"card text-center p-20 mb-30\">\n                <h5 className=\"mb-20\">Responsive Full Screen</h5>\n                <ResponsiveDialog />\n              </div>\n            </div>\n            <div className=\"col-xs-12 col-sm-6 col-md-4 col-xl-3\">\n              <div className=\"card text-center p-20 mb-30\">\n                <h5 className=\"mb-20\">Animated Slide Dialogs</h5>\n                <AlertDialogSlide />\n              </div>\n              <div className=\"card text-center p-20 mb-30\">\n                <h5 className=\"mb-20\">Simple Dialogs</h5>\n                <SimpleDialog />\n              </div>\n            </div>\n            <div className=\"col-xs-12 col-sm-6 col-md-4 col-xl-3\">\n              <div className=\"card text-center p-20 mb-30\">\n                <h5 className=\"mb-20\">Full Screen dialogs</h5>\n                <FullScreenDialog />\n              </div>\n              <div className=\"card text-center p-20 mb-30\">\n                <h5 className=\"mb-20\">Form dialogs</h5>\n                <FormDialog />\n              </div>\n            </div>\n            <div className=\"col-xs-12 col-sm-6 col-md-4 col-xl-3\">\n              <div className=\"card text-center p-20 mb-30\">\n                <h5 className=\"mb-20\">Confirmation dialogs</h5>\n                <ConfirmDialog />\n              </div>\n            </div>\n          </div>\n        </RctCollapsibleCard>\n      </div>\n   );\n}\n"],"sourceRoot":""}