{"version":3,"sources":["../node_modules/@mui/icons-material/Upload.js","../node_modules/@uppy/xhr-upload/node_modules/nanoid/non-secure/index.js","../node_modules/@uppy/utils/lib/ProgressTimeout.js","../node_modules/@uppy/xhr-upload/lib/locale.js","../node_modules/@uppy/xhr-upload/lib/index.js","../node_modules/@uppy/utils/lib/AbortController.js","../node_modules/@uppy/aws-s3-multipart/lib/MultipartUploader.js","../node_modules/@uppy/aws-s3-multipart/lib/index.js","../node_modules/reactstrap/es/Col.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","urlAlphabet","_classPrivateFieldLooseBase","receiver","privateKey","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldLooseKey","name","_aliveTimer","_isDone","_onTimedOut","_timeout","ProgressTimeout","timeout","timeoutHandler","this","writable","clearTimeout","setTimeout","strings","uploadStalled","buildResponseError","xhr","err","error","Error","assign","data","isNetworkError","NetworkError","request","setTypeInBlob","file","slice","size","meta","type","_queueRequestSocketToken","_requestSocketToken","XHRUpload","uppy","_opts","opts","getOptions","Client","remote","providerOptions","provider","Provider","RequestClient","client","allowedMetaFields","Array","isArray","keys","post","url","body","protocol","endpoint","fieldname","fieldName","metadata","fromEntries","map","httpMethod","method","useFormData","formData","headers","res","token","title","defaultLocale","locale","defaultOptions","bundle","responseUrlFieldName","limit","withCredentials","responseType","getResponseData","responseText","parsedResponse","JSON","parse","log","getResponseError","_","response","validateStatus","status","i18nInit","handleUpload","bind","internalRateLimitedQueue","requests","RateLimitedQueue","undefined","uploaderEvents","create","wrapPromiseFunction","priority","overrides","getState","xhrUpload","forEach","item","append","formPost","FormData","addMetadata","dataWithUpdatedType","files","options","current","total","Promise","resolve","reject","emit","queuedRequest","createFormDataUpload","XMLHttpRequest","EventTracker","timer","i18n","seconds","Math","ceil","i","random","nanoid","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesUploaded","bytesTotal","done","remove","uploadURL","uploadResp","open","toUpperCase","run","currentOpts","header","setRequestHeader","send","abort","onFileRemove","onCancelAll","_ref","reason","serverToken","connectToServerSocket","setFileState","getFile","socket","host","getSocketHost","companionUrl","createSocket","Socket","target","on","progressData","emitSocketProgress","close","errData","resp","message","cause","_socket","isPaused","_socket2","_temp","_socket3","onRetryRequest","onRetry","onRetryAll","catch","optsFromState","createBundledUpload","emitError","_temp2","promises","parseInt","length","isRemote","uploadRemote","settle","fileID","cb","targetFileID","eventHandler","_this","arguments","fileIDs","some","uploadBundle","uploadFiles","then","capabilities","setState","individualCancellation","addUploader","removeUploader","BasePlugin","VERSION","AbortController","globalThis","createAbortError","AbortSignal","DOMException","__proto__","configurable","MB","getChunkSize","onProgress","onPartComplete","onSuccess","onError","pausingUploadReason","Symbol","_abortController","_chunks","_chunkState","_data","_file","_uploadPromise","_onError","_onSuccess","_onReject","_initChunks","_createUpload","_resumeUpload","_onPartProgress","_onPartComplete","_abortUpload","_initChunks2","desiredChunkSize","fileSize","minChunkSize","max","chunkSize","onComplete","arraySize","j","end","min","chunk","uploaded","_createUpload2","companionComm","uploadFile","signal","_resumeUpload2","resumeUploadFile","_abortUpload2","abortFileUpload","MultipartUploader","_Symbol$for","_this$options","index","sent","ensureInt","totalUploaded","reduce","n","c","etag","part","PartNumber","ETag","aborted","really","pause","assertServerError","throwIfAborted","_abortMultipartUpload","_cache","_createMultipartUpload","_fetchSignature","_listParts","_previousRetryDelay","_requests","_retryDelayIterator","_sendCompletionRequest","_setS3MultipartState","_uploadPartBytes","_shouldRetry","HTTPCommunicationQueue","_requests2","setS3MultipartState","_shouldRetry2","WeakMap","setOptions","_options$retryDelays","abortMultipartUpload","createMultipartUpload","signPart","listParts","completeMultipartUpload","retryDelays","values","uploadPartBytes","Infinity","cachedResult","get","promise","abortPromise","delete","once","set","result","removeEventListener","chunks","getUploadId","uploadId","key","all","uploadChunk","parts","abortOn","alreadyUploadedParts","partNumber","alreadyUploadedInfo","find","signature","_err$source","source","next","_classPrivateFieldLoo","rateLimit","_classPrivateFieldLoo2","navigator","onLine","window","resume","_classPrivateFieldLoo3","_companionCommunicationQueue","_client","_setS3MultipartState2","_setCompanionHeaders","for","AwsS3Multipart","_this$opts$rateLimite","_ref2","cFile","s3Multipart","tus","setCompanionHeaders","companionHeaders","prepareUploadParts","_ref3","number","presignedUrls","rateLimitedQueue","uploaders","uploaderSockets","newOptions","_this$opts$allowedMet","assertHost","filter","String","filename","_ref4","encodeURIComponent","_ref5","uploadIdEnc","_ref6","_ref7","resetUploaderReferences","uploadObject","location","removed","onFilePause","start","onPauseAll","onResumeAll","uploadStarted","isRestored","_this2","autoOpen","isOpen","_this3","resumableUploads","addPreProcessor","removePreProcessor","_ref8","expires","onabort","cleanup","includes","getResponseHeader","_excluded","stringOrNumberProp","PropTypes","oneOfType","string","columnProps","bool","shape","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","className","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","mapToCssModules","classNames","_colClass","classes","React","createElement","_extends"],"mappings":"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","file":"static/js/72.a2857d28.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zm0-10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Upload');\nexports.default = _default;","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n","function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nvar _aliveTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"aliveTimer\");\n\nvar _isDone = /*#__PURE__*/_classPrivateFieldLooseKey(\"isDone\");\n\nvar _onTimedOut = /*#__PURE__*/_classPrivateFieldLooseKey(\"onTimedOut\");\n\nvar _timeout = /*#__PURE__*/_classPrivateFieldLooseKey(\"timeout\");\n\n/**\n * Helper to abort upload requests if there has not been any progress for `timeout` ms.\n * Create an instance using `timer = new ProgressTimeout(10000, onTimeout)`\n * Call `timer.progress()` to signal that there has been progress of any kind.\n * Call `timer.done()` when the upload has completed.\n */\nclass ProgressTimeout {\n  constructor(timeout, timeoutHandler) {\n    Object.defineProperty(this, _aliveTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isDone, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _onTimedOut, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _timeout, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _timeout)[_timeout] = timeout;\n    _classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut] = timeoutHandler;\n  }\n\n  progress() {\n    // Some browsers fire another progress event when the upload is\n    // cancelled, so we have to ignore progress after the timer was\n    // told to stop.\n    if (_classPrivateFieldLooseBase(this, _isDone)[_isDone]) return;\n\n    if (_classPrivateFieldLooseBase(this, _timeout)[_timeout] > 0) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = setTimeout(_classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut], _classPrivateFieldLooseBase(this, _timeout)[_timeout]);\n    }\n  }\n\n  done() {\n    if (!_classPrivateFieldLooseBase(this, _isDone)[_isDone]) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = null;\n      _classPrivateFieldLooseBase(this, _isDone)[_isDone] = true;\n    }\n  }\n\n}\n\nexport default ProgressTimeout;","export default {\n  strings: {\n    // Shown in the Informer if an upload is being canceled because it stalled for too long.\n    uploadStalled: 'Upload has not made any progress for %{seconds} seconds. You may want to retry it.'\n  }\n};","function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nimport BasePlugin from '@uppy/core/lib/BasePlugin.js';\nimport { nanoid } from 'nanoid/non-secure';\nimport { Provider, RequestClient, Socket } from '@uppy/companion-client';\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress';\nimport getSocketHost from '@uppy/utils/lib/getSocketHost';\nimport settle from '@uppy/utils/lib/settle';\nimport EventTracker from '@uppy/utils/lib/EventTracker';\nimport ProgressTimeout from '@uppy/utils/lib/ProgressTimeout';\nimport { RateLimitedQueue, internalRateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue';\nimport NetworkError from '@uppy/utils/lib/NetworkError';\nimport isNetworkError from '@uppy/utils/lib/isNetworkError';\nconst packageJson = {\n  \"version\": \"3.1.0\"\n};\nimport locale from './locale.js';\n\nfunction buildResponseError(xhr, err) {\n  let error = err; // No error message\n\n  if (!error) error = new Error('Upload error'); // Got an error message string\n\n  if (typeof error === 'string') error = new Error(error); // Got something else\n\n  if (!(error instanceof Error)) {\n    error = Object.assign(new Error('Upload error'), {\n      data: error\n    });\n  }\n\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr);\n    return error;\n  }\n\n  error.request = xhr;\n  return error;\n}\n/**\n * Set `data.type` in the blob to `file.meta.type`,\n * because we might have detected a more accurate file type in Uppy\n * https://stackoverflow.com/a/50875615\n *\n * @param {object} file File object with `data`, `size` and `meta` properties\n * @returns {object} blob updated with the new `type` set from `file.meta.type`\n */\n\n\nfunction setTypeInBlob(file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type);\n  return dataWithUpdatedType;\n}\n\nvar _queueRequestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"queueRequestSocketToken\");\n\nvar _requestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"requestSocketToken\");\n\nexport default class XHRUpload extends BasePlugin {\n  // eslint-disable-next-line global-require\n  constructor(uppy, _opts) {\n    super(uppy, _opts);\n    Object.defineProperty(this, _queueRequestSocketToken, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _requestSocketToken, {\n      writable: true,\n      value: async file => {\n        const opts = this.getOptions(file);\n        const Client = file.remote.providerOptions.provider ? Provider : RequestClient;\n        const client = new Client(this.uppy, file.remote.providerOptions);\n        const allowedMetaFields = Array.isArray(opts.allowedMetaFields) ? opts.allowedMetaFields // Send along all fields by default.\n        : Object.keys(file.meta);\n        const res = await client.post(file.remote.url, { ...file.remote.body,\n          protocol: 'multipart',\n          endpoint: opts.endpoint,\n          size: file.data.size,\n          fieldname: opts.fieldName,\n          metadata: Object.fromEntries(allowedMetaFields.map(name => [name, file.meta[name]])),\n          httpMethod: opts.method,\n          useFormData: opts.formData,\n          headers: opts.headers\n        });\n        return res.token;\n      }\n    });\n    this.type = 'uploader';\n    this.id = this.opts.id || 'XHRUpload';\n    this.title = 'XHRUpload';\n    this.defaultLocale = locale; // Default options\n\n    const defaultOptions = {\n      formData: true,\n      fieldName: _opts.bundle ? 'files[]' : 'file',\n      method: 'post',\n      allowedMetaFields: null,\n      responseUrlFieldName: 'url',\n      bundle: false,\n      headers: {},\n      timeout: 30 * 1000,\n      limit: 5,\n      withCredentials: false,\n      responseType: '',\n\n      /**\n       * @param {string} responseText the response body string\n       */\n      getResponseData(responseText) {\n        let parsedResponse = {};\n\n        try {\n          parsedResponse = JSON.parse(responseText);\n        } catch (err) {\n          uppy.log(err);\n        }\n\n        return parsedResponse;\n      },\n\n      /**\n       *\n       * @param {string} _ the response body string\n       * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)\n       */\n      getResponseError(_, response) {\n        let error = new Error('Upload error');\n\n        if (isNetworkError(response)) {\n          error = new NetworkError(error, response);\n        }\n\n        return error;\n      },\n\n      /**\n       * Check if the response from the upload endpoint indicates that the upload was successful.\n       *\n       * @param {number} status the response status code\n       */\n      validateStatus(status) {\n        return status >= 200 && status < 300;\n      }\n\n    };\n    this.opts = { ...defaultOptions,\n      ..._opts\n    };\n    this.i18nInit();\n    this.handleUpload = this.handleUpload.bind(this); // Simultaneous upload limiting is shared across all uploads with this plugin.\n\n    if (internalRateLimitedQueue in this.opts) {\n      this.requests = this.opts[internalRateLimitedQueue];\n    } else {\n      this.requests = new RateLimitedQueue(this.opts.limit);\n    }\n\n    if (this.opts.bundle && !this.opts.formData) {\n      throw new Error('`opts.formData` must be true when `opts.bundle` is enabled.');\n    }\n\n    if ((_opts == null ? void 0 : _opts.allowedMetaFields) === undefined && 'metaFields' in this.opts) {\n      throw new Error('The `metaFields` option has been renamed to `allowedMetaFields`.');\n    }\n\n    this.uploaderEvents = Object.create(null);\n    _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken] = this.requests.wrapPromiseFunction(_classPrivateFieldLooseBase(this, _requestSocketToken)[_requestSocketToken], {\n      priority: -1\n    });\n  }\n\n  getOptions(file) {\n    const overrides = this.uppy.getState().xhrUpload;\n    const {\n      headers\n    } = this.opts;\n    const opts = { ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {}\n    }; // Support for `headers` as a function, only in the XHRUpload settings.\n    // Options set by other plugins in Uppy state or on the files themselves are still merged in afterward.\n    //\n    // ```js\n    // headers: (file) => ({ expires: file.meta.expires })\n    // ```\n\n    if (typeof headers === 'function') {\n      opts.headers = headers(file);\n    } else {\n      Object.assign(opts.headers, this.opts.headers);\n    }\n\n    if (overrides) {\n      Object.assign(opts.headers, overrides.headers);\n    }\n\n    if (file.xhrUpload) {\n      Object.assign(opts.headers, file.xhrUpload.headers);\n    }\n\n    return opts;\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  addMetadata(formData, meta, opts) {\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields) ? opts.allowedMetaFields : Object.keys(meta); // Send along all fields by default.\n\n    allowedMetaFields.forEach(item => {\n      formData.append(item, meta[item]);\n    });\n  }\n\n  createFormDataUpload(file, opts) {\n    const formPost = new FormData();\n    this.addMetadata(formPost, file.meta, opts);\n    const dataWithUpdatedType = setTypeInBlob(file);\n\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name);\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType);\n    }\n\n    return formPost;\n  }\n\n  createBundledUpload(files, opts) {\n    const formPost = new FormData();\n    const {\n      meta\n    } = this.uppy.getState();\n    this.addMetadata(formPost, meta, opts);\n    files.forEach(file => {\n      const options = this.getOptions(file);\n      const dataWithUpdatedType = setTypeInBlob(file);\n\n      if (file.name) {\n        formPost.append(options.fieldName, dataWithUpdatedType, file.name);\n      } else {\n        formPost.append(options.fieldName, dataWithUpdatedType);\n      }\n    });\n    return formPost;\n  }\n\n  upload(file, current, total) {\n    const opts = this.getOptions(file);\n    this.uppy.log(`uploading ${current} of ${total}`);\n    return new Promise((resolve, reject) => {\n      this.uppy.emit('upload-started', file);\n      const data = opts.formData ? this.createFormDataUpload(file, opts) : file.data;\n      const xhr = new XMLHttpRequest();\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy);\n      let queuedRequest;\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', {\n          seconds: Math.ceil(opts.timeout / 1000)\n        }));\n        this.uppy.emit('upload-stalled', error, [file]);\n      });\n      const id = nanoid();\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log(`[XHRUpload] ${id} started`);\n      });\n      xhr.upload.addEventListener('progress', ev => {\n        this.uppy.log(`[XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`); // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n\n        timer.progress();\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total\n          });\n        }\n      });\n      xhr.addEventListener('load', () => {\n        this.uppy.log(`[XHRUpload] ${id} finished`);\n        timer.done();\n        queuedRequest.done();\n\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove();\n          this.uploaderEvents[file.id] = null;\n        }\n\n        if (opts.validateStatus(xhr.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr);\n          const uploadURL = body[opts.responseUrlFieldName];\n          const uploadResp = {\n            status: xhr.status,\n            body,\n            uploadURL\n          };\n          this.uppy.emit('upload-success', file, uploadResp);\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`);\n          }\n\n          return resolve(file);\n        }\n\n        const body = opts.getResponseData(xhr.responseText, xhr);\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n        const response = {\n          status: xhr.status,\n          body\n        };\n        this.uppy.emit('upload-error', file, error, response);\n        return reject(error);\n      });\n      xhr.addEventListener('error', () => {\n        this.uppy.log(`[XHRUpload] ${id} errored`);\n        timer.done();\n        queuedRequest.done();\n\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove();\n          this.uploaderEvents[file.id] = null;\n        }\n\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n        this.uppy.emit('upload-error', file, error);\n        return reject(error);\n      });\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true); // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n\n      xhr.withCredentials = opts.withCredentials;\n\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType;\n      }\n\n      queuedRequest = this.requests.run(() => {\n        this.uppy.emit('upload-started', file); // When using an authentication system like JWT, the bearer token goes as a header. This\n        // header needs to be fresh each time the token is refreshed so computing and setting the\n        // headers just before the upload starts enables this kind of authentication to work properly.\n        // Otherwise, half-way through the list of uploads the token could be stale and the upload would fail.\n\n        const currentOpts = this.getOptions(file);\n        Object.keys(currentOpts.headers).forEach(header => {\n          xhr.setRequestHeader(header, currentOpts.headers[header]);\n        });\n        xhr.send(data);\n        return () => {\n          timer.done();\n          xhr.abort();\n        };\n      });\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort();\n        reject(new Error('File removed'));\n      });\n      this.onCancelAll(file.id, _ref => {\n        let {\n          reason\n        } = _ref;\n\n        if (reason === 'user') {\n          queuedRequest.abort();\n        }\n\n        reject(new Error('Upload cancelled'));\n      });\n    });\n  }\n\n  async uploadRemote(file) {\n    // TODO: we could rewrite this to use server-sent events instead of creating WebSockets.\n    try {\n      this.uppy.emit('upload-started', file);\n\n      if (file.serverToken) {\n        return this.connectToServerSocket(file);\n      }\n\n      const serverToken = await _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken](file);\n      if (!this.uppy.getState().files[file.id]) return undefined;\n      this.uppy.setFileState(file.id, {\n        serverToken\n      });\n      return this.connectToServerSocket(this.uppy.getFile(file.id));\n    } catch (err) {\n      this.uppy.emit('upload-error', file, err);\n      throw err;\n    }\n  }\n\n  connectToServerSocket(file) {\n    return new Promise((resolve, reject) => {\n      const opts = this.getOptions(file);\n      const token = file.serverToken;\n      const host = getSocketHost(file.remote.companionUrl);\n      let socket;\n\n      const createSocket = () => {\n        if (socket != null) return;\n        socket = new Socket({\n          target: `${host}/api/${token}`\n        });\n        socket.on('progress', progressData => emitSocketProgress(this, progressData, file));\n        socket.on('success', data => {\n          const body = opts.getResponseData(data.response.responseText, data.response);\n          const uploadURL = body[opts.responseUrlFieldName];\n          const uploadResp = {\n            status: data.response.status,\n            body,\n            uploadURL\n          };\n          this.uppy.emit('upload-success', file, uploadResp);\n          queuedRequest.done(); // eslint-disable-line no-use-before-define\n\n          socket.close();\n\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove();\n            this.uploaderEvents[file.id] = null;\n          }\n\n          return resolve();\n        });\n        socket.on('error', errData => {\n          const resp = errData.response;\n          const error = resp ? opts.getResponseError(resp.responseText, resp) : Object.assign(new Error(errData.error.message), {\n            cause: errData.error\n          });\n          this.uppy.emit('upload-error', file, error);\n          queuedRequest.done(); // eslint-disable-line no-use-before-define\n\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove();\n            this.uploaderEvents[file.id] = null;\n          }\n\n          reject(error);\n        });\n      };\n\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy);\n      let queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          var _socket;\n\n          (_socket = socket) == null ? void 0 : _socket.send('pause', {});\n        } else {\n          createSocket();\n        }\n\n        return () => socket.close();\n      });\n      this.onFileRemove(file.id, () => {\n        var _socket2;\n\n        (_socket2 = socket) == null ? void 0 : _socket2.send('cancel', {});\n        queuedRequest.abort();\n        resolve(`upload ${file.id} was removed`);\n      });\n      this.onCancelAll(file.id, function (_temp) {\n        let {\n          reason\n        } = _temp === void 0 ? {} : _temp;\n\n        if (reason === 'user') {\n          var _socket3;\n\n          (_socket3 = socket) == null ? void 0 : _socket3.send('cancel', {});\n          queuedRequest.abort();\n        }\n\n        resolve(`upload ${file.id} was canceled`);\n      });\n\n      const onRetryRequest = () => {\n        if (socket == null) {\n          queuedRequest.abort();\n        } else {\n          socket.send('pause', {});\n          queuedRequest.done();\n        }\n\n        queuedRequest = this.requests.run(() => {\n          if (!file.isPaused) {\n            if (socket == null) {\n              createSocket();\n            } else {\n              socket.send('resume', {});\n            }\n          }\n\n          return () => socket.close();\n        });\n      };\n\n      this.onRetry(file.id, onRetryRequest);\n      this.onRetryAll(file.id, onRetryRequest);\n    }).catch(err => {\n      this.uppy.emit('upload-error', file, err);\n      return Promise.reject(err);\n    });\n  }\n\n  uploadBundle(files) {\n    return new Promise((resolve, reject) => {\n      const {\n        endpoint\n      } = this.opts;\n      const {\n        method\n      } = this.opts;\n      const optsFromState = this.uppy.getState().xhrUpload;\n      const formData = this.createBundledUpload(files, { ...this.opts,\n        ...(optsFromState || {})\n      });\n      const xhr = new XMLHttpRequest();\n\n      const emitError = error => {\n        files.forEach(file => {\n          this.uppy.emit('upload-error', file, error);\n        });\n      };\n\n      const timer = new ProgressTimeout(this.opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', {\n          seconds: Math.ceil(this.opts.timeout / 1000)\n        }));\n        this.uppy.emit('upload-stalled', error, files);\n      });\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log('[XHRUpload] started uploading bundle');\n        timer.progress();\n      });\n      xhr.upload.addEventListener('progress', ev => {\n        timer.progress();\n        if (!ev.lengthComputable) return;\n        files.forEach(file => {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded / ev.total * file.size,\n            bytesTotal: file.size\n          });\n        });\n      });\n      xhr.addEventListener('load', ev => {\n        timer.done();\n\n        if (this.opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          const body = this.opts.getResponseData(xhr.responseText, xhr);\n          const uploadResp = {\n            status: ev.target.status,\n            body\n          };\n          files.forEach(file => {\n            this.uppy.emit('upload-success', file, uploadResp);\n          });\n          return resolve();\n        }\n\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error');\n        error.request = xhr;\n        emitError(error);\n        return reject(error);\n      });\n      xhr.addEventListener('error', () => {\n        timer.done();\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error');\n        emitError(error);\n        return reject(error);\n      });\n      this.uppy.on('cancel-all', function (_temp2) {\n        let {\n          reason\n        } = _temp2 === void 0 ? {} : _temp2;\n        if (reason !== 'user') return;\n        timer.done();\n        xhr.abort();\n      });\n      xhr.open(method.toUpperCase(), endpoint, true); // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n\n      xhr.withCredentials = this.opts.withCredentials;\n\n      if (this.opts.responseType !== '') {\n        xhr.responseType = this.opts.responseType;\n      }\n\n      Object.keys(this.opts.headers).forEach(header => {\n        xhr.setRequestHeader(header, this.opts.headers[header]);\n      });\n      xhr.send(formData);\n      files.forEach(file => {\n        this.uppy.emit('upload-started', file);\n      });\n    });\n  }\n\n  uploadFiles(files) {\n    const promises = files.map((file, i) => {\n      const current = parseInt(i, 10) + 1;\n      const total = files.length;\n\n      if (file.error) {\n        return Promise.reject(new Error(file.error));\n      }\n\n      if (file.isRemote) {\n        return this.uploadRemote(file, current, total);\n      }\n\n      return this.upload(file, current, total);\n    });\n    return settle(promises);\n  }\n\n  onFileRemove(fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', file => {\n      if (fileID === file.id) cb(file.id);\n    });\n  }\n\n  onRetry(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', targetFileID => {\n      if (fileID === targetFileID) {\n        cb();\n      }\n    });\n  }\n\n  onRetryAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  onCancelAll(fileID, eventHandler) {\n    var _this = this;\n\n    this.uploaderEvents[fileID].on('cancel-all', function () {\n      if (!_this.uppy.getFile(fileID)) return;\n      eventHandler(...arguments);\n    });\n  }\n\n  handleUpload(fileIDs) {\n    if (fileIDs.length === 0) {\n      this.uppy.log('[XHRUpload] No files to upload!');\n      return Promise.resolve();\n    } // No limit configured by the user, and no RateLimitedQueue passed in by a \"parent\" plugin\n    // (basically just AwsS3) using the internal symbol\n\n\n    if (this.opts.limit === 0 && !this.opts[internalRateLimitedQueue]) {\n      this.uppy.log('[XHRUpload] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/xhr-upload/#limit-0', 'warning');\n    }\n\n    this.uppy.log('[XHRUpload] Uploading...');\n    const files = fileIDs.map(fileID => this.uppy.getFile(fileID));\n\n    if (this.opts.bundle) {\n      // if bundle: true, we don’t support remote uploads\n      const isSomeFileRemote = files.some(file => file.isRemote);\n\n      if (isSomeFileRemote) {\n        throw new Error('Can’t upload remote files when the `bundle: true` option is set');\n      }\n\n      if (typeof this.opts.headers === 'function') {\n        throw new TypeError('`headers` may not be a function when the `bundle: true` option is set');\n      }\n\n      return this.uploadBundle(files);\n    }\n\n    return this.uploadFiles(files).then(() => null);\n  }\n\n  install() {\n    if (this.opts.bundle) {\n      const {\n        capabilities\n      } = this.uppy.getState();\n      this.uppy.setState({\n        capabilities: { ...capabilities,\n          individualCancellation: false\n        }\n      });\n    }\n\n    this.uppy.addUploader(this.handleUpload);\n  }\n\n  uninstall() {\n    if (this.opts.bundle) {\n      const {\n        capabilities\n      } = this.uppy.getState();\n      this.uppy.setState({\n        capabilities: { ...capabilities,\n          individualCancellation: true\n        }\n      });\n    }\n\n    this.uppy.removeUploader(this.handleUpload);\n  }\n\n}\nXHRUpload.VERSION = packageJson.version;","import hasOwnProperty from './hasProperty.js';\n/**\n * Little AbortController proxy module so we can swap out the implementation easily later.\n */\n\nexport const {\n  AbortController\n} = globalThis;\nexport const {\n  AbortSignal\n} = globalThis;\nexport const createAbortError = function (message, options) {\n  if (message === void 0) {\n    message = 'Aborted';\n  }\n\n  const err = new DOMException(message, 'AbortError');\n\n  if (options != null && hasOwnProperty(options, 'cause')) {\n    Object.defineProperty(err, 'cause', {\n      __proto__: null,\n      configurable: true,\n      writable: true,\n      value: options.cause\n    });\n  }\n\n  return err;\n};","function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nimport { AbortController } from '@uppy/utils/lib/AbortController';\nconst MB = 1024 * 1024;\nconst defaultOptions = {\n  getChunkSize(file) {\n    return Math.ceil(file.size / 10000);\n  },\n\n  onProgress() {},\n\n  onPartComplete() {},\n\n  onSuccess() {},\n\n  onError(err) {\n    throw err;\n  }\n\n};\n\nfunction ensureInt(value) {\n  if (typeof value === 'string') {\n    return parseInt(value, 10);\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  throw new TypeError('Expected a number');\n}\n\nconst pausingUploadReason = Symbol('pausing upload, not an actual error');\n\nvar _abortController = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortController\");\n\nvar _chunks = /*#__PURE__*/_classPrivateFieldLooseKey(\"chunks\");\n\nvar _chunkState = /*#__PURE__*/_classPrivateFieldLooseKey(\"chunkState\");\n\nvar _data = /*#__PURE__*/_classPrivateFieldLooseKey(\"data\");\n\nvar _file = /*#__PURE__*/_classPrivateFieldLooseKey(\"file\");\n\nvar _uploadPromise = /*#__PURE__*/_classPrivateFieldLooseKey(\"uploadPromise\");\n\nvar _onError = /*#__PURE__*/_classPrivateFieldLooseKey(\"onError\");\n\nvar _onSuccess = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSuccess\");\n\nvar _onReject = /*#__PURE__*/_classPrivateFieldLooseKey(\"onReject\");\n\nvar _initChunks = /*#__PURE__*/_classPrivateFieldLooseKey(\"initChunks\");\n\nvar _createUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"createUpload\");\n\nvar _resumeUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"resumeUpload\");\n\nvar _onPartProgress = /*#__PURE__*/_classPrivateFieldLooseKey(\"onPartProgress\");\n\nvar _onPartComplete = /*#__PURE__*/_classPrivateFieldLooseKey(\"onPartComplete\");\n\nvar _abortUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortUpload\");\n\nclass MultipartUploader {\n  constructor(data, options) {\n    var _this$options, _this$options$getChun;\n\n    Object.defineProperty(this, _abortUpload, {\n      value: _abortUpload2\n    });\n    Object.defineProperty(this, _resumeUpload, {\n      value: _resumeUpload2\n    });\n    Object.defineProperty(this, _createUpload, {\n      value: _createUpload2\n    });\n    Object.defineProperty(this, _initChunks, {\n      value: _initChunks2\n    });\n    Object.defineProperty(this, _abortController, {\n      writable: true,\n      value: new AbortController()\n    });\n    Object.defineProperty(this, _chunks, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _chunkState, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _data, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _file, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _uploadPromise, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _onError, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _onSuccess, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _onReject, {\n      writable: true,\n      value: err => (err == null ? void 0 : err.cause) === pausingUploadReason ? null : _classPrivateFieldLooseBase(this, _onError)[_onError](err)\n    });\n    Object.defineProperty(this, _onPartProgress, {\n      writable: true,\n      value: index => ev => {\n        if (!ev.lengthComputable) return;\n        const sent = ev.loaded;\n        _classPrivateFieldLooseBase(this, _chunkState)[_chunkState][index].uploaded = ensureInt(sent);\n\n        const totalUploaded = _classPrivateFieldLooseBase(this, _chunkState)[_chunkState].reduce((n, c) => n + c.uploaded, 0);\n\n        this.options.onProgress(totalUploaded, _classPrivateFieldLooseBase(this, _data)[_data].size);\n      }\n    });\n    Object.defineProperty(this, _onPartComplete, {\n      writable: true,\n      value: index => etag => {\n        // This avoids the net::ERR_OUT_OF_MEMORY in Chromium Browsers.\n        _classPrivateFieldLooseBase(this, _chunks)[_chunks][index] = null;\n        _classPrivateFieldLooseBase(this, _chunkState)[_chunkState][index].etag = etag;\n        _classPrivateFieldLooseBase(this, _chunkState)[_chunkState][index].done = true;\n        const part = {\n          PartNumber: index + 1,\n          ETag: etag\n        };\n        this.options.onPartComplete(part);\n      }\n    });\n    this.options = { ...defaultOptions,\n      ...options\n    }; // Use default `getChunkSize` if it was null or something\n\n    (_this$options$getChun = (_this$options = this.options).getChunkSize) != null ? _this$options$getChun : _this$options.getChunkSize = defaultOptions.getChunkSize;\n    _classPrivateFieldLooseBase(this, _data)[_data] = data;\n    _classPrivateFieldLooseBase(this, _file)[_file] = options.file;\n    _classPrivateFieldLooseBase(this, _onSuccess)[_onSuccess] = this.options.onSuccess;\n    _classPrivateFieldLooseBase(this, _onError)[_onError] = this.options.onError;\n\n    _classPrivateFieldLooseBase(this, _initChunks)[_initChunks]();\n  }\n\n  start() {\n    if (_classPrivateFieldLooseBase(this, _uploadPromise)[_uploadPromise]) {\n      if (!_classPrivateFieldLooseBase(this, _abortController)[_abortController].signal.aborted) _classPrivateFieldLooseBase(this, _abortController)[_abortController].abort(pausingUploadReason);\n      _classPrivateFieldLooseBase(this, _abortController)[_abortController] = new AbortController();\n\n      _classPrivateFieldLooseBase(this, _resumeUpload)[_resumeUpload]();\n    } else {\n      _classPrivateFieldLooseBase(this, _createUpload)[_createUpload]();\n    }\n  }\n\n  pause() {\n    _classPrivateFieldLooseBase(this, _abortController)[_abortController].abort(pausingUploadReason); // Swap it out for a new controller, because this instance may be resumed later.\n\n\n    _classPrivateFieldLooseBase(this, _abortController)[_abortController] = new AbortController();\n  }\n\n  abort(opts) {\n    var _opts;\n\n    if (opts === void 0) {\n      opts = undefined;\n    }\n\n    if ((_opts = opts) != null && _opts.really) _classPrivateFieldLooseBase(this, _abortUpload)[_abortUpload]();else this.pause();\n  } // TODO: remove this in the next major\n\n\n  get chunkState() {\n    return _classPrivateFieldLooseBase(this, _chunkState)[_chunkState];\n  }\n\n}\n\nfunction _initChunks2() {\n  const desiredChunkSize = this.options.getChunkSize(_classPrivateFieldLooseBase(this, _data)[_data]); // at least 5MB per request, at most 10k requests\n\n  const fileSize = _classPrivateFieldLooseBase(this, _data)[_data].size;\n\n  const minChunkSize = Math.max(5 * MB, Math.ceil(fileSize / 10000));\n  const chunkSize = Math.max(desiredChunkSize, minChunkSize); // Upload zero-sized files in one zero-sized chunk\n\n  if (_classPrivateFieldLooseBase(this, _data)[_data].size === 0) {\n    _classPrivateFieldLooseBase(this, _chunks)[_chunks] = [_classPrivateFieldLooseBase(this, _data)[_data]];\n    _classPrivateFieldLooseBase(this, _data)[_data].onProgress = _classPrivateFieldLooseBase(this, _onPartProgress)[_onPartProgress](0);\n    _classPrivateFieldLooseBase(this, _data)[_data].onComplete = _classPrivateFieldLooseBase(this, _onPartComplete)[_onPartComplete](0);\n  } else {\n    const arraySize = Math.ceil(fileSize / chunkSize);\n    _classPrivateFieldLooseBase(this, _chunks)[_chunks] = Array(arraySize);\n    let j = 0;\n\n    for (let i = 0; i < fileSize; i += chunkSize) {\n      const end = Math.min(fileSize, i + chunkSize);\n\n      const chunk = _classPrivateFieldLooseBase(this, _data)[_data].slice(i, end);\n\n      chunk.onProgress = _classPrivateFieldLooseBase(this, _onPartProgress)[_onPartProgress](j);\n      chunk.onComplete = _classPrivateFieldLooseBase(this, _onPartComplete)[_onPartComplete](j);\n      _classPrivateFieldLooseBase(this, _chunks)[_chunks][j++] = chunk;\n    }\n  }\n\n  _classPrivateFieldLooseBase(this, _chunkState)[_chunkState] = _classPrivateFieldLooseBase(this, _chunks)[_chunks].map(() => ({\n    uploaded: 0\n  }));\n}\n\nfunction _createUpload2() {\n  _classPrivateFieldLooseBase(this, _uploadPromise)[_uploadPromise] = this.options.companionComm.uploadFile(_classPrivateFieldLooseBase(this, _file)[_file], _classPrivateFieldLooseBase(this, _chunks)[_chunks], _classPrivateFieldLooseBase(this, _abortController)[_abortController].signal).then(_classPrivateFieldLooseBase(this, _onSuccess)[_onSuccess], _classPrivateFieldLooseBase(this, _onReject)[_onReject]);\n}\n\nfunction _resumeUpload2() {\n  _classPrivateFieldLooseBase(this, _uploadPromise)[_uploadPromise] = this.options.companionComm.resumeUploadFile(_classPrivateFieldLooseBase(this, _file)[_file], _classPrivateFieldLooseBase(this, _chunks)[_chunks], _classPrivateFieldLooseBase(this, _abortController)[_abortController].signal).then(_classPrivateFieldLooseBase(this, _onSuccess)[_onSuccess], _classPrivateFieldLooseBase(this, _onReject)[_onReject]);\n}\n\nfunction _abortUpload2() {\n  _classPrivateFieldLooseBase(this, _abortController)[_abortController].abort();\n\n  this.options.companionComm.abortFileUpload(_classPrivateFieldLooseBase(this, _file)[_file]).catch(err => this.options.log(err));\n}\n\nexport default MultipartUploader;","let _Symbol$for;\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nimport BasePlugin from '@uppy/core/lib/BasePlugin.js';\nimport { Socket, Provider, RequestClient } from '@uppy/companion-client';\nimport EventTracker from '@uppy/utils/lib/EventTracker';\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress';\nimport getSocketHost from '@uppy/utils/lib/getSocketHost';\nimport { RateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue';\nimport { createAbortError } from '@uppy/utils/lib/AbortController';\nconst packageJson = {\n  \"version\": \"3.1.3\"\n};\nimport MultipartUploader from './MultipartUploader.js';\n\nfunction assertServerError(res) {\n  if (res && res.error) {\n    const error = new Error(res.message);\n    Object.assign(error, res.error);\n    throw error;\n  }\n\n  return res;\n}\n\nfunction throwIfAborted(signal) {\n  if (signal != null && signal.aborted) {\n    throw createAbortError('The operation was aborted', {\n      cause: signal.reason\n    });\n  }\n}\n\nvar _abortMultipartUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortMultipartUpload\");\n\nvar _cache = /*#__PURE__*/_classPrivateFieldLooseKey(\"cache\");\n\nvar _createMultipartUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"createMultipartUpload\");\n\nvar _fetchSignature = /*#__PURE__*/_classPrivateFieldLooseKey(\"fetchSignature\");\n\nvar _listParts = /*#__PURE__*/_classPrivateFieldLooseKey(\"listParts\");\n\nvar _previousRetryDelay = /*#__PURE__*/_classPrivateFieldLooseKey(\"previousRetryDelay\");\n\nvar _requests = /*#__PURE__*/_classPrivateFieldLooseKey(\"requests\");\n\nvar _retryDelayIterator = /*#__PURE__*/_classPrivateFieldLooseKey(\"retryDelayIterator\");\n\nvar _sendCompletionRequest = /*#__PURE__*/_classPrivateFieldLooseKey(\"sendCompletionRequest\");\n\nvar _setS3MultipartState = /*#__PURE__*/_classPrivateFieldLooseKey(\"setS3MultipartState\");\n\nvar _uploadPartBytes = /*#__PURE__*/_classPrivateFieldLooseKey(\"uploadPartBytes\");\n\nvar _shouldRetry = /*#__PURE__*/_classPrivateFieldLooseKey(\"shouldRetry\");\n\nclass HTTPCommunicationQueue {\n  constructor(_requests2, options, setS3MultipartState) {\n    Object.defineProperty(this, _shouldRetry, {\n      value: _shouldRetry2\n    });\n    Object.defineProperty(this, _abortMultipartUpload, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _cache, {\n      writable: true,\n      value: new WeakMap()\n    });\n    Object.defineProperty(this, _createMultipartUpload, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _fetchSignature, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _listParts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _previousRetryDelay, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _requests, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _retryDelayIterator, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _sendCompletionRequest, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _setS3MultipartState, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _uploadPartBytes, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _requests)[_requests] = _requests2;\n    _classPrivateFieldLooseBase(this, _setS3MultipartState)[_setS3MultipartState] = setS3MultipartState;\n    this.setOptions(options);\n  }\n\n  setOptions(options) {\n    const requests = _classPrivateFieldLooseBase(this, _requests)[_requests];\n\n    if ('abortMultipartUpload' in options) {\n      _classPrivateFieldLooseBase(this, _abortMultipartUpload)[_abortMultipartUpload] = requests.wrapPromiseFunction(options.abortMultipartUpload);\n    }\n\n    if ('createMultipartUpload' in options) {\n      _classPrivateFieldLooseBase(this, _createMultipartUpload)[_createMultipartUpload] = requests.wrapPromiseFunction(options.createMultipartUpload, {\n        priority: -1\n      });\n    }\n\n    if ('signPart' in options) {\n      _classPrivateFieldLooseBase(this, _fetchSignature)[_fetchSignature] = requests.wrapPromiseFunction(options.signPart);\n    }\n\n    if ('listParts' in options) {\n      _classPrivateFieldLooseBase(this, _listParts)[_listParts] = requests.wrapPromiseFunction(options.listParts);\n    }\n\n    if ('completeMultipartUpload' in options) {\n      _classPrivateFieldLooseBase(this, _sendCompletionRequest)[_sendCompletionRequest] = requests.wrapPromiseFunction(options.completeMultipartUpload);\n    }\n\n    if ('retryDelays' in options) {\n      var _options$retryDelays;\n\n      _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator] = (_options$retryDelays = options.retryDelays) == null ? void 0 : _options$retryDelays.values();\n    }\n\n    if ('uploadPartBytes' in options) {\n      _classPrivateFieldLooseBase(this, _uploadPartBytes)[_uploadPartBytes] = requests.wrapPromiseFunction(options.uploadPartBytes, {\n        priority: Infinity\n      });\n    }\n  }\n\n  async getUploadId(file, signal) {\n    const cachedResult = _classPrivateFieldLooseBase(this, _cache)[_cache].get(file.data);\n\n    if (cachedResult != null) {\n      return cachedResult;\n    }\n\n    const promise = _classPrivateFieldLooseBase(this, _createMultipartUpload)[_createMultipartUpload](file, signal);\n\n    const abortPromise = () => {\n      promise.abort(signal.reason);\n\n      _classPrivateFieldLooseBase(this, _cache)[_cache].delete(file.data);\n    };\n\n    signal.addEventListener('abort', abortPromise, {\n      once: true\n    });\n\n    _classPrivateFieldLooseBase(this, _cache)[_cache].set(file.data, promise);\n\n    promise.then(async result => {\n      signal.removeEventListener('abort', abortPromise);\n\n      _classPrivateFieldLooseBase(this, _setS3MultipartState)[_setS3MultipartState](file, result);\n\n      _classPrivateFieldLooseBase(this, _cache)[_cache].set(file.data, result);\n    }, () => {\n      signal.removeEventListener('abort', abortPromise);\n    });\n    return promise;\n  }\n\n  async abortFileUpload(file) {\n    const result = _classPrivateFieldLooseBase(this, _cache)[_cache].get(file.data);\n\n    if (result != null) {\n      // If the createMultipartUpload request never was made, we don't\n      // need to send the abortMultipartUpload request.\n      await _classPrivateFieldLooseBase(this, _abortMultipartUpload)[_abortMultipartUpload](file, await result);\n    }\n  }\n\n  async uploadFile(file, chunks, signal) {\n    throwIfAborted(signal);\n    const {\n      uploadId,\n      key\n    } = await this.getUploadId(file, signal);\n    throwIfAborted(signal);\n    const parts = await Promise.all(chunks.map((chunk, i) => this.uploadChunk(file, i + 1, chunk, signal)));\n    throwIfAborted(signal);\n    return _classPrivateFieldLooseBase(this, _sendCompletionRequest)[_sendCompletionRequest](file, {\n      key,\n      uploadId,\n      parts,\n      signal\n    }).abortOn(signal);\n  }\n\n  async resumeUploadFile(file, chunks, signal) {\n    throwIfAborted(signal);\n    const {\n      uploadId,\n      key\n    } = await this.getUploadId(file, signal);\n    throwIfAborted(signal);\n    const alreadyUploadedParts = await _classPrivateFieldLooseBase(this, _listParts)[_listParts](file, {\n      uploadId,\n      key,\n      signal\n    }).abortOn(signal);\n    throwIfAborted(signal);\n    const parts = await Promise.all(chunks.map((chunk, i) => {\n      const partNumber = i + 1;\n      const alreadyUploadedInfo = alreadyUploadedParts.find(_ref => {\n        let {\n          PartNumber\n        } = _ref;\n        return PartNumber === partNumber;\n      });\n      return alreadyUploadedInfo == null ? this.uploadChunk(file, partNumber, chunk, signal) : {\n        PartNumber: partNumber,\n        ETag: alreadyUploadedInfo.ETag\n      };\n    }));\n    throwIfAborted(signal);\n    return _classPrivateFieldLooseBase(this, _sendCompletionRequest)[_sendCompletionRequest](file, {\n      key,\n      uploadId,\n      parts,\n      signal\n    }).abortOn(signal);\n  }\n\n  async uploadChunk(file, partNumber, body, signal) {\n    throwIfAborted(signal);\n    const {\n      uploadId,\n      key\n    } = await this.getUploadId(file, signal);\n    throwIfAborted(signal);\n\n    for (;;) {\n      const signature = await _classPrivateFieldLooseBase(this, _fetchSignature)[_fetchSignature](file, {\n        uploadId,\n        key,\n        partNumber,\n        body,\n        signal\n      }).abortOn(signal);\n      throwIfAborted(signal);\n\n      try {\n        return {\n          PartNumber: partNumber,\n          ...(await _classPrivateFieldLooseBase(this, _uploadPartBytes)[_uploadPartBytes](signature, body, signal).abortOn(signal))\n        };\n      } catch (err) {\n        if (!(await _classPrivateFieldLooseBase(this, _shouldRetry)[_shouldRetry](err))) throw err;\n      }\n    }\n  }\n\n}\n\nasync function _shouldRetry2(err) {\n  var _err$source;\n\n  const requests = _classPrivateFieldLooseBase(this, _requests)[_requests];\n\n  const status = err == null ? void 0 : (_err$source = err.source) == null ? void 0 : _err$source.status; // TODO: this retry logic is taken out of Tus. We should have a centralized place for retrying,\n  // perhaps the rate limited queue, and dedupe all plugins with that.\n\n  if (status == null) {\n    return false;\n  }\n\n  if (status === 403 && err.message === 'Request has expired') {\n    if (!requests.isPaused) {\n      // We don't want to exhaust the retryDelayIterator as long as there are\n      // more than one request in parallel, to give slower connection a chance\n      // to catch up with the expiry set in Companion.\n      if (requests.limit === 1 || _classPrivateFieldLooseBase(this, _previousRetryDelay)[_previousRetryDelay] == null) {\n        var _classPrivateFieldLoo;\n\n        const next = (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator]) == null ? void 0 : _classPrivateFieldLoo.next();\n\n        if (next == null || next.done) {\n          return false;\n        } // If there are more than 1 request done in parallel, the RLQ limit is\n        // decreased and the failed request is requeued after waiting for a bit.\n        // If there is only one request in parallel, the limit can't be\n        // decreased, so we iterate over `retryDelayIterator` as we do for\n        // other failures.\n        // `#previousRetryDelay` caches the value so we can re-use it next time.\n\n\n        _classPrivateFieldLooseBase(this, _previousRetryDelay)[_previousRetryDelay] = next.value;\n      } // No need to stop the other requests, we just want to lower the limit.\n\n\n      requests.rateLimit(0);\n      await new Promise(resolve => setTimeout(resolve, _classPrivateFieldLooseBase(this, _previousRetryDelay)[_previousRetryDelay]));\n    }\n  } else if (status === 429) {\n    // HTTP 429 Too Many Requests => to avoid the whole download to fail, pause all requests.\n    if (!requests.isPaused) {\n      var _classPrivateFieldLoo2;\n\n      const next = (_classPrivateFieldLoo2 = _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator]) == null ? void 0 : _classPrivateFieldLoo2.next();\n\n      if (next == null || next.done) {\n        return false;\n      }\n\n      requests.rateLimit(next.value);\n    }\n  } else if (status > 400 && status < 500 && status !== 409) {\n    // HTTP 4xx, the server won't send anything, it's doesn't make sense to retry\n    return false;\n  } else if (typeof navigator !== 'undefined' && navigator.onLine === false) {\n    // The navigator is offline, let's wait for it to come back online.\n    if (!requests.isPaused) {\n      requests.pause();\n      window.addEventListener('online', () => {\n        requests.resume();\n      }, {\n        once: true\n      });\n    }\n  } else {\n    var _classPrivateFieldLoo3;\n\n    // Other error code means the request can be retried later.\n    const next = (_classPrivateFieldLoo3 = _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator]) == null ? void 0 : _classPrivateFieldLoo3.next();\n\n    if (next == null || next.done) {\n      return false;\n    }\n\n    await new Promise(resolve => setTimeout(resolve, next.value));\n  }\n\n  return true;\n}\n\nvar _queueRequestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"queueRequestSocketToken\");\n\nvar _companionCommunicationQueue = /*#__PURE__*/_classPrivateFieldLooseKey(\"companionCommunicationQueue\");\n\nvar _client = /*#__PURE__*/_classPrivateFieldLooseKey(\"client\");\n\nvar _setS3MultipartState2 = /*#__PURE__*/_classPrivateFieldLooseKey(\"setS3MultipartState\");\n\nvar _requestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"requestSocketToken\");\n\nvar _setCompanionHeaders = /*#__PURE__*/_classPrivateFieldLooseKey(\"setCompanionHeaders\");\n\n_Symbol$for = Symbol.for('uppy test: getClient');\nexport default class AwsS3Multipart extends BasePlugin {\n  constructor(uppy, _opts) {\n    var _this$opts$rateLimite;\n\n    super(uppy, _opts);\n    Object.defineProperty(this, _queueRequestSocketToken, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _companionCommunicationQueue, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _client, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _setS3MultipartState2, {\n      writable: true,\n      value: (file, _ref2) => {\n        let {\n          key,\n          uploadId\n        } = _ref2;\n        const cFile = this.uppy.getFile(file.id);\n        this.uppy.setFileState(file.id, {\n          s3Multipart: { ...cFile.s3Multipart,\n            key,\n            uploadId\n          }\n        });\n      }\n    });\n    Object.defineProperty(this, _requestSocketToken, {\n      writable: true,\n      value: async file => {\n        const Client = file.remote.providerOptions.provider ? Provider : RequestClient;\n        const client = new Client(this.uppy, file.remote.providerOptions);\n        const opts = { ...this.opts\n        };\n\n        if (file.tus) {\n          // Install file-specific upload overrides.\n          Object.assign(opts, file.tus);\n        }\n\n        if (file.remote.url == null) {\n          throw new Error('Cannot connect to an undefined URL');\n        }\n\n        const res = await client.post(file.remote.url, { ...file.remote.body,\n          protocol: 's3-multipart',\n          size: file.data.size,\n          metadata: file.meta\n        });\n        return res.token;\n      }\n    });\n    Object.defineProperty(this, _setCompanionHeaders, {\n      writable: true,\n      value: () => {\n        _classPrivateFieldLooseBase(this, _client)[_client].setCompanionHeaders(this.opts.companionHeaders);\n      }\n    });\n    this.type = 'uploader';\n    this.id = this.opts.id || 'AwsS3Multipart';\n    this.title = 'AWS S3 Multipart';\n    _classPrivateFieldLooseBase(this, _client)[_client] = new RequestClient(uppy, _opts);\n    const defaultOptions = {\n      // TODO: this is currently opt-in for backward compat, switch to opt-out in the next major\n      allowedMetaFields: null,\n      limit: 6,\n      retryDelays: [0, 1000, 3000, 5000],\n      createMultipartUpload: this.createMultipartUpload.bind(this),\n      listParts: this.listParts.bind(this),\n      abortMultipartUpload: this.abortMultipartUpload.bind(this),\n      completeMultipartUpload: this.completeMultipartUpload.bind(this),\n      signPart: this.signPart.bind(this),\n      uploadPartBytes: AwsS3Multipart.uploadPartBytes,\n      companionHeaders: {}\n    };\n    this.opts = { ...defaultOptions,\n      ..._opts\n    };\n\n    if ((_opts == null ? void 0 : _opts.prepareUploadParts) != null && _opts.signPart == null) {\n      this.opts.signPart = async (file, _ref3) => {\n        let {\n          uploadId,\n          key,\n          partNumber,\n          body,\n          signal\n        } = _ref3;\n        const {\n          presignedUrls,\n          headers\n        } = await _opts.prepareUploadParts(file, {\n          uploadId,\n          key,\n          parts: [{\n            number: partNumber,\n            chunk: body\n          }],\n          signal\n        });\n        return {\n          url: presignedUrls == null ? void 0 : presignedUrls[partNumber],\n          headers: headers == null ? void 0 : headers[partNumber]\n        };\n      };\n    }\n\n    this.upload = this.upload.bind(this);\n    /**\n     * Simultaneous upload limiting is shared across all uploads with this plugin.\n     *\n     * @type {RateLimitedQueue}\n     */\n\n    this.requests = (_this$opts$rateLimite = this.opts.rateLimitedQueue) != null ? _this$opts$rateLimite : new RateLimitedQueue(this.opts.limit);\n    _classPrivateFieldLooseBase(this, _companionCommunicationQueue)[_companionCommunicationQueue] = new HTTPCommunicationQueue(this.requests, this.opts, _classPrivateFieldLooseBase(this, _setS3MultipartState2)[_setS3MultipartState2]);\n    this.uploaders = Object.create(null);\n    this.uploaderEvents = Object.create(null);\n    this.uploaderSockets = Object.create(null);\n    _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken] = this.requests.wrapPromiseFunction(_classPrivateFieldLooseBase(this, _requestSocketToken)[_requestSocketToken], {\n      priority: -1\n    });\n  }\n\n  [_Symbol$for]() {\n    return _classPrivateFieldLooseBase(this, _client)[_client];\n  }\n\n  setOptions(newOptions) {\n    _classPrivateFieldLooseBase(this, _companionCommunicationQueue)[_companionCommunicationQueue].setOptions(newOptions);\n\n    return super.setOptions(newOptions);\n  }\n  /**\n   * Clean up all references for a file's upload: the MultipartUploader instance,\n   * any events related to the file, and the Companion WebSocket connection.\n   *\n   * Set `opts.abort` to tell S3 that the multipart upload is cancelled and must be removed.\n   * This should be done when the user cancels the upload, not when the upload is completed or errored.\n   */\n\n\n  resetUploaderReferences(fileID, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (this.uploaders[fileID]) {\n      this.uploaders[fileID].abort({\n        really: opts.abort || false\n      });\n      this.uploaders[fileID] = null;\n    }\n\n    if (this.uploaderEvents[fileID]) {\n      this.uploaderEvents[fileID].remove();\n      this.uploaderEvents[fileID] = null;\n    }\n\n    if (this.uploaderSockets[fileID]) {\n      this.uploaderSockets[fileID].close();\n      this.uploaderSockets[fileID] = null;\n    }\n  } // TODO: make this a private method in the next major\n\n\n  assertHost(method) {\n    if (!this.opts.companionUrl) {\n      throw new Error(`Expected a \\`companionUrl\\` option containing a Companion address, or if you are not using Companion, a custom \\`${method}\\` implementation.`);\n    }\n  }\n\n  createMultipartUpload(file, signal) {\n    var _this$opts$allowedMet;\n\n    this.assertHost('createMultipartUpload');\n    throwIfAborted(signal);\n    const metadata = file.meta ? Object.fromEntries(((_this$opts$allowedMet = this.opts.allowedMetaFields) != null ? _this$opts$allowedMet : Object.keys(file.meta)).filter(key => file.meta[key] != null).map(key => [key, String(file.meta[key])])) : {};\n    return _classPrivateFieldLooseBase(this, _client)[_client].post('s3/multipart', {\n      filename: file.name,\n      type: file.type,\n      metadata\n    }, {\n      signal\n    }).then(assertServerError);\n  }\n\n  listParts(file, _ref4, signal) {\n    let {\n      key,\n      uploadId\n    } = _ref4;\n    this.assertHost('listParts');\n    throwIfAborted(signal);\n    const filename = encodeURIComponent(key);\n    return _classPrivateFieldLooseBase(this, _client)[_client].get(`s3/multipart/${uploadId}?key=${filename}`, {\n      signal\n    }).then(assertServerError);\n  }\n\n  completeMultipartUpload(file, _ref5, signal) {\n    let {\n      key,\n      uploadId,\n      parts\n    } = _ref5;\n    this.assertHost('completeMultipartUpload');\n    throwIfAborted(signal);\n    const filename = encodeURIComponent(key);\n    const uploadIdEnc = encodeURIComponent(uploadId);\n    return _classPrivateFieldLooseBase(this, _client)[_client].post(`s3/multipart/${uploadIdEnc}/complete?key=${filename}`, {\n      parts\n    }, {\n      signal\n    }).then(assertServerError);\n  }\n\n  signPart(file, _ref6) {\n    let {\n      uploadId,\n      key,\n      partNumber,\n      signal\n    } = _ref6;\n    this.assertHost('signPart');\n    throwIfAborted(signal);\n\n    if (uploadId == null || key == null || partNumber == null) {\n      throw new Error('Cannot sign without a key, an uploadId, and a partNumber');\n    }\n\n    const filename = encodeURIComponent(key);\n    return _classPrivateFieldLooseBase(this, _client)[_client].get(`s3/multipart/${uploadId}/${partNumber}?key=${filename}`, {\n      signal\n    }).then(assertServerError);\n  }\n\n  abortMultipartUpload(file, _ref7, signal) {\n    let {\n      key,\n      uploadId\n    } = _ref7;\n    this.assertHost('abortMultipartUpload');\n    const filename = encodeURIComponent(key);\n    const uploadIdEnc = encodeURIComponent(uploadId);\n    return _classPrivateFieldLooseBase(this, _client)[_client].delete(`s3/multipart/${uploadIdEnc}?key=${filename}`, undefined, {\n      signal\n    }).then(assertServerError);\n  }\n\n  static async uploadPartBytes(_ref8, body, signal) {\n    let {\n      url,\n      expires,\n      headers\n    } = _ref8;\n    throwIfAborted(signal);\n\n    if (url == null) {\n      throw new Error('Cannot upload to an undefined URL');\n    }\n\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('PUT', url, true);\n\n      if (headers) {\n        Object.keys(headers).forEach(key => {\n          xhr.setRequestHeader(key, headers[key]);\n        });\n      }\n\n      xhr.responseType = 'text';\n\n      if (typeof expires === 'number') {\n        xhr.timeout = expires * 1000;\n      }\n\n      function onabort() {\n        xhr.abort();\n      }\n\n      function cleanup() {\n        signal.removeEventListener('abort', onabort);\n      }\n\n      signal.addEventListener('abort', onabort);\n      xhr.upload.addEventListener('progress', body.onProgress);\n      xhr.addEventListener('abort', () => {\n        cleanup();\n        reject(createAbortError());\n      });\n      xhr.addEventListener('timeout', () => {\n        cleanup();\n        const error = new Error('Request has expired');\n        error.source = {\n          status: 403\n        };\n        reject(error);\n      });\n      xhr.addEventListener('load', ev => {\n        cleanup();\n\n        if (ev.target.status === 403 && ev.target.responseText.includes('<Message>Request has expired</Message>')) {\n          const error = new Error('Request has expired');\n          error.source = ev.target;\n          reject(error);\n          return;\n        }\n\n        if (ev.target.status < 200 || ev.target.status >= 300) {\n          const error = new Error('Non 2xx');\n          error.source = ev.target;\n          reject(error);\n          return;\n        }\n\n        body.onProgress == null ? void 0 : body.onProgress(body.size); // NOTE This must be allowed by CORS.\n\n        const etag = ev.target.getResponseHeader('ETag');\n\n        if (etag === null) {\n          reject(new Error('AwsS3/Multipart: Could not read the ETag header. This likely means CORS is not configured correctly on the S3 Bucket. See https://uppy.io/docs/aws-s3-multipart#S3-Bucket-Configuration for instructions.'));\n          return;\n        }\n\n        body.onComplete == null ? void 0 : body.onComplete(etag);\n        resolve({\n          ETag: etag\n        });\n      });\n      xhr.addEventListener('error', ev => {\n        cleanup();\n        const error = new Error('Unknown error');\n        error.source = ev.target;\n        reject(error);\n      });\n      xhr.send(body);\n    });\n  }\n\n  uploadFile(file) {\n    var _this = this;\n\n    return new Promise((resolve, reject) => {\n      const onProgress = (bytesUploaded, bytesTotal) => {\n        this.uppy.emit('upload-progress', file, {\n          uploader: this,\n          bytesUploaded,\n          bytesTotal\n        });\n      };\n\n      const onError = err => {\n        this.uppy.log(err);\n        this.uppy.emit('upload-error', file, err);\n        this.resetUploaderReferences(file.id);\n        reject(err);\n      };\n\n      const onSuccess = result => {\n        const uploadObject = upload; // eslint-disable-line no-use-before-define\n\n        const uploadResp = {\n          body: { ...result\n          },\n          uploadURL: result.location\n        };\n        this.resetUploaderReferences(file.id);\n        const cFile = this.uppy.getFile(file.id);\n        this.uppy.emit('upload-success', cFile || file, uploadResp);\n\n        if (result.location) {\n          this.uppy.log(`Download ${file.name} from ${result.location}`);\n        }\n\n        resolve(uploadObject);\n      };\n\n      const onPartComplete = part => {\n        const cFile = this.uppy.getFile(file.id);\n\n        if (!cFile) {\n          return;\n        }\n\n        this.uppy.emit('s3-multipart:part-uploaded', cFile, part);\n      };\n\n      const upload = new MultipartUploader(file.data, {\n        // .bind to pass the file object to each handler.\n        companionComm: _classPrivateFieldLooseBase(this, _companionCommunicationQueue)[_companionCommunicationQueue],\n        log: function () {\n          return _this.uppy.log(...arguments);\n        },\n        getChunkSize: this.opts.getChunkSize ? this.opts.getChunkSize.bind(this) : null,\n        onProgress,\n        onError,\n        onSuccess,\n        onPartComplete,\n        file,\n        ...file.s3Multipart\n      });\n      this.uploaders[file.id] = upload;\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy);\n      this.onFileRemove(file.id, removed => {\n        upload.abort();\n        this.resetUploaderReferences(file.id, {\n          abort: true\n        });\n        resolve(`upload ${removed.id} was removed`);\n      });\n      this.onCancelAll(file.id, function (_temp) {\n        let {\n          reason\n        } = _temp === void 0 ? {} : _temp;\n\n        if (reason === 'user') {\n          upload.abort();\n\n          _this.resetUploaderReferences(file.id, {\n            abort: true\n          });\n        }\n\n        resolve(`upload ${file.id} was canceled`);\n      });\n      this.onFilePause(file.id, isPaused => {\n        if (isPaused) {\n          upload.pause();\n        } else {\n          upload.start();\n        }\n      });\n      this.onPauseAll(file.id, () => {\n        upload.pause();\n      });\n      this.onResumeAll(file.id, () => {\n        upload.start();\n      }); // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n\n      if (!file.progress.uploadStarted || !file.isRestored) {\n        upload.start();\n        this.uppy.emit('upload-started', file);\n      }\n    });\n  }\n\n  // NOTE! Keep this duplicated code in sync with other plugins\n  // TODO we should probably abstract this into a common function\n  async uploadRemote(file) {\n    this.resetUploaderReferences(file.id); // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n\n    if (!file.progress.uploadStarted || !file.isRestored) {\n      this.uppy.emit('upload-started', file);\n    }\n\n    try {\n      if (file.serverToken) {\n        return await this.connectToServerSocket(file);\n      }\n\n      const serverToken = await _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken](file);\n      if (!this.uppy.getState().files[file.id]) return undefined;\n      this.uppy.setFileState(file.id, {\n        serverToken\n      });\n      return await this.connectToServerSocket(this.uppy.getFile(file.id));\n    } catch (err) {\n      this.uppy.setFileState(file.id, {\n        serverToken: undefined\n      });\n      this.uppy.emit('upload-error', file, err);\n      throw err;\n    }\n  }\n\n  async connectToServerSocket(file) {\n    var _this2 = this;\n\n    return new Promise((resolve, reject) => {\n      let queuedRequest;\n      const token = file.serverToken;\n      const host = getSocketHost(file.remote.companionUrl);\n      const socket = new Socket({\n        target: `${host}/api/${token}`,\n        autoOpen: false\n      });\n      this.uploaderSockets[file.id] = socket;\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy);\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort();\n        socket.send('cancel', {});\n        this.resetUploaderReferences(file.id, {\n          abort: true\n        });\n        resolve(`upload ${file.id} was removed`);\n      });\n      this.onFilePause(file.id, isPaused => {\n        if (isPaused) {\n          // Remove this file from the queue so another file can start in its place.\n          queuedRequest.abort();\n          socket.send('pause', {});\n        } else {\n          // Resuming an upload should be queued, else you could pause and then\n          // resume a queued upload to make it skip the queue.\n          queuedRequest.abort();\n          queuedRequest = this.requests.run(() => {\n            socket.open();\n            socket.send('resume', {});\n            return () => socket.close();\n          });\n        }\n      });\n      this.onPauseAll(file.id, () => {\n        queuedRequest.abort();\n        socket.send('pause', {});\n      });\n      this.onCancelAll(file.id, function (_temp2) {\n        let {\n          reason\n        } = _temp2 === void 0 ? {} : _temp2;\n\n        if (reason === 'user') {\n          queuedRequest.abort();\n          socket.send('cancel', {});\n\n          _this2.resetUploaderReferences(file.id);\n        }\n\n        resolve(`upload ${file.id} was canceled`);\n      });\n      this.onResumeAll(file.id, () => {\n        queuedRequest.abort();\n\n        if (file.error) {\n          socket.send('pause', {});\n        }\n\n        queuedRequest = this.requests.run(() => {\n          socket.open();\n          socket.send('resume', {});\n          return () => socket.close();\n        });\n      });\n      this.onRetry(file.id, () => {\n        // Only do the retry if the upload is actually in progress;\n        // else we could try to send these messages when the upload is still queued.\n        // We may need a better check for this since the socket may also be closed\n        // for other reasons, like network failures.\n        if (socket.isOpen) {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        }\n      });\n      this.onRetryAll(file.id, () => {\n        if (socket.isOpen) {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        }\n      });\n      socket.on('progress', progressData => emitSocketProgress(this, progressData, file));\n      socket.on('error', errData => {\n        this.uppy.emit('upload-error', file, new Error(errData.error));\n        this.resetUploaderReferences(file.id);\n        queuedRequest.done();\n        reject(new Error(errData.error));\n      });\n      socket.on('success', data => {\n        const uploadResp = {\n          uploadURL: data.url\n        };\n        this.uppy.emit('upload-success', file, uploadResp);\n        this.resetUploaderReferences(file.id);\n        queuedRequest.done();\n        resolve();\n      });\n      queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket.send('pause', {});\n        } else {\n          socket.open();\n        }\n\n        return () => socket.close();\n      });\n    });\n  }\n\n  async upload(fileIDs) {\n    if (fileIDs.length === 0) return undefined;\n    const promises = fileIDs.map(id => {\n      const file = this.uppy.getFile(id);\n\n      if (file.isRemote) {\n        return this.uploadRemote(file);\n      }\n\n      return this.uploadFile(file);\n    });\n    return Promise.all(promises);\n  }\n\n  onFileRemove(fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', file => {\n      if (fileID === file.id) cb(file.id);\n    });\n  }\n\n  onFilePause(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        cb(isPaused);\n      }\n    });\n  }\n\n  onRetry(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', targetFileID => {\n      if (fileID === targetFileID) {\n        cb();\n      }\n    });\n  }\n\n  onRetryAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  onPauseAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('pause-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  onCancelAll(fileID, eventHandler) {\n    var _this3 = this;\n\n    this.uploaderEvents[fileID].on('cancel-all', function () {\n      if (!_this3.uppy.getFile(fileID)) return;\n      eventHandler(...arguments);\n    });\n  }\n\n  onResumeAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('resume-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  install() {\n    const {\n      capabilities\n    } = this.uppy.getState();\n    this.uppy.setState({\n      capabilities: { ...capabilities,\n        resumableUploads: true\n      }\n    });\n    this.uppy.addPreProcessor(_classPrivateFieldLooseBase(this, _setCompanionHeaders)[_setCompanionHeaders]);\n    this.uppy.addUploader(this.upload);\n  }\n\n  uninstall() {\n    const {\n      capabilities\n    } = this.uppy.getState();\n    this.uppy.setState({\n      capabilities: { ...capabilities,\n        resumableUploads: false\n      }\n    });\n    this.uppy.removePreProcessor(_classPrivateFieldLooseBase(this, _setCompanionHeaders)[_setCompanionHeaders]);\n    this.uppy.removeUploader(this.upload);\n  }\n\n}\nAwsS3Multipart.VERSION = packageJson.version;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;"],"sourceRoot":""}