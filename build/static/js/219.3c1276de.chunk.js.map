{"version":3,"sources":["Routes/dashboard/project/data.js","Routes/dashboard/project/index.js"],"names":["process","ChartConfig","color","primary","default","SaasDashbaord","props","match","location","history","useHistory","deleteConfirmationDialog","useRef","useState","project","setProject","filterProject","setFilteredProject","searchText","setSearchText","activePage","setActivePage","totalPageCount","setTotalPageCount","openEditProject","setOpenEditProject","selected","setSelectedItem","type","JSON","parse","localStorage","getItem","ProjectList","accessToken","GetAlLProjectList","then","res","status","data","results","parseInt","count","console","log","catch","err","ErrorHandling","useEffect","className","Helmet","name","content","CustomBreadcrumbs","currentPage","state","breadcrumbData","DeleteConfirmationDialog","title","message","onConfirm","DeleteProject","id","current","close","NotificationManager","success","error","Delete_project","ref","RctCollapsibleCard","style","justifyContent","flexWrap","placeholder","onChange","e","target","value","border","borderBottom","Button","variant","onClick","GetSearchProjectList","length","push","url","EditProject","Modalopen","reloadlist","map","item","i","created","getFormatDate2","date_created","colClasses","fullBlock","borderColor","height","src","project_image","alt","width","project_name","username","DoughnutChart","gap","project_dataset","marginTop","EditModal","setItem","ViewProject","open","DeletModalOpen","itemsCountPerPage","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount"],"mappings":"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","file":"static/js/219.3c1276de.chunk.js","sourcesContent":["// chart config\nimport ChartConfig from 'Constants/chart-config';\n\n// visitors data\nexport const visitorsData = {\n   chartData: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      data: [600, 500, 650, 470, 520, 700, 500, 650, 580, 500, 650, 700]\n   },\n   monthly: 7233,\n   weekly: 5529\n}\n\n// sales data\nexport const salesData = {\n   chartData: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      data: [600, 500, 650, 470, 520, 700, 500, 650, 580, 500, 650, 700]\n   },\n   today: 6544,\n   totalRevenue: 9125\n}\n\n// orders data\nexport const ordersData = {\n   chartData: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      data: [600, 500, 650, 470, 520, 700, 500, 650, 580, 500, 650, 700]\n   },\n   today: 5652,\n   totalRevenue: 8520\n}\n\n// top selling products\nexport const topSellingProducts = {\n   totalSales: '12,550',\n   earning: '$35,000',\n   products: [\n      {\n         id: 1,\n         productName: 'HD Classic Gold Headphone',\n         price: '300',\n         productImage: `${process.env.PUBLIC_URL}/assets/images/img/device-1.jpg`\n      },\n      {\n         id: 2,\n         productName: 'HD Classic Gold Headphone',\n         price: '300',\n         productImage: `${process.env.PUBLIC_URL}/assets/images/img/device-2.jpg`\n      },\n      {\n         id: 3,\n         productName: 'HD Classic Gold Headphone',\n         price: '300',\n         productImage: `${process.env.PUBLIC_URL}/assets/images/img/device-3.jpg`\n      }\n   ]\n}\n\n// traffic Status\nexport const trafficStatus = {\n   chartLabels: ['0.00', '1.0', '2.0', '3.0', '4.0', '5.0', '6.0'],\n   chartDatasets: [\n      {\n         label: 'Series A',\n         backgroundColor: ChartConfig.color.primary,\n         borderColor: ChartConfig.color.primary,\n         borderWidth: 1,\n         hoverBackgroundColor: ChartConfig.color.primary,\n         hoverBorderColor: ChartConfig.color.primary,\n\t\t\tdata: [65, 59, 80, 81, 56, 55, 40]\n      },\n      {\n         label: 'Series B',\n         backgroundColor: ChartConfig.color.default,\n         borderColor: ChartConfig.color.default,\n         borderWidth: 1,\n         hoverBackgroundColor: ChartConfig.color.default,\n         hoverBorderColor: ChartConfig.color.default,\n\t\t\tdata: [45, 39, 40, 60, 35, 25, 60]\n      }\n   ],\n   onlineSources: '3500',\n   today: '17,020',\n   lastMonth: '20.30%'\n}\n","/**\n * Ecommerce Dashboard\n */\n\nimport React, { useEffect, useState,useRef } from 'react'\nimport { NotificationManager } from 'react-notifications'\nimport Pagination from \"react-js-pagination\";\nimport { Helmet } from \"react-helmet\";\n//  import Button from '@material-ui/core/Button';\nimport {\n  Progress, Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Col,\n  FormFeedback\n} from 'reactstrap';\n\n\n\n\n// intl messages\nimport IntlMessages from '../../../Util/IntlMessages';\nimport DeleteConfirmationDialog from '../../../Components/DeleteConfirmationDialog/DeleteConfirmationDialog';\n\n\n\n// rct collapsible card\n\n// widgets data\nimport {\n  visitorsData,\n  salesData,\n  ordersData,\n  topSellingProducts,\n  trafficStatus\n} from './data';\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\nimport { str } from 'Constants/stringConst';\nimport { OverallTrafficStatusWidget, SupportRequest } from 'Components/Widgets';\nimport ProjectCard from '../ReuseComponent/ProjectCard';\nimport DoughnutChart from 'Components/Charts/DoughnutChart';\nimport { useHistory } from 'react-router';\nimport { DeleteProject, GetAlLProjectList, GetSearchProjectList } from 'Api';\nimport { getFormatDate2 } from 'Constants/DateFormator';\nimport { BASE_URL } from 'Api/APIConst';\nimport EditProject from '../ReuseComponent/EditProject';\nimport { ErrorHandling } from 'Constants/ErrorHandling';\nimport CustomBreadcrumbs from '../ReuseComponent/CustomBreadcrumbs';\n\n\nexport default function SaasDashbaord(props) {\n  const { match ,location} = props;\n  const history = useHistory();\n  const deleteConfirmationDialog = useRef()\n  const [project, setProject] = useState([])\n  //  const [filteredUsers, setFilteredProject] = useState() // use when the data is coming fom api\n  const [filterProject, setFilteredProject] = useState([])\n  const [searchText, setSearchText] = useState('');\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState('');\n  const [openEditProject, setOpenEditProject] = useState(false)\n  const [selected, setSelectedItem] = useState({})\n\n  const type = JSON.parse(localStorage.getItem('user_type'));\n  //  if(type === \"admin\"){\n\n  //    history.push(\"app/dashboard/Admin/Dashboard\")\n  //  }\n\n\n\n  const ProjectList = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      GetAlLProjectList(accessToken, activePage)\n        .then((res) => {\n          if (res?.status === 200) {\n            setProject(res?.data?.results);\n            setFilteredProject(res?.data?.results);\n            setTotalPageCount(parseInt(res?.data?.count));\n            console.log('Response from PROJECTlist :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n          }\n        })\n        .catch((err) => {\n          // console.log(\"status of invalid token\", err?.response?.data, err?.response?.status)\n          ErrorHandling(err)\n        })\n    }\n  }\n\n\n\n\n  const handlePageChange = (pageNumber) => {\n    // console.log(\"pagination\", pageNumber)\n    if (activePage !== pageNumber) {\n      const accessToken = JSON.parse(localStorage.getItem('token'))\n      if (accessToken !== null) {\n        GetAlLProjectList(accessToken, pageNumber)\n          .then((res) => {\n            if (res?.status === 200) {\n              setProject(res?.data?.results);\n              setFilteredProject(res?.data?.results);\n              setTotalPageCount(parseInt(res?.data?.count));\n              console.log('Response from handle change :', res)\n            } else {\n              // console.log('Response from customerlist:', res)\n            }\n          })\n          .catch((err) => {\n            // console.log('Response from customerlist:', err)\n          })\n      }\n\n      setActivePage(pageNumber)\n    }\n  }\n\n\n  const getSearchedProjectData = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      GetSearchProjectList(accessToken, searchText)\n        .then((res) => {\n          if (res?.status === 200 && res?.data?.results.length > 0) {\n            setFilteredProject(res?.data?.results);\n            setSearchText('')\n            console.log('Response from search  :', res)\n          } else {\n            // console.log('Response from customerlist:', res)\n            setFilteredProject(project);\n            setSearchText('');\n            NotificationManager.error(\"No Project found!\")\n          }\n        })\n        .catch((err) => {\n          // console.log('Response from customerlist:', err)\n        })\n    }\n  }\n\n\n  const DeletModalOpen = (item) => {\n    setSelectedItem(item)\n    deleteConfirmationDialog.current.open()\n  }\n  const Delete_project = () => {\n\n\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      DeleteProject(accessToken, selected?.id)\n        .then((res) => {\n          if (res?.status === 200) {\n            deleteConfirmationDialog.current.close()\n            ProjectList()\n            NotificationManager.success(\"Project deleted successfully!\")\n            console.log('Response from search  :', res)\n\n          } else {\n\n\n            NotificationManager.error(\"Project deleting process unsucess!\")\n          }\n        })\n        .catch((err) => {\n          NotificationManager.error(\"Project deleting process unsucess!\")\n        })\n    }\n  }\n\n\n\n\n\n  //  alert(\"hello\")\n  useEffect(() => {\n\n    ProjectList()\n    console.log(\"type\", type);\n  }, [])\n\n\n  const EditModal = (item) => {\n    setSelectedItem(item)\n  \n    setOpenEditProject(true)\n  }\n\n const ViewProject=(item)=>{\n  console.log(item, \"viewProject iteeemmm in project\")\n  localStorage.setItem(\"projId\", item?.id)\n  const breadcrumbData = [\n    { name: 'Project', url: '/app/dashboard/project' },\n    \n  ];\n\n  history.push(\"/app/dashboard/viewProject\",{breadcrumbData:breadcrumbData})\n }\n const NavigateTo=()=>{\n   \n  const breadcrumbData = [\n    { name: 'Project', url: '/app/dashboard/project' },\n    \n  ];\n\n\n  history.push(\"/app/dashboard/createProject\",{breadcrumbData:breadcrumbData})\n }\n \n  return (\n    <div className=\"ecom-dashboard-wrapper\">\n      <Helmet>\n        <title> User Dashboard </title>\n        <meta name=\"description\" content=\"user Dashboard\" />\n      </Helmet>\n      <div className=\"charts-widgets-wrapper\">\n\n        {/* <PageTitleBar title={<IntlMessages id=\"sidebar.project\" />} match={props.match} /> */}\n      <CustomBreadcrumbs    currentPage={\"Project\"} data={location?.state?.breadcrumbData}  />\n       \n       \n        <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n            message=\"This will delete your project permanently.\"\n            onConfirm={() => Delete_project()}\n            ref={deleteConfirmationDialog} />\n        \n        \n        <RctCollapsibleCard\n        // heading={<center> <h2>user Dashboard</h2></center> }\n        >\n          <div className=\"d-flex  px-2 \" style={{ justifyContent: 'space-between',flexWrap:\"wrap\" }}>\n            <div className='search-row'>\n              <input type=\"text\" placeholder='Search' onChange={(e)=>setSearchText(e.target.value)} className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} />\n              <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" onClick={getSearchedProjectData} >Search</Button>\n            </div>\n            <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" onClick={NavigateTo} >Create Project</Button>\n          </div>\n          <EditProject selected={selected} Modalopen={openEditProject} close={()=>setOpenEditProject(false)} reloadlist={ProjectList}/>\n\n\n        </RctCollapsibleCard>\n        <div>\n\n          <div className=\"row \">\n            {filterProject &&\n              filterProject.map((item, i) => {\n\n                let created = getFormatDate2(item.date_created)\n                return <RctCollapsibleCard\n\n                  colClasses=\"col-sm-12 col-md-6 col-lg-4  rounded\"\n\n                  fullBlock\n                  key={i}\n                >\n                  <div className=\"shadow project-card-shadow\">\n                    <section className=\"dark-primary text-white px-3 shadow rounded d-flex  align-items-center\" style={{borderColor:'white', height:\"100px\"}}>\n\n                      <img\n                       \n                        src={item?.project_image == null ? `${process.env.PUBLIC_URL}/assets/images/avatars/user-15.jpg` : `${ item.project_image}`}\n                        alt=\"user profile\"\n                        className=\" rounded-circle \"\n                        width={75}\n                        height={75}\n                      />\n\n                      <div className=\"ml-4 d-flex flex-column justify-content-center align-items-center heading-container\">\n                        <p className=\"project-heading text-left w-100 m-0\">{item.project_name}</p>\n                        <p className=\"project-date text-left w-100 m-0\"> Created by {item.username} on {created}</p>\n                      </div>\n\n\n                    </section>\n                    <section className=\"Project-Card-Main\" style={{height: \"200px\"}}>\n                      <section className=\"px-4 d-flex flex-direction: column align-items-center justify-content-between Project-cart-main\">\n                        <div className=\"Doughnut-in-Project-cart\">\n                          <DoughnutChart />\n                        </div>\n                        <div className='d-flex flex-column' style={{gap: \"5px\"}}>\n                          <p className=\"project-card-dataset-text m-0\">Dataset Details <span className=\"project-card-dataset-box\">{item?.project_dataset}</span></p>\n                          <p className=\"project-card-dataset-text m-0\">Status <span className=\"project-card-Status-box\"></span></p>\n                        </div>\n\n                      </section>\n                      <section className=\"d-flex flex-direction: column align-items-center justify-content-center\" style={{marginTop:\"22px\"}}>\n                        <Button variant=\"contained\" color=\"primary\" className=\"projectCardButton mx-2\" onClick={()=>EditModal(item)} >Edit</Button>\n                        <Button variant=\"contained\" color=\"primary\" className=\"projectCardButton mx-2\" onClick={()=>ViewProject(item)} >View</Button>\n                        <Button variant=\"contained\" color=\"danger\" className=\"projectCardButton mx-2\" onClick={()=>DeletModalOpen(item)} >Delete</Button>\n                      </section>\n                    </section>\n\n                  </div>\n\n                </RctCollapsibleCard>\n              })\n            }\n\n            \n          </div>\n          <div>\n            {\n              project?.length > 0 &&\n              <div className='paginationDiv'>\n                <Pagination\n                  activePage={activePage}\n                  itemsCountPerPage={6}\n                  pageRangeDisplayed={5}\n                  onChange={(e) => handlePageChange(e)}\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                  hideFirstLastPages={true}\n                  totalItemsCount={totalPageCount}\n                />\n\n\n              </div>\n            }\n          </div>\n        </div>\n\n\n\n      </div>\n\n    </div>\n  )\n}\n"],"sourceRoot":""}