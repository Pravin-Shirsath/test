{"version":3,"sources":["../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/Edit.js","Routes/dashboard/ReuseComponent/EditDataset.js","Routes/dashboard/ViewProject/index.js","../node_modules/reactstrap/es/Col.js","../node_modules/@mui/icons-material/Delete.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","EditDataset","selected","Modalopen","close","reloadlist","useState","datasetName","setDatasetName","comment","setComment","open","setOpen","useEffect","Dialog","onClose","DialogContent","style","margin","padding","className","marginTop","FormGroup","row","Col","sm","Label","for","Input","type","onChange","e","target","height","marginBottom","variant","color","onClick","accessToken","JSON","parse","localStorage","getItem","UpadatDataset","id","then","res","status","NotificationManager","success","console","log","error","catch","err","ViewProject","props","history","useHistory","searchText","setSearchText","loading","deleteConfirmationDialog","useRef","setSelectedItem","openEditDataset","setOpenEditDataset","datasets","setDatasets","filteredDatasets","setFilteredDatasets","activePage","setActivePage","totalPageCount","setTotalPageCount","getViewProjectData","authToken","projectId","getViewProjectDatasets","data","results","count","parseInt","Helmet","name","content","PageTitleBar","title","IntlMessages","match","DeleteConfirmationDialog","message","onConfirm","DeleteDataset","project_id","current","Delete_Datset","ref","RctCollapsibleCard","fullBlock","justifyContent","placeholder","border","borderBottom","Button","cursor","push","map","dataset","i","dataset_name","date_created","length","itemsCountPerPage","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","RctSectionLoader","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","tagPropType","xs","md","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","columnProp","isObject","_classNames","colSizeInterfix","colClass","mapToCssModules","classNames","_colClass","classes","React","createElement","_extends"],"mappings":"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","file":"static/js/60.6b30452c.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","import React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { EditProjectDetails, UpadatDataset } from 'Api';\n\nconst EditDataset = ({ selected, Modalopen, close,reloadlist }) => {\n    const [datasetName, setDatasetName] = useState(\"\")\n    const [comment, setComment] = useState(\"\")\n    \n    const [open, setOpen] = useState(false)\n    \n\n\n    useEffect(() => {\n       \n        //  setImage(item?.project_image)\n        setOpen(Modalopen)\n\n    }, [Modalopen])\n\n\n\n\n   \n    const SaveEditDetails = () => {\n      \n            const accessToken = JSON.parse(localStorage.getItem('token'))\n           if(datasetName != \"\" || comment != \"\"){\n\n               if (accessToken !== null) {\n                   UpadatDataset(accessToken,selected?.id,datasetName,comment)\n                       .then((res) => {\n                           if (res?.status === 200) {\n                            if(reloadlist){\n                               reloadlist()\n                               setOpen(false)\n                               setDatasetName(\"\")\n                               setComment(\"\")\n                              \n                                if(close){\n                                   close()\n                                   }\n                                   NotificationManager.success(\" Datset update suceesfull !\") \n                            }\n                               console.log('Response from update dataset  :', res)\n                           } else {\n                               // console.log('Response from customerlist:', res)\n   \n                               NotificationManager.error(\"Dataset details update failed!\")\n                           }\n                       })\n                       .catch((err) => {\n                           console.log('Response from Upadat datasett:', err)\n                       })\n               }\n           }else{\n            NotificationManager.error(\"All field is empty\")\n           }\n           \n                  \n\n    }\n\n\n    return (\n        <Dialog\n            onClose={() => (close(false), setOpen(false))}\n            open={open}\n\n        >\n            <DialogContent style={{ margin: 0, padding: 0 }}>\n                <div className=\"user-profile-widget\">\n                \n                    <div className=\"p-20\">\n                    \n                    <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={(e)=>setDatasetName(e.target.value)}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {(e)=>{setComment(e.target.value)}}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\"  className=\"projectCardButton mx-2\" onClick={SaveEditDetails}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\"   className=\"mx-2 d-flex justify-content-center align-items-center\"  onClick={() => (close(false), setOpen(false))}>Cancel</Button>\n                               \n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default EditDataset\n","/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Button from '@material-ui/core/Button'\n\nimport {\n\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  Label,\n  Col\n} from 'reactstrap'\nimport Pagination from \"react-js-pagination\";\n\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications'\n// delete confirmation dialog\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n// update user form\n//  import UpdateUserForm from './UpdateUserForm'\n// page title bar\nimport PageTitleBar from '../../../Components/PageTitleBar/PageTitleBar'\n// intl messages\nimport IntlMessages from '../../../Util/IntlMessages'\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport {\n  DeleteDataset,\n  getViewProjectDatasets\n} from '../../../Api/'\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport EditIcon from '@mui/icons-material/Edit';\nimport EditDataset from '../ReuseComponent/EditDataset';\nexport default function ViewProject(props) {\n  const history = useHistory();\n \n  //  const [users, setUsers] = useState() // use when data is coming from api\n  const [users, setUsers] = useState([])\n  //  const [filteredUsers, setFilteredUsers] = useState() // use when the data is coming fom api\n  const [filteredUsers, setFilteredUsers] = useState([])\n  const [searchText, setSearchText] = useState('');\n  \n\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n \n  const [selectedUser, setSelectedUser] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [addNewUserModal, setAddNewUserModal] = useState(false)\n  const [updateNewUserModal, setupdateNewUserModal] = useState(false)\n  const [deleteUserModal, setdeleteUserModal] = useState(false)\n\n  const deleteConfirmationDialog = useRef()\n  const [selected, setSelectedItem] = useState({})\n\n  const [editUser, setEditUser] = useState(null)\n  const [selectedUsers, setSelectedUsers] = useState(0)\n  const [viewDetails, setViewDetails] = useState()\nconst [openEditDataset,setOpenEditDataset] = useState(false)\n\n  const [datasets, setDatasets] = useState([]);\n  const [filteredDatasets,setFilteredDatasets] = useState([])\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState('');\n\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    // conditional rendring\n    // if(isLoggedInBool !== \"true\"){\n    //   history.push(\"/login\")\n    //     localStorage.clear();\n    // } else {\n    // getCustomersListData();\n    getViewProjectData();\n    // }\n  }, [])\n\n  const getViewProjectData = () => {\n    const authToken = JSON?.parse(localStorage.getItem(\"token\"));\n    const projectId = localStorage?.getItem(\"projId\")\n\n    if(authToken !== null){\n      getViewProjectDatasets(authToken, projectId, activePage)\n      .then(res => {\n        if(res?.status == 200){\n          console.log(res?.data?.results, \"project's all lists\")\n          setDatasets(res?.data?.results)\n          setFilteredDatasets(res?.data?.results);\n\n          console.log(res?.data?.count, \"total counts of datasets of projects\")\n          setTotalPageCount(parseInt(res?.data?.count));\n        } else {\n          console.log('Response from View project Datasets lists api:', res)\n        }\n      }).catch((error)=>{\n        console.log(\"error=\",error)\n      })\n    }\n  }\n\n\n  const EditModal = (item) => {\n    setSelectedItem(item)\n  \n    setOpenEditDataset(true)\n  }\n\n  const DeletModalOpen = (item) => {\n    setSelectedItem(item)\n    deleteConfirmationDialog.current.open()\n  }\n\n  const Delete_Datset = () => {\n\n\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n     \n      DeleteDataset(accessToken, selected?.id,selected?.project_id)\n        .then((res) => {\n          if (res?.status === 200) {\n            deleteConfirmationDialog.current.close()\n            getViewProjectData();\n            NotificationManager.success(\" Datset deleted !\")\n            console.log('Response from dataset  :', res)\n\n          } else {\n\n\n            NotificationManager.error(\"Delete_Datset deleting process unsucess!\")\n          }\n        })\n        .catch((err) => {\n          console.log('Response from err dataset  :', err)\n          NotificationManager.error(\"Delete_Datset deleting process unsucess!\")\n        })\n    }\n  }\n\n\n\n\n\n  const handlePageChange = (pageNumber) => {\n    console.log(\"pagination\", pageNumber)\n    if (activePage !== pageNumber) {\n      const authToken = JSON.parse(localStorage.getItem('token'))\n      const projectId = localStorage?.getItem(\"projId\")\n\n      if (authToken !== null) {\n        getViewProjectDatasets(authToken, projectId, pageNumber)\n          .then((res) => {\n            if (res?.status === 200) {\n              setDatasets(res?.data?.results);\n              setFilteredDatasets(res?.data?.results);\n              setTotalPageCount(res?.data?.count);\n              console.log('Response from customerlist :', res)\n            } else {\n              // console.log('Response from customerlist:', res)\n            }\n          })\n          .catch((err) => {\n            // console.log('Response from customerlist:', err)\n          })\n      }\n      setActivePage(pageNumber)\n    }\n  }\n\n  const handleView = () => {\n    history.push(\"/app/dashboard/createTask\")\n  }\n\n  console.log(filteredDatasets, \"filteredd datasets\")\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>Automaton | Customers List</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      <PageTitleBar\n        title={<IntlMessages id=\"sidebar.viewProject\" />}\n        match={props.match}\n      />\n                <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n             message=\"This will delete your Dataset permanently.\"\n             onConfirm={() => Delete_Datset()}\n             ref={deleteConfirmationDialog} />\n      <RctCollapsibleCard fullBlock>\n     \n        <div className=\"table-responsive\">\n          <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n            <div className='search-row'>\n              <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n              <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} \n              // onClick={getSearchedCustomerData}\n              >Search</Button>\n            </div>\n\n            <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} onClick={()=> history.push(\"/app/dashboard/createDataset\")}>Create Dataset</Button>\n\n\n\n\n          </div>\n          <table className=\"table table-middle table-hover mb-0\">\n            <thead>\n              <tr>\n                <th></th>\n                <th>Project ID</th>\n                <th>Dataset Name</th>\n                <th>Date Created</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n\n            {/****** mine filtered Table body, without ternary conditional value  *****/}\n            <tbody>\n              {filteredDatasets &&\n                filteredDatasets.map((dataset, i, data) => {\n                  // let active = user?.is_active\n                  return (\n\n                    <tr key={i}>\n                      <td></td>\n                      <td>{dataset?.project_id}</td>\n                      <td>\n                        <div className=\"media\">\n                          <div className=\"media-body\">\n                            <h5 className=\"mb-5 fw-bold\">{dataset?.dataset_name}</h5>\n                          </div>\n                        </div>\n                      </td>\n                      <td>{dataset?.date_created ? dataset?.date_created : '-'}</td>\n                      <td className=\"list-action d-flex \">\n                    \n                      <VisibilityIcon />\n                      <EditIcon className=\"mx-2\" onClick={()=> EditModal(dataset)}/> \n                     <DeleteIcon onClick={()=>{DeletModalOpen(dataset)}}/>\n                   \n                    </td>\n                    </tr>\n                  )\n                })\n\n              }\n\n            </tbody>\n\n          </table>\n          {filteredDatasets.length == 0 && <center style={{ color: \"black\" }}>  Data not available </center>}\n          {\n            datasets?.length > 0 &&\n            <div className='paginationDiv'>\n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={5}\n                pageRangeDisplayed={5}\n                onChange={(e) => handlePageChange(e)}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                hideFirstLastPages={true}\n                totalItemsCount={totalPageCount}\n              />\n            </div>\n          }\n        </div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n\n      <EditDataset selected={selected} Modalopen={openEditDataset} close={()=>setOpenEditDataset(false)} reloadlist={getViewProjectData}/>\n\n\n      {/* Modal for Add New Customer */}\n      {/* <Modal\n        isOpen={addNewUserModal}\n        // toggle={() => onAddUpdateUserModalClose()}\n        className=\"addCustomerModal \"\n\n      >\n        <ModalHeader \n        // toggle={() => onAddUpdateUserModalClose()}\n        >\n          <strong>Welcome</strong>\n        </ModalHeader>\n        <ModalBody>\n          <FormGroup row >\n\n\n            <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n              <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n\n                <span> Username <span className=\"text-danger madatory-field\">*</span></span>\n              </Label>\n              <Input\n                type=\"text\"\n                className=\"input-md\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                sm={10}\n              />\n            </Col>\n\n\n          </FormGroup>\n          <FormGroup row >\n\n\n            <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n              <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n\n                <span> Email Id <span className=\"text-danger madatory-field\">*</span></span>\n              </Label>\n              <Input\n                type=\"text\"\n                className=\"input-md\" \n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                sm={10}\n              />\n            </Col>\n\n\n          </FormGroup>\n        </ModalBody>\n        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n\n          <Button variant=\"contained\" color=\"primary\"\n          // onClick={() => addNewUser()} \n          className=\"py-2 mx-10\" style={{ color: \"#fff\", }} >\n            Send\n          </Button>\n          <Button variant=\"contained\"\n          // onClick={() => onAddUpdateUserModalClose()} \n          className=\"py-2 px-3 bg-danger text-white mx-10\" style={{ cursor: \"pointer\" }}>\n            Cancel\n          </Button>\n        </div>\n      </Modal> */}\n\n\n\n\n      {/* <Modal\n        isOpen={deleteUserModal}\n        className=\"addCustomerModal\"\n      >\n        <ModalBody>\n          Are you sure want to delete {selectedUser?.username} ?\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            // color=\"primary\"\n            style={{ backgroundColor: \"#0b3d45\", color: \"#fff\", borderRadius: \"6px\" }}\n            className=\"text-white\"\n          //  onClick={handleDeleteUser}\n          >\n            Delete\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            className=\"text-white btn-secondary\"\n            onClick={() => setdeleteUserModal(false)}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal> */}\n    </div>\n  )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;"],"sourceRoot":""}