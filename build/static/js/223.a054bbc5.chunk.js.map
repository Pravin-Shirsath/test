{"version":3,"sources":["Routes/forms/material-text-field/components/componets-field.js","Routes/forms/material-text-field/components/layouts.js","Routes/forms/material-text-field/components/input-adornment.js","Routes/forms/material-text-field/components/formated-input.js","Routes/forms/material-text-field/index.js"],"names":["Components","useState","name","setName","handleChange","event","target","value","noValidate","autoComplete","className","FormControl","fullWidth","InputLabel","htmlFor","Input","id","onChange","FormHelperText","disabled","error","Layouts","TextField","label","defaultValue","helperText","margin","InputAdornments","props","amount","password","weight","showPassword","setShowPassword","prop","startAdornment","InputAdornment","position","endAdornment","type","IconButton","onClick","onMouseDown","preventDefault","TextMaskCustom","inputRef","other","mask","placeholderChar","showMask","NumberFormatCustom","onValueChange","values","thousandSeparator","prefix","FormattedInputs","textmask","setTextmask","numberformat","setNumberformat","inputComponent","inputProps","currencies","TextFields","age","setAge","multiline","setMultiline","currency","setCurrency","PageTitleBar","title","IntlMessages","match","RctCollapsibleCard","heading","required","placeholder","rows","select","SelectProps","MenuProps","map","option","MenuItem","native","InputLabelProps","shrink","rowsMax"],"mappings":"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","file":"static/js/223.a054bbc5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Input, InputLabel, FormControl, FormHelperText} from '@material-ui/core';\n\nexport default function Components() {\n   const [name, setName] = useState('Composed TextField');\n   \n\tconst handleChange = event => {\n      setName(event.target.value)\n\t};\n\n   return (\n      <form noValidate autoComplete=\"off\">\n         <div className=\"row\">\n            <div className=\"col-sm-6 col-md-6 col-xl-3\">\n               <FormControl fullWidth>\n                  <InputLabel htmlFor=\"name-simple\">Name</InputLabel>\n                  <Input id=\"name-simple\" value={name} onChange={handleChange} />\n               </FormControl>\n            </div>\n            <div className=\"col-sm-6 col-md-6 col-xl-3\">\n               <FormControl fullWidth aria-describedby=\"name-helper-text\">\n                  <InputLabel htmlFor=\"name-helper\">Name</InputLabel>\n                  <Input id=\"name-helper\" value={name} onChange={handleChange} />\n                  <FormHelperText id=\"name-helper-text\">Some important helper text</FormHelperText>\n               </FormControl>\n            </div>\n            <div className=\"col-sm-6 col-md-6 col-xl-3\">\n               <FormControl disabled fullWidth>\n                  <InputLabel htmlFor=\"name-disabled\">Name</InputLabel>\n                  <Input id=\"name-disabled\" value={name} onChange={handleChange} />\n                  <FormHelperText>Disabled</FormHelperText>\n               </FormControl>\n            </div>\n            <div className=\"col-sm-6 col-md-6 col-xl-3\">\n               <FormControl error aria-describedby=\"name-error-text\" fullWidth>\n                  <InputLabel htmlFor=\"name-error\">Name</InputLabel>\n                  <Input id=\"name-error\" value={name} onChange={handleChange} />\n                  <FormHelperText id=\"name-error-text\">Error</FormHelperText>\n               </FormControl>\n            </div>\n         </div>\n      </form>\n   );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function Layouts(){\n   return (\n      <form noValidate autoComplete=\"off\">\n         <div className=\"row\">\n            <div className=\"col-sm-6 col-md-6 col-xl-4\">\n               <TextField fullWidth label=\"None\" id=\"margin-none\" defaultValue=\"Default Value\" helperText=\"Some important text\" />\n            </div>\n            <div className=\"col-sm-6 col-md-6 col-xl-4\">\n               <TextField fullWidth label=\"Dense\" id=\"margin-dense\" defaultValue=\"Default Value\" helperText=\"Some important text\" margin=\"dense\" />\n            </div>\n            <div className=\"col-sm-6 col-md-6 col-xl-4\">\n               <TextField fullWidth label=\"Normal\" id=\"margin-normal\" defaultValue=\"Default Value\" helperText=\"Some important text\" margin=\"normal\" />\n            </div>\n         </div>\n      </form>\n   );\n}\n","import React, { useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport default function InputAdornments(props){\n   const [amount, setAmount] = useState('');\n   const [password, setPassword] = useState('');\n   const [weight, setWeight] = useState('');\n   const [showPassword, setShowPassword] = useState(false);\n\t\n\tconst handleChange = (event,prop) => {\n\t\tprops(event.target.value);\n\t};\n\n\tconst handleMouseDownPassword = event => {\n\t\tevent.preventDefault();\n\t};\n\n\tconst handleClickShowPasssword = () => {\n      setShowPassword(!showPassword);\n\t};\n\n   return (\n      <form noValidate autoComplete=\"off\">\n         <div className=\"row\">\n            <div className=\"col-sm-6 col-md-6 col-xl-4\">\n               <FormControl fullWidth>\n                  <InputLabel htmlFor=\"amount\">Amount</InputLabel>\n                  <Input\n                     id=\"adornment-amount\"\n                     value={amount}\n                     onChange={(event) => handleChange(event,setAmount)}\n                     startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                  />\n               </FormControl>\n            </div>\n            <div className=\"col-sm-6 col-md-6 col-xl-4\">\n               <FormControl aria-describedby=\"weight-helper-text\" fullWidth>\n                  <Input\n                     id=\"adornment-weight\"\n                     value={weight}\n                     onChange={(event) => handleChange(event,setWeight)}\n                     endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n                  />\n                  <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n               </FormControl>\n            </div>\n            <div className=\"col-sm-6 col-md-6 col-xl-4\">\n               <FormControl fullWidth>\n                  <InputLabel htmlFor=\"password\">Password</InputLabel>\n                  <Input\n                     id=\"adornment-password\"\n                     type={showPassword ? 'text' : 'password'}\n                     value={password}\n                     onChange={(event) => handleChange(event,setPassword)}\n                     endAdornment={\n                        <InputAdornment position=\"end\">\n                           <IconButton\n                              onClick={handleClickShowPasssword}\n                              onMouseDown={handleMouseDownPassword}\n                           >\n                              {showPassword ? <i className=\"zmdi zmdi-eye-off\"></i> : <i className=\"zmdi zmdi-eye\"></i>}\n                           </IconButton>\n                        </InputAdornment>\n                     }\n                  />\n               </FormControl>\n            </div>\n         </div>\n      </form>\n   );\n}\n","import React, { useState } from 'react';\nimport MaskedInput from 'react-text-mask';\nimport { NumericFormat } from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n  return (\n    <MaskedInput\n      {...other}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n  return (\n    <NumericFormat\n      {...other}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default function FormattedInputs() {\n  const [textmask, setTextmask] = useState('(1  )    -    ');\n  const [numberformat, setNumberformat] = useState('1320');\n\n  const handleChange = (event, name) => {\n    name(event.target.value);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-md-6 col-xl-4\">\n        <Input fullWidth value={textmask} inputComponent={TextMaskCustom}\n          onChange={(event) => handleChange(event, setTextmask)}\n          inputProps={{ 'aria-label': 'Description', }}\n        />\n      </div>\n      <div className=\"col-sm-6 col-md-6 col-xl-4\">\n        <Input fullWidth value={numberformat} onChange={(event) => handleChange(event, setNumberformat)}\n          inputComponent={NumberFormatCustom}\n          inputProps={{ 'aria-label': 'Description', }}\n        />\n      </div>\n    </div>\n  )\n}\n","/**\n * Material Text Field\n */\nimport React, { useState } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport Components from './components/componets-field';\nimport Layouts from './components/layouts';\nimport InputAdornments from './components/input-adornment';\nimport FormattedInputs from './components/formated-input';\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nexport default function TextFields(props){\n   const [name,setName] = useState('Cat in the Hat');\n   const [age,setAge] = useState('');\n   const [multiline, setMultiline] = useState('Controlled');\n   const [currency, setCurrency] = useState('EUR');\n\n   const handleChange = (event,prop) => {\n      prop(event.target.value);\n   };\n\n   return (\n      <div className=\"textfields-wrapper\">\n         <PageTitleBar title={<IntlMessages id=\"sidebar.textField\" />} match={props.match} />\n         <RctCollapsibleCard heading=\"Simple Text Field\">\n            <form noValidate autoComplete=\"off\">\n            <div className=\"row\">\n               <div className=\"col-sm-6 col-md-6 col-xl-3\">\n                  <div className=\"form-group\">\n                     <TextField id=\"name\" fullWidth label=\"Name\" value={name} onChange={(event) => handleChange(event,setName)} />\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField id=\"uncontrolled\" fullWidth label=\"Uncontrolled\" defaultValue=\"foo\" />\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField required id=\"required\" fullWidth label=\"Required\" defaultValue=\"Hello World\" />\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField error id=\"error\" fullWidth label=\"Error\" defaultValue=\"Hello World\" />\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField id=\"search\" fullWidth label=\"Search field\" type=\"search\" />\n                  </div>\n               </div>\n               <div className=\"col-sm-6 col-md-6 col-xl-3\">\n                  <div className=\"form-group\">\n                  <TextField id=\"helperText\" fullWidth label=\"Helper text\" defaultValue=\"Default Value\" helperText=\"Some important text\" />\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField id=\"with-placeholder\" fullWidth label=\"With placeholder\" placeholder=\"Placeholder\" />\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField id=\"multiline-static\" fullWidth label=\"Multiline\" multiline rows=\"4\" defaultValue=\"Default Value\" />\n                  </div>\n               </div>\n               <div className=\"col-sm-6 col-md-6 col-xl-3\">\n                  <div className=\"form-group\">\n                  <TextField id=\"select-currency\" select label=\"Select\"\n                     value={currency}\n                     onChange={(event) => handleChange(event,setCurrency)}\n                     SelectProps={{\n                        MenuProps: {\n                        },\n                     }}\n                     helperText=\"Please select your currency\"\n                     fullWidth>\n                     {currencies.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                     ))}\n                  </TextField>\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField id=\"select-currency-native\" select label=\"Native select\"\n                     value={currency} onChange={(event) => handleChange(event,setCurrency)}\n                     SelectProps={{\n                        native: true,\n                     }}\n                     helperText=\"Please select your currency\"\n                     fullWidth>\n                     {currencies.map(option => (\n                        <option key={option.value} value={option.value}>\n                           {option.label}\n                        </option>\n                     ))}\n                  </TextField>\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField\n                     id=\"full-width\"\n                     label=\"Label\"\n                     InputLabelProps={{\n                        shrink: true,\n                     }}\n                     placeholder=\"Placeholder\"\n                     helperText=\"Full width!\"\n                     fullWidth\n                  />\n                  </div>\n               </div>\n               <div className=\"col-sm-6 col-md-6 col-xl-3\">\n                  <div className=\"form-group\">\n                  <TextField id=\"password\" fullWidth label=\"Password\" autoComplete=\"current-password\" />\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField id=\"multiline-flexible\" fullWidth label=\"Multiline\" multiline rowsMax=\"4\" value={multiline}\n                     onChange={(event) => handleChange(event,setMultiline)}\n                  />\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField id=\"textarea\" fullWidth label=\"With placeholder multiline\" placeholder=\"Placeholder\" multiline />\n                  </div>\n                  <div className=\"form-group\">\n                  <TextField id=\"number\" fullWidth label=\"Number\" value={age} onChange={(event) => handleChange(event,setAge)}\n                     type=\"number\"\n                     InputLabelProps={{\n                        shrink: true,\n                     }}\n                  />\n                  </div>\n               </div>\n            </div>\n            </form>\n         </RctCollapsibleCard>\n         <RctCollapsibleCard heading=\"Components\">\n            <Components />\n         </RctCollapsibleCard>\n         <RctCollapsibleCard heading=\"Layouts\">\n            <Layouts />\n         </RctCollapsibleCard>\n         <RctCollapsibleCard heading=\"Input Adornments\">\n            <InputAdornments />\n         </RctCollapsibleCard>\n         <RctCollapsibleCard heading=\"Formatted inputs\">\n            <FormattedInputs />\n         </RctCollapsibleCard>\n      </div>\n   );\n}\n"],"sourceRoot":""}