{"version":3,"sources":["../node_modules/@mui/icons-material/PictureAsPdf.js","../node_modules/@mui/icons-material/Image.js","../node_modules/@mui/icons-material/Description.js","../node_modules/@mui/icons-material/InsertDriveFile.js","../node_modules/@mui/icons-material/Check.js","Routes/dashboard/ViewDataset/index.js","Routes/dashboard/ReuseComponent/CustomBreadcrumbs.js","../node_modules/reactstrap/es/Col.js","Routes/dashboard/ReuseComponent/EditDataset.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","ViewDataset","props","history","useHistory","location","useState","searchText","setSearchText","loading","deleteConfirmationDialog","useRef","selected","openEditDataset","setOpenEditDataset","activePage","setActivePage","totalPageCount","setTotalPageCount","datasetFiles","setDatasetFiles","filteredDatasetFiles","setFilteredDatasetFiles","selectedFiles","setSelectedFiles","useEffect","localStorage","getItem","getDatasetFiles","authToken","JSON","parse","datasetId","ViewFiles","then","res","console","log","status","data","results","updatedResults","map","result","selectedFile","parseInt","count","catch","error","ErrorHandling","className","name","content","currentPage","state","breadcrumbData","title","message","ref","style","justifyContent","type","placeholder","border","borderBottom","onChange","e","target","variant","color","cursor","onClick","push","url","files","file","ind","file_type","href","file_name","find","obj","updatedFile","copySelectedFiles","indexOfSelectedFileInSelected","findIndex","item","id","splice","copyFilteredDatasetFiles","indexOfSelectedFile","indexOf","handleFileSelect","fontSize","fontWeight","length","itemsCountPerPage","pageRangeDisplayed","pageNumber","err","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","CreateTask","task_id","setItem","stringify","NotificationManager","Modalopen","close","reloadlist","CustomBreadcrumbs","HandleNavigate","index","myarray","i","undefined","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","columnProp","isObject","_classNames","colSizeInterfix","colClass","mapToCssModules","classNames","_colClass","classes","React","createElement","_extends","EditDataset","open","setOpen","datasetName","setDatasetName","comment","setComment","dataset_name","onClose","margin","padding","marginTop","row","for","height","marginBottom","accessToken","UpadatDataset","success"],"mappings":"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","file":"static/js/28.4bbacd8b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z\"\n}), 'PictureAsPdf');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"\n}), 'Image');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}), 'Description');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z\"\n}), 'InsertDriveFile');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;","import \"./viewdataset.css\"\n\n/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Button from '@material-ui/core/Button'\n\nimport Pagination from \"react-js-pagination\";\n\nimport { useHistory } from 'react-router-dom';\n\nimport { ErrorHandling } from \"Constants/ErrorHandling\";\n\nimport { NotificationManager } from 'react-notifications'\n// delete confirmation dialog\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n// update user form\n//  import UpdateUserForm from './UpdateUserForm'\n// page title bar\nimport PageTitleBar from '../../../Components/PageTitleBar/PageTitleBar'\n// intl messages\nimport IntlMessages from '../../../Util/IntlMessages'\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport {\n  CreateTask,\n  DeleteDataset,\n  getViewProjectDatasets,\n  ViewFiles\n} from '../../../Api/'\n\nimport FolderIcon from '@mui/icons-material/Folder';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport ImageIcon from '@mui/icons-material/Image';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport CheckIcon from '@mui/icons-material/Check';\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\n\nimport EditDataset from '../ReuseComponent/EditDataset';\nimport CustomBreadcrumbs from \"../ReuseComponent/CustomBreadcrumbs\";\n// import { ErrorHandling } from \"Constants/ErrorHandling\";\n\n\nexport default function ViewDataset(props) {\n  const history = useHistory();\n  const {location}=props\n  //  const [users, setUsers] = useState() // use when data is coming from api\n//   const [users, setUsers] = useState([])\n  //  const [filteredUsers, setFilteredUsers] = useState() // use when the data is coming fom api\n//   const [filteredUsers, setFilteredUsers] = useState([])\n  const [searchText, setSearchText] = useState('');\n  \n\n  const [username, setUsername] = useState(\"\")\n//   const [email, setEmail] = useState(\"\")\n \n//   const [selectedUser, setSelectedUser] = useState(null)\n  const [loading, setLoading] = useState(false)\n//   const [addNewUserModal, setAddNewUserModal] = useState(false)\n//   const [updateNewUserModal, setupdateNewUserModal] = useState(false)\n//   const [deleteUserModal, setdeleteUserModal] = useState(false)\n\n  const deleteConfirmationDialog = useRef()\n  const [selected, setSelectedItem] = useState({})\n\n//   const [editUser, setEditUser] = useState(null)\n//   const [selectedUsers, setSelectedUsers] = useState(0)\n//   const [viewDetails, setViewDetails] = useState()\nconst [openEditDataset,setOpenEditDataset] = useState(false)\n\n  const [datasets, setDatasets] = useState([]);\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState('');\n  const [datasetFiles, setDatasetFiles] = useState([]);\n  const [filteredDatasetFiles, setFilteredDatasetFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    // conditional rendring\n    // if(isLoggedInBool !== \"true\"){\n    //   history.push(\"/login\")\n    //     localStorage.clear();\n    // } else {\n    // getCustomersListData();\n    getDatasetFiles()\n    // }\n  }, [])\n\n//   const getViewProjectData = () => {\n//     const authToken = JSON?.parse(localStorage.getItem(\"token\"));\n//     const projectId = localStorage?.getItem(\"projId\")\n\n//     if(authToken !== null){\n//       getViewProjectDatasets(authToken, projectId, activePage)\n//       .then(res => {\n//         if(res?.status == 200){\n//           console.log(res?.data?.results, \"project's all lists\")\n//           setDatasets(res?.data?.results)\n//           setFilteredDatasets(res?.data?.results);\n\n//           console.log(res?.data?.count, \"total counts of datasets of projects\")\n//           setTotalPageCount(parseInt(res?.data?.count));\n//         } else {\n//           console.log('Response from View project Datasets lists api:', res)\n//         }\n//       }).catch((error)=>{\n//         console.log(\"error=\",error)\n//       })\n//     }\n//   }\n\nconst getDatasetFiles = () => {\n    const authToken = JSON.parse(localStorage.getItem(\"token\"));\n    const datasetId = localStorage?.getItem(\"datasetId\")\n    // const datasetId = 146\n\n    if(authToken !== null){\n        ViewFiles(authToken, datasetId, 1)\n        .then(res=> {\n            console.log(res, \"resss in viewDataset file\")\n            if(res?.status == 200){\n                console.log(res?.data?.results, \"dataaa of filesss in view datasetfile\")\n                const results = res?.data?.results;\n                const updatedResults = results.map(result=> {\n                    return {...result, selectedFile: false}\n                })\n\n                setDatasetFiles(updatedResults)\n                setFilteredDatasetFiles(updatedResults)\n                setTotalPageCount(parseInt(res?.data?.count));\n            }else {\n                console.log('Response from View project Datasets lists api in view project:', res)\n            }\n        })\n        .catch((error)=>{\n            // console.log(\"error in viewdataset:\",error)\n            // const status = error?.response?.status\n            // if(status == 401){\n            //   NotificationManager.error(\"Something went wrong !\");\n            //   localStorage.clear();\n            //   history.push(\"/login\")\n            // } else if(status == 500){\n            //   NotificationManager.error(\"Temporary connectivity issues.\");\n            // }\n\n            ErrorHandling(error)\n        })\n    } else {\n      // localStorage.clear();\n      // history.push(\"/login\")\n    }\n}\n\n  const handlePageChange = (pageNumber) => {\n    console.log(\"pagination\", pageNumber)\n    if (activePage !== pageNumber) {\n      const authToken = JSON.parse(localStorage.getItem('token'))\n      const datasetId = localStorage?.getItem(\"datasetId\")\n\n      if (authToken !== null) {\n          ViewFiles(authToken, datasetId, pageNumber)\n          .then((res) => {\n            if (res?.status === 200) {\n              setDatasetFiles(res?.data?.results);\n              setFilteredDatasetFiles(res?.data?.results);\n              setTotalPageCount(res?.data?.count);\n              console.log('Response from customerlist :', res)\n            } else {\n              // console.log('Response from customerlist:', res)\n            }\n          })\n          .catch((err) => {\n            // console.log('Response from customerlist:', err)\n          })\n      }\n      setActivePage(pageNumber)\n    }\n  }\n\n  const handleFileSelect = (file) => {\n    console.log(file, \"selecteddd filee\");\n\n    const ifAlreadyExists = selectedFiles.find(obj=> {\n      return obj.file_name == file.file_name\n    });\n\n    if(!ifAlreadyExists){\n      const updatedFile = {...file, selectedFile: true}\n      const copySelectedFiles = [...selectedFiles];\n      copySelectedFiles.push(updatedFile);\n      setSelectedFiles(copySelectedFiles);\n\n      const copyFilteredDatasetFiles = [...filteredDatasetFiles]\n      const indexOfSelectedFile = copyFilteredDatasetFiles.indexOf(file);\n      copyFilteredDatasetFiles[indexOfSelectedFile] = updatedFile\n      setFilteredDatasetFiles(copyFilteredDatasetFiles)\n    } else {\n      const updatedFile = {...file, selectedFile: false}\n      const copySelectedFiles = [...selectedFiles];\n      const indexOfSelectedFileInSelected = selectedFiles.findIndex(item=> {\n        return item.id == file.id\n      });\n      copySelectedFiles.splice(indexOfSelectedFileInSelected, 1)\n      setSelectedFiles(copySelectedFiles)\n\n      const copyFilteredDatasetFiles = [...filteredDatasetFiles];\n      const indexOfSelectedFile = copyFilteredDatasetFiles.indexOf(file);\n      copyFilteredDatasetFiles[indexOfSelectedFile] = updatedFile;\n      setFilteredDatasetFiles(copyFilteredDatasetFiles)\n    }\n  }\n   \n  \n\n  console.log(filteredDatasetFiles, \"filteredd datasets\")\n  console.log(datasetFiles, \"daaaaset Filesss\")\n  console.log(selectedFiles, \"Selected filessss\")\n  console.log(location, \"location in view dataset \")\n  console.log(props, \"proppsss in view dataset\")\n\n\n\n\n\n  const NewTaskNavigate = ()=>{\n    \n  \n     if(selectedFiles.length > 0){\n              const  breadcrumbData =location?.state?.breadcrumbData || []\n                     breadcrumbData.push( { name: 'View Dataset', url: '/app/dashboard/viewDataset' });\n            \n              const authToken = JSON.parse(localStorage.getItem(\"token\"));\n              const datasetId = localStorage.getItem(\"datasetId\")\n          \n          \n              if(authToken !== null){\n                CreateTask(authToken, datasetId)\n                  .then(res=> {\n                      console.log(res, \"CREATED TASK\")\n                      if(res?.status == 200){\n                        if(res.data?.task_id){\n                          localStorage.setItem(\"TaskId\",JSON.stringify(res?.data?.task_id))\n                          history.push(\"/app/dashboard/createTask\",{breadcrumbData:breadcrumbData,files:{\"count\":1,data:selectedFiles}});\n                        }\n                      }\n                  })\n                  .catch((error)=>{\n                     ErrorHandling(error)\n                  })\n              }\n          \n          \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     }else{\n      NotificationManager.error(\"Please  selected file !\");\n\n     }\n\n\n\n  }\n\n  const AllTask=()=>{\n    const  breadcrumbData =location?.state?.breadcrumbData || []\n             breadcrumbData.push( { name: 'View Dataset', url: '/app/dashboard/viewDataset' });\n             history.push(\"/app/dashboard/listOfTask\",{breadcrumbData:breadcrumbData,files:{\"count\":1,data:selectedFiles}});\n\n  }\n\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>Automaton | Customers List</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      {/* <PageTitleBar\n        title={<IntlMessages id=\"sidebar.viewDataset\" />}\n        match={props.match}\n      /> */}\n     <CustomBreadcrumbs    currentPage={\"View Dataset\"} data={location?.state?.breadcrumbData}  />\n\n                <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n             message=\"This will delete your Dataset permanently.\"\n            //  onConfirm={() => Delete_Datset()}\n             ref={deleteConfirmationDialog} />\n      <RctCollapsibleCard>\n     \n        <div className=\"table-responsive\">\n            <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n            <div className='search-row'>\n                <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n                <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} \n                // onClick={getSearchedCustomerData}\n                >Search</Button>\n            </div>\n\n            <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} \n             onClick={AllTask}\n            >All Task</Button>\n            </div>\n\n            <div className='viewDatasetFilesContainer'>\n                {\n                    filteredDatasetFiles && filteredDatasetFiles.map((file,ind)=> {\n                      console.log(file)\n                        return(\n                                // <div className=\"mainBox\" key={ind} onClick={()=>handleFileSelect(file)}>\n                                <div className=\"mainBox\" key={ind}>\n                                  <div className=\"imageContainer\">\n                                    {/* {\n                                      file.selectedFile ? <CheckBoxIcon className=\"folderIcon\" /> : (file.file_type == \"pdf\" ? <PictureAsPdfIcon className=\"folderIcon\" /> : (file.file_type == \"jpg\" || file.file_type == \"jpeg\" || file.file_type == \"png\" ? <ImageIcon className=\"folderIcon\" /> : (file.file_type == \"xlsx\" ? <DescriptionIcon className=\"folderIcon\" /> : <FolderIcon className=\"folderIcon\" />)))\n                                    } */}\n\n                                    {\n                                      file.file_type == \"pdf\" ? <a href={file?.file} target=\"_blank\"><PictureAsPdfIcon className=\"folderIcon\" /></a> : (file.file_type == \"jpg\" || file.file_type == \"jpeg\" || file.file_type == \"png\" ? <a href={file?.file} target=\"_blank\"><ImageIcon className=\"folderIcon\" /></a> : (file.file_type == \"xlsx\" ? <a href={file?.file} target=\"_blank\"><DescriptionIcon className=\"folderIcon\" /></a> : <a href={file?.file} target=\"_blank\"><InsertDriveFileIcon className=\"folderIcon\" /></a>))\n                                    }\n\n                                  </div>\n                                  <div className=\"nameContainer\">\n                                    <p>{file.file_name}</p>\n                                  </div>\n\n                                  <div className=\"checkDiv\" onClick={()=>handleFileSelect(file)}>{\n                                    file.selectedFile ? <CheckIcon fontSize=\"medium\" style={{fontWeight: \"600\"}} /> : \"\"\n                                  }</div>\n                                  \n                                </div>\n                        )\n                    })\n                }\n            </div>\n\n            {filteredDatasetFiles.length == 0 && <center style={{ color: \"black\" }}>Data not available </center>}\n          {\n            datasetFiles?.length > 0 &&\n            <div className='paginationDiv'> \n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={6}\n                pageRangeDisplayed={5}\n                onChange={(e) => handlePageChange(e)}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                hideFirstLastPages={true}\n                totalItemsCount={totalPageCount}\n              />\n            </div>\n          }\n        </div>\n        {loading && <RctSectionLoader />}\n        <div className=\"d-flex align-items-center justify-content-center\"> \n       <Button \n       variant=\"contained\"\n        color=\"primary\" \n        className=\"text-white mx-5 mb-30\"\n         style={{ cursor: \"pointer\" }} \n         onClick={NewTaskNavigate}\n        >\n        New Task\n        </Button></div>\n      </RctCollapsibleCard>\n\n      <EditDataset selected={selected} Modalopen={openEditDataset} close={()=>setOpenEditDataset(false)} reloadlist={getDatasetFiles}/>\n    </div>\n  )\n}\n","import React, { useEffect,useState } from 'react';\nimport { useHistory } from 'react-router';\n\n\nconst CustomBreadcrumbs = ({ currentPage, data =[] ,props}) => {\n\nconst [navData,setNavData]=useState(data)\n\n\nuseEffect(()=>{\n\n},[])\n\n  const history = useHistory();\n      console.log(data,\"daaata..\")\n  \n  const HandleNavigate = async (item,index)=>{\n    // const Data = [...navData]\n    let myarray=[]\n    // console.log(index,\"Data=\",Data)\n\n\n     for (let i = 0; i < index; i++) {\n       \n      myarray.push(data[i])\n     }\nconsole.log(myarray,\"myarray\")\n    \n    history.push(item.url,{breadcrumbData:myarray})\n  }\n\n  return (\n    <div className=\"page-title d-flex  align-items-center\">\n      {data != undefined  && data.length > 0 &&data.map((item, index) => (\n        <div key={index} className=\"page-title-wrap  d-flex  align-items-center mr-1\" style={{cursor:\"pointer\"}}>\n          \n        <i className=\"ti-angle-left text-dark  custombredcrum-icon\"></i> <span onClick={()=>HandleNavigate(item,index)} className=\"globalFontFamily custombredcrum-heding\">{item.name}</span>\n         \n        </div>\n      ))}\n      <div className=\"page-title-wrap   d-flex  align-items-center text-white m-0\"  style={{cursor:\"pointer\"}}><i className=\"ti-angle-left  text-white custombredcrum-icon\"></i><span className=\"globalFontFamily custombredcrum-heding\">{currentPage}</span></div>\n    </div>\n  );\n};\n\nexport default CustomBreadcrumbs;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { EditProjectDetails, UpadatDataset } from 'Api';\n\nconst EditDataset = ({ selected, Modalopen, close,reloadlist }) => {\n    const [open, setOpen] = useState(false)\n    console.log(selected)\n    const [datasetName, setDatasetName] = useState( \"\")\n    const [comment, setComment] = useState(\"\")\n    \n    \n\n\n    useEffect(() => {\n       if(selected){\n        setDatasetName(selected?.dataset_name || \"\")\n        setComment(selected?.comment)\n       }\n\n        console.log(datasetName,comment,\">>>>>.>>>\")\n        //  setImage(item?.project_image)\n        setOpen(Modalopen)\n\n    }, [Modalopen])\n\n\n\n\n   \n    const SaveEditDetails = () => {\n      \n            const accessToken = JSON.parse(localStorage.getItem('token'))\n           if(datasetName != \"\" || comment != \"\"){\n\n               if (accessToken !== null) {\n                   UpadatDataset(accessToken,selected?.id,datasetName,comment)\n                       .then((res) => {\n                           if (res?.status === 200) {\n                            if(reloadlist){\n                               reloadlist()\n                               setOpen(false)\n                               setDatasetName(\"\")\n                               setComment(\"\")\n                              \n                                if(close){\n                                   close()\n                                   }\n                                   NotificationManager.success(\" Datset updated succesfully!\") \n                            }\n                               console.log('Response from update dataset  :', res)\n                           } else {\n                               // console.log('Response from customerlist:', res)\n   \n                               NotificationManager.error(\"Dataset details update failed!\")\n                           }\n                       })\n                       .catch((err) => {\n                           console.log('Response from Upadat dataset:', err)\n                       })\n               }\n           }else{\n            NotificationManager.error(\"All field is empty\")\n           }\n\n    }\n\n\n    return (\n        <Dialog\n            onClose={() => (close(false), setOpen(false))}\n            open={open}\n\n        >\n            <DialogContent style={{ margin: 0, padding: 0 }}>\n                <div className=\"user-profile-widget\">\n                \n                    <div className=\"p-20\">\n                    \n                    <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={(e)=>setDatasetName(e.target.value)}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {(e)=>{setComment(e.target.value)}}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\"  className=\"mx-2 d-flex justify-content-center align-items-center px-3\" onClick={SaveEditDetails}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\"   className=\"mx-2 d-flex justify-content-center align-items-center\"  onClick={() => (close(false), setOpen(false))}>Cancel</Button>\n                               \n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default EditDataset\n"],"sourceRoot":""}