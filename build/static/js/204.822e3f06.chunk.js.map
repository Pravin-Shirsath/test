{"version":3,"sources":["Routes/dashboard/userManagment/AddNewUserForm.js","Routes/dashboard/userManagment/index.js"],"names":["AddNewUserForm","addNewUserDetails","onChangeAddNewUserDetails","Form","className","FormGroup","Label","for","Input","type","name","id","placeholder","value","onChange","e","target","email","first_name","last_name","mobile_number","UserManagement","props","useHistory","useRef","useState","user","phone","users","setUsers","filteredUsers","setFilteredUsers","selectedUser","loading","setLoading","addNewUserModal","setAddNewUserModal","updateNewUserModal","setupdateNewUserModal","deleteUserModal","setdeleteUserModal","searchText","setSearchText","activePage","setActivePage","totalPageCount","setTotalPageCount","username","addNewUserDetail","setAddNewUserDetail","openViewUserDialog","setOpenViewUserDialog","useEffect","localStorage","getItem","getCustomersListData","accessToken","JSON","parse","getCustomerList","then","res","status","data","results","parseInt","count","catch","err","response","key","onAddUpdateUserModalClose","Helmet","content","RctCollapsibleCard","fullBlock","style","justifyContent","border","borderBottom","backgroundColor","color","borderRadius","cursor","onClick","getSearchedCustomer","length","NotificationManager","error","preventDefault","opnAddNewUserModal","map","display","gap","href","fontSize","itemsCountPerPage","pageRangeDisplayed","pageNumber","handlePageChange","itemClass","linkClass","hideFirstLastPages","totalItemsCount","RctSectionLoader","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","padding","Button","variant","regexName","test","trim","addNewCustomer","toLowerCase","setTimeout","success","message","console","log","emailError","userNameError","addNewUser","updateCustomerDetails","deleteCustomerDetails","Dialog","onClose","open","DialogContent","user_type"],"mappings":"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","file":"static/js/204.822e3f06.chunk.js","sourcesContent":["/**\n * Add New User Form\n */\n import React from 'react';\n import { Form, FormGroup, Label, Input } from 'reactstrap';\n \n const AddNewUserForm = ({ addNewUserDetails, onChangeAddNewUserDetails }) => (\n     <Form className='addNewCustomerForm'>\n         <FormGroup>\n             <Label for=\"userName\">Username</Label>\n             <Input\n                 type=\"text\"\n                 name=\"userName\"\n                 id=\"userName\"\n                 placeholder=\"Enter Username\"\n                 value={addNewUserDetails.name}\n                 onChange={(e) => onChangeAddNewUserDetails('username', e.target.value)}\n             />\n         </FormGroup>\n         <FormGroup>\n             <Label for=\"userEmail\">Email</Label>\n             <Input\n                 type=\"email\"\n                 name=\"userEmail\"\n                 id=\"userEmail\"\n                 placeholder=\"Enter Email\"\n                 value={addNewUserDetails.email}\n                 onChange={(e) => onChangeAddNewUserDetails('email', e.target.value)}\n             />\n         </FormGroup>\n         <FormGroup>\n             <Label for=\"firstName\">First Name</Label>\n             <Input\n                 type=\"text\"\n                 name=\"firstName\"\n                 id=\"firstName\"\n                 placeholder=\"Enter First Name\"\n                 value={addNewUserDetails.first_name}\n                 onChange={(e) => onChangeAddNewUserDetails('first_name', e.target.value)}\n             />\n         </FormGroup>\n         <FormGroup>\n             <Label for=\"lastName\">Last Name</Label>\n             <Input\n                 type=\"text\"\n                 name=\"lastName\"\n                 id=\"lastName\"\n                 placeholder=\"Enter Last Name\"\n                 value={addNewUserDetails.last_name}\n                 onChange={(e) => onChangeAddNewUserDetails('last_name', e.target.value)}\n             />\n         </FormGroup>\n    \n         <FormGroup>\n             <Label for=\"Contact\">Contact Number</Label>\n             <Input\n                 type=\"number\"\n                 name=\"mobile\"\n                 id=\"mobile\"\n                 placeholder=\"Enter Contact Number\"\n                 value={addNewUserDetails.mobile_number}\n                 onChange={(e) => onChangeAddNewUserDetails('mobile_number', e.target.value)}\n             />\n         </FormGroup>\n         \n         \n         \n     </Form>\n );\n \n export default AddNewUserForm;\n ","/**\n * User Management Page\n */\n import React, { useEffect, useState, useRef } from 'react'\n import { Helmet } from 'react-helmet'\n import FormControlLabel from '@material-ui/core/FormControlLabel'\n import Button from '@material-ui/core/Button'\n import Checkbox from '@material-ui/core/Checkbox'\n import {\n   \n   Modal,\n   ModalHeader,\n   ModalBody,\n   ModalFooter,\n   Input,\n   Form,\n   FormGroup,\n   Label,\n } from 'reactstrap'\n import Dialog from '@material-ui/core/Dialog'\n import DialogContent from '@material-ui/core/DialogContent'\n import { NotificationManager } from 'react-notifications'\n import Pagination from \"react-js-pagination\";\n \n import { Link, useHistory } from 'react-router-dom';\n \n // delete confirmation dialog\n import DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n // add new user form\n import AddNewUserForm from './AddNewUserForm'\n // update user form\n//  import UpdateUserForm from './UpdateUserForm'\n // page title bar\n import PageTitleBar from '../../../Components/PageTitleBar/PageTitleBar'\n // intl messages\n import IntlMessages from '../../../Util/IntlMessages'\n // rct card box\n import RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n // rct section loader\n import RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\n import '../../../Assets/css/user.css'\n import {\n   addNewCustomer,\n   getCustomerList,\n   deleteCustomerDetails,\n   updateCustomerDetails,\n   getSearchedCustomer,\n } from '../../../Api/'\n \n export default function UserManagement(props) {\n   const history = useHistory();\n   const deleteConfirmationDialog = useRef()\n  //  const [users, setUsers] = useState() // use when data is coming from api\n  const [users, setUsers] = useState([\n    {\n      id: 1,\n      user: \"Ram\",\n      email: \"ram123@gmail.com\",\n      phone: \"1234567890\",\n    },\n    {\n      id: 2,\n      user: \"Shyam\",\n      email: \"shyam123@gmail.com\",\n      phone: \"5678123450\",\n    },\n    {\n      id: 3,\n      user: \"Arjun\",\n      email: \"arjun123@gmail.com\",\n      phone: \"9101112764\",\n    },\n    {\n      id: 4,\n      user: \"Shree\",\n      email: \"shree123@gmail.com\",\n      phone: \"0123410238\",\n    },\n    {\n      id: 5,\n      user: \"Laxmi\",\n      email: \"laxmi123@gmail.com\",\n      phone: \"4321347629\",\n    },\n    {\n      id: 6,\n      user: \"Laxman\",\n      email: \"laxman123@gmail.com\",\n      phone: \"4321347629\",\n    },\n    {\n      id: 7,\n      user: \"Vishnu\",\n      email: \"vishnu123@gmail.com\",\n      phone: \"4321347629\",\n    },\n    {\n      id: 8,\n      user: \"Ganesh\",\n      email: \"ganesh123@gmail.com\",\n      phone: \"4321347629\",\n    },\n    {\n      id: 9,\n      user: \"Mahesh\",\n      email: \"mahesh123@gmail.com\",\n      phone: \"4321347629\",\n    }\n   ])\n  //  const [filteredUsers, setFilteredUsers] = useState() // use when the data is coming fom api\n   const [filteredUsers, setFilteredUsers] = useState(\n    [\n      {\n        id: 1,\n        user: \"Ram\",\n        email: \"ram123@gmail.com\",\n        phone: \"1234567890\",\n      },\n      {\n        id: 2,\n        user: \"Shyam\",\n        email: \"shyam123@gmail.com\",\n        phone: \"5678123450\",\n      },\n      {\n        id: 3,\n        user: \"Arjun\",\n        email: \"arjun123@gmail.com\",\n        phone: \"9101112764\",\n      },\n      {\n        id: 4,\n        user: \"Shree\",\n        email: \"shree123@gmail.com\",\n        phone: \"0123410238\",\n      },\n      {\n        id: 5,\n        user: \"Laxmi\",\n        email: \"laxmi123@gmail.com\",\n        phone: \"4321347629\",\n      },\n      {\n        id: 6,\n        user: \"Laxman\",\n        email: \"laxman123@gmail.com\",\n        phone: \"4321347629\",\n      },\n      {\n        id: 7,\n        user: \"Vishnu\",\n        email: \"vishnu123@gmail.com\",\n        phone: \"4321347629\",\n      },\n      {\n        id: 8,\n        user: \"Ganesh\",\n        email: \"ganesh123@gmail.com\",\n        phone: \"4321347629\",\n      },\n      {\n        id: 9,\n        user: \"Mahesh\",\n        email: \"mahesh123@gmail.com\",\n        phone: \"4321347629\",\n      }\n     ])\n \n   const [selectedUser, setSelectedUser] = useState(null)\n   const [loading, setLoading] = useState(false)\n   const [addNewUserModal, setAddNewUserModal] = useState(false)\n   const [updateNewUserModal, setupdateNewUserModal] = useState(false)\n   const [deleteUserModal, setdeleteUserModal] = useState(false)\n   const [searchText, setSearchText] = useState('');\n   const [activePage , setActivePage] = useState(1)\n   const [totalPageCount, setTotalPageCount] = useState('');\n \n   const [addNewUserDetail, setAddNewUserDetail] = useState({\n     username: '',\n     email: '',\n     first_name: '',\n     last_name: '',\n     mobile_number: '',\n   })\n \n   const [updateUserDetail, setUpdateUserDetail] = useState({\n     first_name: '',\n     last_name: '',\n     mobile_number: '',\n   })\n \n\n   \n   const [openViewUserDialog, setOpenViewUserDialog] = useState(false)\n   const [editUser, setEditUser] = useState(null)\n   const [selectedUsers, setSelectedUsers] = useState(0)\n   const [viewDetails, setViewDetails] = useState()\n \n   useEffect(() => {\n     const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n     // conditional rendring\n     // if(isLoggedInBool !== \"true\"){\n     //   history.push(\"/signin\")\n     //     localStorage.clear();\n     // } else {\n       getCustomersListData();\n     // }\n   }, [])\n \n   const getCustomersListData = () => {\n     const accessToken = JSON.parse(localStorage.getItem('token'))\n     if (accessToken !== null) {\n       getCustomerList(accessToken, activePage)\n         .then((res) => {\n           if (res?.status === 200) {\n             setUsers(res?.data?.results);\n             setFilteredUsers(res?.data?.results);\n             setTotalPageCount(parseInt(res?.data?.count));\n             // console.log('Response from customerlist :', res)\n           } else {\n             // console.log('Response from customerlist:', res)\n           }\n         })\n         .catch((err) => {\n           // console.log(\"status of invalid token\", err?.response?.data, err?.response?.status)\n           if(err?.response?.status == 401){\n           // conditional rendring\n             // localStorage.clear();\n             // history.push(\"/signin\");\n             // window.location.reload();\n           } else {\n             // console.log('Response from customerlist:', err)\n           }\n         })\n     }\n   }\n \n \n \n   const getSearchedCustomerData = () => {\n     const accessToken = JSON.parse(localStorage.getItem('token'))\n     if (accessToken !== null) {\n       getSearchedCustomer(accessToken, searchText)\n         .then((res) => {\n           if (res?.status === 200 && res?.data?.results.length>0) {\n             setFilteredUsers(res?.data?.results);\n             setSearchText('')\n             // console.log('Response from customerlist :', res)\n           } else {\n             // console.log('Response from customerlist:', res)\n             setFilteredUsers(users);\n             setSearchText('');\n             NotificationManager.error(\"No user found!\")\n           }\n         })\n         .catch((err) => {\n           // console.log('Response from customerlist:', err)\n         })\n     }\n   }\n \n   /**\n    * On Delete\n    */\n   const onDelete = (data) => {\n     setdeleteUserModal(true)\n     setSelectedUser(data)\n   }\n \n   // API Call For delete User\n   const handleDeleteUser = () => {\n     const { id } = selectedUser\n \n     const accessToken = JSON.parse(localStorage.getItem('token'))\n     if (accessToken !== null) {\n       deleteCustomerDetails(accessToken, id)\n         .then((res) => {\n           if (res?.status === 200) {\n             setdeleteUserModal(false)\n             setLoading(true)\n             // console.log('Response', res)\n             setTimeout(() => {\n               setLoading(false)\n               getCustomersListData()\n               NotificationManager.success('User successfully deleted !! ')\n             }, 2000)\n           } else if (res?.status === 400) {\n             setdeleteUserModal(false)\n             NotificationManager.error('Error while deleting customer')\n           } else {\n             setdeleteUserModal(false)\n             NotificationManager.error('Error while deleting customer')\n           }\n         })\n         .catch((err) => {\n           setdeleteUserModal(false)\n           NotificationManager.error('Error while deleting customer')\n         })\n     }\n   }\n \n   /**\n    * Open Add New User Modal\n    */\n   const opnAddNewUserModal = (e) => {\n     e.preventDefault()\n     setAddNewUserModal(true)\n   }\n \n   const opnUpdateUserModal = (user) => {\n     // e.preventDefault()\n     // console.log(\"open update user modal function ran\")\n     setupdateNewUserModal(true)\n     setAddNewUserDetail(user)\n     setSelectedUser(user)\n     // console.log(\"update user\",user)\n   }\n \n   /**\n    * On Change Add New User Details\n    */\n   const onChangeAddNewUserDetails = (key, value) => {\n     setAddNewUserDetail({\n       ...addNewUserDetail,\n       [key]: value,\n     })\n   }\n \n   /**\n    * Add New User\n    */\n   const addNewUser = () => {\n     const {username, email, first_name, last_name, mobile_number} = addNewUserDetail;\n     let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n     let regexName = /^[a-zA-Z]{1,30}$/; // only alpha, no space, min-1, max-30\n     let regexContact = /^\\d{10}$/; // only number 0-9 length-10\n \n     if (username !== '' && email !== '' && first_name !== '' && last_name !== '' && mobile_number !== '') {\n       if(regexEmail.test(email.trim(\"\")) === true){\n         if(regexName.test(first_name.trim(\"\")) === true){\n           if(regexName.test(last_name.trim(\"\")) === true){\n             if(regexContact.test(mobile_number) === true){\n               const accessToken = JSON.parse(localStorage.getItem('token'))\n               if (accessToken !== null) {\n                 addNewCustomer(accessToken, username.toLowerCase(), email.toLowerCase(), first_name, last_name, mobile_number,)\n                   .then((res) => {\n                     if (res?.status === 200) {\n                       setAddNewUserModal(false)\n                       setLoading(true)\n \n                       setTimeout(() => {\n                         setLoading(false)\n                         getCustomersListData()\n                         NotificationManager.success(res?.data?.message)\n                       }, 2000)\n \n                       setAddNewUserDetail({\n                         username: '',\n                         email: '',\n                         first_name: '',\n                         last_name: '',\n                         mobile_number: '',\n                       })\n \n                       console.log('Response from addcustomer:', res)\n                     }\n                   })\n                   .catch((err) => {\n                     // console.log(err, \"errorrr\")\n                     // console.log(err?.response, \"errorrr resposne\")\n                     // console.log(err?.response?.data, \"errorrr resposne\")\n \n                     if(err?.response?.status === 400){\n                       let emailError = err?.response?.data?.email?.[0];\n                       let userNameError = err?.response?.data?.username?.[0];\n \n                       if(emailError && userNameError){\n                         NotificationManager.error(emailError);\n                         NotificationManager.error(userNameError);\n                       } else if(emailError){\n                         NotificationManager.error(emailError);\n                       } else if(userNameError){\n                         NotificationManager.error(userNameError);\n                       }\n                     } else if(err?.response?.status === 500){\n                       NotificationManager.error(\"Internal server error !\");\n                     }\n                   })\n               }\n             } else {\n               NotificationManager.error('Mobile Number must be 10 digits!');\n             }\n           } else {\n             NotificationManager.error('Last name must contain only alphabet and no spacings!');\n           }\n         } else {\n           NotificationManager.error('First name must contain only alphabet and no spacings!');\n         }   \n       } else {\n         NotificationManager.error('Invalid email address format!');\n       }\n     } else {\n       NotificationManager.error('Please provide all customer details')\n     }\n   }\n \n   /**\n    * Update User\n    */\n   const updateUser = () => {\n     // console.log('Edit user:', addNewUserDetail)\n     const { first_name, last_name, mobile_number, id } = addNewUserDetail\n     let regexName = /^[a-zA-Z]{1,30}$/; // only alpha, no space, min-1, max-30\n     let regexContact = /^\\d{10}$/; // only number 0-9 length-10\n \n     if (first_name !== '' && last_name !== '' && mobile_number !== '') {\n       if(regexName.test(first_name) === true){\n         if(regexName.test(last_name) === true){\n           if(regexContact.test(mobile_number) === true){\n             const accessToken = JSON.parse(localStorage.getItem('token'))\n             if (accessToken !== null) {\n               updateCustomerDetails(accessToken,first_name, last_name, mobile_number, id)\n                 .then((res) => {\n                   if (res?.status === 200) {              \n                     setupdateNewUserModal(false)\n                     setLoading(true)\n                     setTimeout(() => {\n                       setLoading(false)\n                       getCustomersListData();\n                       NotificationManager.success('Updated user successfully!');\n                     }, 2000)\n                     setAddNewUserDetail({\n                       username: '',\n                       email: '',\n                       first_name: '',\n                       last_name: '',\n                       mobile_number: '',\n                     })\n                     console.log('Response from updatecustomer:', res)\n                   } else if (res?.status === 400) {\n                     setAddNewUserModal(false)\n                     NotificationManager.error(res?.data?.email, res?.data?.username)\n                   } else {\n                     setAddNewUserModal(false)\n                     NotificationManager.error('Error while updating customer')\n                   }\n                 })\n                 .catch((err) => {\n                   NotificationManager.error('Error while updating customer')\n                 })\n             }\n           } else {\n             NotificationManager.error('Mobile Number must be 10 digits!');\n           }\n         } else {\n           NotificationManager.error('Last name must contain only alphabet and no spacings!');\n         }\n       } else {\n         NotificationManager.error('First name must contain only alphabet and no spacings!');\n       }\n     } else {\n       NotificationManager.error('Please provide all customer details')\n     }\n   }\n \n   const handleUpdateCancel = () => {\n     setupdateNewUserModal(false)\n     setAddNewUserDetail({\n       username: '',\n       email: '',\n       first_name: '',\n       last_name: '',\n       mobile_number: '',\n     })\n   }\n \n   // View User Details\n   const viewUserDetail = (data) => {\n     console.log('User information:', data)\n     setOpenViewUserDialog(true)\n     setSelectedUser(data)\n   }\n \n   /**\n    * On Edit User\n    */\n   const onEditUser = (user) => {\n     setupdateNewUserModal(true)\n     setEditUser(user)\n   }\n \n   /**\n    * On Add & Update User Modal Close\n    */\n   const onAddUpdateUserModalClose = () => {\n     setAddNewUserModal(false)\n     // setEditUser(null)\n     setAddNewUserDetail({\n       username: '',\n       email: '',\n       first_name: '',\n       last_name: '',\n       mobile_number: '',\n     })\n   }\n \n   /**\n    * On Update User Details\n    */\n   const onUpdateUserDetails = (key, value) => {\n     setUpdateUserDetail({\n       ...updateUserDetail,\n       [key]: value,\n     })\n   }\n \n \n   const handleSearchData = () => {\n     // console.log(\"Search Text\", searchText,filteredUsers)\n     if (searchText) {\n       const newData = users.filter(item => {\n         const itemData = item.username ? item.username.toUpperCase() : ''.toUpperCase();\n         const textData = searchText.toUpperCase();\n         return itemData.indexOf(textData) > -1;\n       });\n       setFilteredUsers(newData);\n       setSearchText('')\n     } else {\n       setFilteredUsers(users);\n       // setsearch(text);\n     }\n   }\n \n   const handlePageChange = (pageNumber) => {\n     // console.log(\"pagination\", pageNumber)\n        if (activePage !== pageNumber) {\n         const accessToken = JSON.parse(localStorage.getItem('token'))\n         if (accessToken !== null) {\n           getCustomerList(accessToken, pageNumber)\n             .then((res) => {\n               if (res?.status === 200) {\n                 setUsers(res?.data?.results);\n                 setFilteredUsers(res?.data?.results);\n                 setTotalPageCount(res?.data?.count);\n                 // console.log('Response from customerlist :', res)\n               } else {\n                 // console.log('Response from customerlist:', res)\n               }\n             })\n             .catch((err) => {\n               // console.log('Response from customerlist:', err)\n             })\n         }\n      \n       setActivePage(pageNumber)\n     } \n   }\n \n   // console.log(addNewUserDetail, \"addNewUserDetail data\")\n   // console.log(users, \"usersss\")\n   // console.log(filteredUsers, \"filtered user\")\n   return (\n     <div className=\"user-management\">\n       <Helmet>\n         <title>Automaton | Customers List</title>\n         <meta name=\"description\" content=\"Automaton Widgets\" />\n       </Helmet>\n       {/* <PageTitleBar\n         title={<IntlMessages id=\"sidebar.userManagement\" />}\n         match={props.match}\n       /> */}\n       <RctCollapsibleCard fullBlock>\n         <div className=\"table-responsive\">\n           <div className=\"d-flex py-20 px-10 border-bottom\" style={{justifyContent:'space-between'}}>\n           <div className='search-row'>\n               <input type=\"text\" placeholder='Search' className='search-input py-2' style={{border:\"none\", borderBottom:\"1px solid black\"}} value={searchText} onChange={(e) => setSearchText(e.target.value)}/>\n               <button style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\", cursor: \"pointer\"}} className='btn-block py-2 m-auto' onClick={getSearchedCustomerData}>Search</button>\n             </div> \n         \n \n               <button\n                   onClick={(e) => opnAddNewUserModal(e)}\n                   style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\", cursor: \"pointer\"}} \n                   className='py-2 px-2'\n                 >\n                 <i className=\"zmdi zmdi-plus\"></i> Users\n               </button>\n           \n           </div>\n           <table className=\"table table-middle table-hover mb-0\">\n             <thead>\n               <tr>\n                 <th></th>\n                 <th>No</th>\n                 <th>User</th>\n                 <th>Email</th>\n                 <th>Phone</th>\n                 <th>Action</th>\n               </tr>\n             </thead>\n \n             {/****** mine filtered Table body, without ternary conditional value  *****/}\n             <tbody>\n             {filteredUsers &&\n                 filteredUsers.map((user, id) => (\n                   <tr key={id}>\n                     <td></td>\n                     <td>{user?.id}</td>\n                     <td>\n                       <div className=\"media\">\n                         <div className=\"media-body\">\n                           <h5 className=\"mb-5 fw-bold\">{user?.user}</h5>\n                         </div>\n                       </div>\n                     </td>\n                     <td>{user?.email ? user?.email : '-'}</td>\n                     <td>\n                       {user?.phone ? user?.phone : '-'}\n                     </td>\n \n                     <td className=\"list-action\" style={{display:\"flex\", gap:\"3px\"}}>\n                       {/* <button\n                         type=\"button\"\n                         className=\"rct-link-btn\"\n                         onClick={() => viewUserDetail(user)}\n                       >\n                         <i className=\"ti-eye\"></i>\n                       </button>\n                       <button\n                         type=\"button\"\n                         className=\"rct-link-btn\"\n                         onClick={() => opnUpdateUserModal(user)}\n                         // onClick={() => onEditUser(user)}\n                       >\n                         <i className=\"ti-pencil\"></i>\n                       </button>\n                       <button\n                         type=\"button\" \n                         className=\"rct-link-btn\"\n                         onClick={() => onDelete(user)}\n                       >\n                         <i className=\"ti-close\"></i>\n                       </button> */}\n\n                       <a href='#' style={{cursor:\"pointer\", color:\"blue\", fontSize:\"15px\"}}>Unable</a>\n                       <span>/</span>\n                       <a href='#' style={{cursor:\"pointer\", color:\"blue\", fontSize:\"15px\"}}>Disable</a>\n                     </td>\n                   </tr>\n                 ))}\n             </tbody>\n \n           </table> \n            {\n               users?.length > 0 &&\n               <div className='paginationDiv'>\n                 <Pagination\n                             activePage={activePage}\n                             itemsCountPerPage={10}\n                             pageRangeDisplayed={5}\n                             onChange={(e) => handlePageChange(e)}\n                              itemClass=\"page-item\"\n                             linkClass=\"page-link\"\n                             hideFirstLastPages={true}\n                             totalItemsCount={totalPageCount}\n                         />\n \n                    \n                   </div>\n             }\n         </div>\n         {loading && <RctSectionLoader />}\n       </RctCollapsibleCard>\n \n       {/* Modal for Add New Customer */}\n       <Modal\n         isOpen={addNewUserModal}\n         toggle={() => onAddUpdateUserModalClose()}\n         className=\"addCustomerModal\"\n       >\n         <ModalHeader toggle={() => onAddUpdateUserModalClose()}>\n           <strong>Welcome</strong>\n         </ModalHeader>\n         <ModalBody>\n           <AddNewUserForm\n             addNewUserDetails={addNewUserDetail}\n             onChangeAddNewUserDetails={onChangeAddNewUserDetails}\n           />\n         </ModalBody>\n         <ModalFooter style={{display:\"flex\", justifyContent:\"space-between\", padding:\"20px 50px\"}}>\n \n           <Button variant=\"contained\" onClick={() => addNewUser()} className=\"py-2\" style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\"}} >\n               Send\n           </Button>\n           <Button variant=\"contained\"  onClick={() => onAddUpdateUserModalClose()} className=\"py-2 px-3\" style={{backgroundColor: \"#E0E0E0\", color:\"#000\", borderRadius: \"6px\", cursor:\"pointer\"}}>\n               Cancel\n           </Button>\n         </ModalFooter>\n       </Modal>\n \n       {/* Modal for update customer */}\n       <Modal\n         isOpen={updateNewUserModal}\n         className=\"addCustomerModal\"\n       >\n         <ModalHeader toggle={() => setupdateNewUserModal(false)}>\n           Update Customer\n         </ModalHeader>\n         <ModalBody>\n          \n           <Form>\n             <FormGroup>\n               <Label for=\"firstName\">First Name</Label>\n               <Input\n                 type=\"text\"\n                 name=\"firstName\"\n                 id=\"firstName\"\n                 placeholder=\"Enter First Name\"\n                 value={addNewUserDetail.first_name}\n                  onChange={(e) => onChangeAddNewUserDetails('first_name', e.target.value)}\n               />\n             </FormGroup>\n             <FormGroup>\n               <Label for=\"lastName\">Last Name</Label>\n               <Input\n                 type=\"text\"\n                 name=\"lastName\"\n                 id=\"lastName\"\n                 placeholder=\"Enter Last Name\"\n                  value={addNewUserDetail.last_name}\n                  onChange={(e) => onChangeAddNewUserDetails('last_name', e.target.value)}\n               />\n             </FormGroup>\n             <FormGroup>\n               <Label for=\"Contact\">Contact Number</Label>\n               <Input\n                 type=\"number\"\n                 name=\"mobile\"\n                 id=\"mobile\"\n                 placeholder=\"Enter Contact Number\"\n                  value={addNewUserDetail.mobile_number}\n                  onChange={(e) => onChangeAddNewUserDetails('mobile_number', e.target.value)}\n               />\n             </FormGroup>\n           </Form>\n         </ModalBody>\n         <ModalFooter>\n           <Button\n             variant=\"contained\"\n             style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\"}} \n             className=\"text-white\"\n             onClick={updateUser}\n           >\n             Update\n           </Button>\n \n           <Button\n             variant=\"contained\"\n             className=\"text-white btn-secondary\"\n             onClick={handleUpdateCancel}\n           >\n             Cancel\n           </Button>\n         </ModalFooter>\n       </Modal>\n \n       <Modal\n         isOpen={deleteUserModal}\n         className=\"addCustomerModal\"\n       >\n         <ModalBody>\n           Are you sure want to delete {selectedUser?.username} ?\n         </ModalBody>\n         <ModalFooter>\n           <Button\n             variant=\"contained\"\n             // color=\"primary\"\n             style={{backgroundColor: \"#0b3d45\", color:\"#fff\", borderRadius: \"6px\"}} \n             className=\"text-white\"\n             onClick={handleDeleteUser}\n           >\n             Delete\n           </Button>\n \n           <Button\n             variant=\"contained\"\n             className=\"text-white btn-secondary\"\n             onClick={() => setdeleteUserModal(false)}\n           >\n             Cancel\n           </Button>\n         </ModalFooter>\n       </Modal>\n \n       <Dialog\n         onClose={() => setOpenViewUserDialog(false)}\n         open={openViewUserDialog}\n       >\n         <DialogContent className=\"view_profile\">\n           {selectedUser !== null && (\n             <div>\n               <div className=\"clearfix\">\n                 <div className=\"media pull-left\">\n                   <div className=\"media-body\">\n                     <div>\n                       <p>Username : </p>\n                       <span className=\"fw-bold\">{selectedUser.username}</span>\n                     </div>\n                     <div>\n                       <p>First Name : </p>\n                       <span className=\"fw-bold\">{selectedUser.first_name}</span>\n                     </div>\n                     <div>\n                       <p>Last Name : </p>\n                       <span className=\"fw-bold\">{selectedUser.last_name}</span>\n                     </div>\n \n                     <div>\n                       <p>Email : </p>\n                       <span className=\"fw-bold\">{selectedUser.email}</span>\n                     </div>\n                     <div>\n                       <p>Contact Number : </p>\n                       <span className=\"fw-bold\">\n                         {selectedUser.mobile_number}\n                       </span>\n                     </div>\n \n                     <div>\n                       <p>User Type : </p>\n                       <span className=\"badge badge-warning\">\n                         {selectedUser.user_type}\n                       </span>\n                     </div>\n                   </div>\n                 </div>\n               </div>\n             </div>\n           )}\n         </DialogContent>\n       </Dialog>\n     </div>\n   )\n }\n "],"sourceRoot":""}