{"version":3,"sources":["Components/Widgets/ProjectTaskManagement.js","../../node_modules/@material-ui/core/esm/TextField/TextField.js","Routes/widgets/data.js"],"names":["ProjectTaskManagement","useState","sectionReload","setSectionReload","projectTaskData","projectData","setProjectData","collapse","setCollapse","selectedProject","setSelectedProject","taskTitle","taskDate","status","color","completed","team","newTask","setNewTask","className","autoHeight","autoHeightMin","autoHeightMax","autoHide","Object","keys","map","project","key","onClick","openForm","data","subKey","button","title","getTheDate","date","member","nestedSubkey","id","name","placement","src","avatar","alt","isOpen","onChange","e","target","value","label","type","fullWidth","InputLabelProps","shrink","timestamp","convertDateToTimeStamp","onChangeDueDate","variant","setTimeout","projects","push","addNewTask","closeForm","customClasses","disabled","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextField","React","props","ref","autoComplete","_props$autoFocus","autoFocus","children","classes","_props$color","defaultValue","_props$disabled","_props$error","error","FormHelperTextProps","_props$fullWidth","helperText","hiddenLabel","inputProps","InputProps","inputRef","_props$multiline","multiline","onBlur","onFocus","placeholder","_props$required","required","rows","rowsMax","maxRows","minRows","_props$select","select","SelectProps","_props$variant","other","_objectWithoutProperties","InputMore","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","_extends","FormControl","clsx","root","InputLabel","htmlFor","Select","labelId","input","FormHelperText","withStyles","dailySales","chartdata","labels","spaceUsed","chartData","datasets","backgroundColor","ChartConfig","primary","info","hoverBackgroundColor","trafficChannel","siteVisitors","process","uv","pv","emailStatisticsData","white","borderColor","borderWidth","hoverBorderColor","dataUsed","barPercentage","totalUsed","productStats","fill","tension","customLegends","class","emailStatisticsV2Data","open","bounce","unsubscribe","totalRevenue","lastWeek","onlineVisitorsData","markers","latLng","totalVisitors","trafficSources","totalActiveUsers","totalEarnsV2","legend","totalEarns","default","lineTension","fillOpacity","hexToRgbA","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","warning"],"mappings":"qSAmMeA,UAjLf,WACG,MAA0CC,oBAAS,GAAM,mBAAlDC,EAAa,KAAEC,EAAgB,KACtC,EAAsCF,mBAASG,KAAgB,mBAAxDC,EAAW,KAAEC,EAAc,KAClC,EAAgCL,oBAAS,GAAM,mBAAxCM,EAAQ,KAAEC,EAAW,KAC5B,EAA8CP,mBAAS,MAAK,mBAArDQ,EAAe,KAAEC,EAAkB,KAC1C,EAA8BT,mBAAS,CACpCU,UAAW,GACXC,SAAU,KACVC,OAAQ,GACRC,MAAO,GACPC,WAAW,EACXC,KAAM,OACP,mBAPKC,EAAO,KAAEC,EAAU,KA4D1B,OACG,sBAAKC,UAAU,0BAAyB,UACpCjB,GACE,cAAC,IAAgB,IAEpB,cAAC,aAAU,CAACiB,UAAU,aAAaC,YAAU,EAACC,cAAe,IAAKC,cAAe,IAAKC,UAAQ,WAC3F,oBAAIJ,UAAU,OAAM,SAChBK,OAAOC,KAAKpB,GAAaqB,KAAI,SAACC,EAASC,GAAG,OACxC,+BACG,sBAAKT,UAAU,kFAAiF,UAC7F,oBAAIA,UAAU,oBAAmB,SAAEQ,IACnC,cAAC,IAAU,CAACE,QAAS,kBAvDzB,SAACD,GACflB,EAAmBkB,GACnBpB,GAAY,EACf,CAoDgDsB,CAASH,EAAQ,EAAC,SAC1C,mBAAGR,UAAU,iBAAgB,SAAC,oBAGpC,cAAC,IAAI,CAACA,UAAU,MAAK,SACjBd,GAAeA,EAAYsB,GAASD,KAAI,SAACK,EAAMC,GAAM,OACnD,eAAC,IAAQ,CACNC,QAAM,EACNd,UAAU,qEAAoE,UAG9E,sBAAKA,UAAU,kBAAiB,UAC7B,oBAAIA,UAAU,OAAM,SAAEY,EAAKG,QAC3B,sBAAMf,UAAU,kBAAiB,SAAEgB,YAAWJ,EAAKK,KAAM,oBAE5D,sBAAKjB,UAAU,sCAAqC,UACjD,+BAAM,cAAC,IAAK,CAACL,MAAOiB,EAAKjB,MAAM,SAAEiB,EAAKlB,WACtC,qBAAKM,UAAU,cAAa,SACzB,oBAAIA,UAAU,kBAAiB,SAC3BY,EAAKf,KAAKU,KAAI,SAACW,EAAQC,GAAY,OACjC,oBAAInB,UAAU,mBAAkB,SAC7B,cAAC,IAAO,CAACoB,GAAG,cAAcL,MAAOG,EAAOG,KAAMC,UAAU,MAAK,SAC1D,cAAC,IAAM,CAACC,IAAKL,EAAOM,OAAQC,IAAI,SAASzB,UAAU,sBAFnBmB,EAIjC,aAfZN,EAoBG,MAGfvB,IAAoBkB,GACnB,cAAC,IAAQ,CAACkB,OAAQtC,EAAS,SACxB,sBAAKY,UAAU,6DAA4D,UACxE,sBAAKA,UAAU,QAAO,UACnB,cAAC,IAAS,CACPoB,GAAG,WACHO,SAAU,SAACC,GAAC,OAAK7B,EAAW,2BAAKD,GAAO,IAAEN,UAAWoC,EAAEC,OAAOC,QAAQ,EACtEA,MAAOhC,EAAQN,UACfuC,MAAM,YACNC,KAAK,OACLC,WAAS,EACTjC,UAAU,eAEb,cAAC,IAAS,CACPoB,GAAG,OACHW,MAAM,WACNC,KAAK,OACLE,gBAAiB,CACdC,QAAQ,GAEXF,WAAS,EACTN,SAAU,SAACC,GAAC,OAtGrB,SAACA,GACtB,IAAIQ,EAAYC,YAAuBT,EAAEC,OAAOC,OAChD/B,EAAW,2BAAKD,GAAO,IAAEL,SAAU2C,IACtC,CAmGkDE,CAAgBV,EAAE,EACnC5B,UAAU,YAGhB,sBAAKA,UAAU,gDAA+C,UAC3D,cAAC,IAAM,CAACuC,QAAQ,YAAY5C,MAAM,UAAUK,UAAU,2BAA2BU,QAAS,kBArGrG,SAACD,GACjB,IAAQjB,EAAwBM,EAAxBN,UAAWC,EAAaK,EAAbL,SACnB,GAAkB,KAAdD,GAAoBC,EAAU,CAC/B,IAAIK,EAAU,CACXiB,MAAOvB,EACPyB,KAAMxB,EACNC,OAAQ,WACRC,MAAO,UACPE,KAAM,CACH,CACGuB,GAAI,EACJC,KAAM,SACNG,OAAQ,gEAIjBxC,GAAiB,GACjBK,GAAY,GACZmD,YAAW,WACR,IAAIC,EAAWvD,EACfuD,EAAShC,GAAKiC,KAAK5C,GACnBX,EAAesD,GACfpD,GAAY,GACZL,GAAiB,GACjBe,EAAW,CACRP,UAAW,GACXC,SAAU,MAEhB,GAAG,KACN,CACH,CAuE8HkD,CAAWnC,EAAQ,EAAC,SACjH,+BAAM,cAAC,IAAY,CAACY,GAAG,mBAE1B,cAAC,IAAM,CAACmB,QAAQ,YAAY7B,QAAS,kBA1HjD,SAACD,GAChBlB,EAAmBkB,GACnBpB,GAAY,EACf,CAuHyEuD,CAAUpC,EAAQ,EAAER,UAAU,+BAA8B,SACpG,+BAAM,cAAC,IAAY,CAACoB,GAAG,gCAjEhCX,EAuEJ,QAId,eAAC,IAAa,CAACoC,cAAc,qDAAoD,UAC9E,sBAAK7C,UAAU,yDAAwD,UACpE,sBAAMA,UAAU,uBAAsB,SAAC,cAAC,IAAY,CAACoB,GAAG,4BACxD,qBAAKpB,UAAU,mBAAkB,SAC9B,cAAC,IAAS,CAACA,UAAU,OAAM,SACxB,eAAC,IAAK,CACHgC,KAAK,SACLhC,UAAU,QACVqB,KAAK,SACLD,GAAG,gBAAe,UAElB,wBAAQ0B,UAAQ,WAAC,mBACjB,wBAAQhB,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,eAAc,SAAC,iBAC7B,wBAAQA,MAAM,WAAU,SAAC,aACzB,wBAAQA,MAAM,WAAU,SAAC,uBAKrC,uBAAM9B,UAAU,kBAAiB,UAC9B,mBAAGA,UAAU,4BACb,cAAC,IAAY,CAACoB,GAAG,oCAKhC,C,mCCjMA,gHAeI2B,EAAmB,CACrBC,SAAUC,IACVC,OAAQC,IACRC,SAAUC,KAuCRC,EAAyBC,cAAiB,SAAmBC,EAAOC,GACtE,IAAIC,EAAeF,EAAME,aACrBC,EAAmBH,EAAMI,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAWL,EAAMK,SACjBC,EAAUN,EAAMM,QAChB9D,EAAYwD,EAAMxD,UAClB+D,EAAeP,EAAM7D,MACrBA,OAAyB,IAAjBoE,EAA0B,UAAYA,EAC9CC,EAAeR,EAAMQ,aACrBC,EAAkBT,EAAMV,SACxBA,OAA+B,IAApBmB,GAAqCA,EAChDC,EAAeV,EAAMW,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAsBZ,EAAMY,oBAC5BC,EAAmBb,EAAMvB,UACzBA,OAAiC,IAArBoC,GAAsCA,EAClDC,EAAad,EAAMc,WACnBC,EAAcf,EAAMe,YACpBnD,EAAKoC,EAAMpC,GACXc,EAAkBsB,EAAMtB,gBACxBsC,EAAahB,EAAMgB,WACnBC,EAAajB,EAAMiB,WACnBC,EAAWlB,EAAMkB,SACjB3C,EAAQyB,EAAMzB,MACd4C,EAAmBnB,EAAMoB,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDtD,EAAOmC,EAAMnC,KACbwD,EAASrB,EAAMqB,OACflD,EAAW6B,EAAM7B,SACjBmD,EAAUtB,EAAMsB,QAChBC,EAAcvB,EAAMuB,YACpBC,EAAkBxB,EAAMyB,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAO1B,EAAM0B,KACbC,EAAU3B,EAAM2B,QAChBC,EAAU5B,EAAM4B,QAChBC,EAAU7B,EAAM6B,QAChBC,EAAgB9B,EAAM+B,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAchC,EAAMgC,YACpBxD,EAAOwB,EAAMxB,KACbF,EAAQ0B,EAAM1B,MACd2D,EAAiBjC,EAAMjB,QACvBA,QAA6B,IAAnBkD,EAA4B,WAAaA,EACnDC,GAAQC,YAAyBnC,EAAO,CAAC,eAAgB,YAAa,WAAY,UAAW,YAAa,QAAS,eAAgB,WAAY,QAAS,sBAAuB,YAAa,aAAc,cAAe,KAAM,kBAAmB,aAAc,aAAc,WAAY,QAAS,YAAa,OAAQ,SAAU,WAAY,UAAW,cAAe,WAAY,OAAQ,UAAW,UAAW,UAAW,SAAU,cAAe,OAAQ,QAAS,YAQ3c,IAAIoC,GAAY,CAAC,EAEjB,GAAgB,aAAZrD,KACEL,GAAqD,qBAA3BA,EAAgBC,SAC5CyD,GAAUC,QAAU3D,EAAgBC,QAGlCJ,GAAO,CACT,IAAI+D,GAEAC,GAA2I,QAAxHD,GAA4C,OAApB5D,QAAgD,IAApBA,OAA6B,EAASA,EAAgB+C,gBAAgD,IAA1Ba,GAAmCA,GAAwBb,EAClNW,GAAU7D,MAAqBwB,gBAAoBA,WAAgB,KAAMxB,EAAOgE,IAAmB,QACrG,CAGER,IAEGC,GAAgBA,EAAYQ,SAC/BJ,GAAUxE,QAAK6E,GAGjBL,GAAU,yBAAsBK,GAGlC,IAAIC,GAAe5B,GAAclD,EAAK,GAAG+E,OAAO/E,EAAI,qBAAkB6E,EAClEG,GAAerE,GAASX,EAAK,GAAG+E,OAAO/E,EAAI,eAAY6E,EACvDI,GAAiBtD,EAAiBR,IAClC+D,GAA4B/C,gBAAoB8C,GAAgBE,YAAS,CAC3E,mBAAoBL,GACpBxC,aAAcA,EACdE,UAAWA,EACXI,aAAcA,EACd/B,UAAWA,EACX2C,UAAWA,EACXvD,KAAMA,EACN6D,KAAMA,EACNC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTrD,KAAMA,EACNF,MAAOA,EACPV,GAAIA,EACJsD,SAAUA,EACVG,OAAQA,EACRlD,SAAUA,EACVmD,QAASA,EACTC,YAAaA,EACbP,WAAYA,GACXoB,GAAWnB,IACd,OAAoBlB,gBAAoBiD,IAAaD,YAAS,CAC5DvG,UAAWyG,kBAAK3C,EAAQ4C,KAAM1G,GAC9B8C,SAAUA,EACVqB,MAAOA,EACPlC,UAAWA,EACXsC,YAAaA,EACbd,IAAKA,EACLwB,SAAUA,EACVtF,MAAOA,EACP4C,QAASA,IACRmD,IAAQ3D,GAAsBwB,gBAAoBoD,IAAYJ,YAAS,CACxEK,QAASxF,EACTA,GAAIgF,IACHlE,GAAkBH,GAAQwD,EAAsBhC,gBAAoBsD,IAAQN,YAAS,CACtF,mBAAoBL,GACpB9E,GAAIA,EACJ0F,QAASV,GACTtE,MAAOA,EACPiF,MAAOT,IACNd,GAAc3B,GAAYyC,GAAchC,GAA2Bf,gBAAoByD,IAAgBT,YAAS,CACjHnF,GAAI8E,IACH9B,GAAsBE,GAC3B,IA6Me2C,gBA9WK,CAElBP,KAAM,CAAC,GA4WyB,CAChCrF,KAAM,gBADO4F,CAEZ3D,E,mCCpYH,ifAOa4D,EAAa,CACtBnF,MAAO,cACPoF,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1CC,OAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,OAInCC,EAAY,CACrBC,UAAW,CACPF,OAAQ,CAAC,aAAc,cACvBG,SAAU,CAAC,CACP3G,KAAM,CAAC,IAAK,KACZ4G,gBAAiB,CACbC,IAAY9H,MAAM+H,QAClBD,IAAY9H,MAAMgI,MAEtBC,qBAAsB,CAClBH,IAAY9H,MAAM+H,QAClBD,IAAY9H,MAAMgI,UAOrBE,EAAiB,CAC1B9F,MAAO,cACPqF,OAAQ,CAAC,cAAe,WAAY,WAAY,SAAU,aAC1DD,UAAW,CAAC,IAAK,KAAM,IAAK,EAAG,OA8BtBW,GAlBU,GAAD,OAAKC,GAAsB,mCAMzB,GAAD,OAAKA,GAAsB,mCAM1B,GAAD,OAAKA,GAAsB,mCAMtB,CACxB,CAAE1G,KAAM,SAAU2G,GAAI,IAAMC,GAAI,MAChC,CAAE5G,KAAM,SAAU2G,GAAI,IAAMC,GAAI,MAChC,CAAE5G,KAAM,SAAU2G,GAAI,IAAMC,GAAI,MAChC,CAAE5G,KAAM,SAAU2G,GAAI,KAAMC,GAAI,MAChC,CAAE5G,KAAM,SAAU2G,GAAI,KAAMC,GAAI,MAChC,CAAE5G,KAAM,SAAU2G,GAAI,KAAMC,GAAI,MAChC,CAAE5G,KAAM,SAAU2G,GAAI,KAAMC,GAAI,QAkCvBC,EAAsB,CAC/Bd,OAAQ,CAAC,SAAU,UAAW,OAAQ,UACtCG,SAAU,CACN,CACIxF,MAAO,WACPyF,gBAAiBC,IAAY9H,MAAMwI,MACnCC,YAAaX,IAAY9H,MAAM+H,QAC/BW,YAAa,EACbT,qBAAsBH,IAAY9H,MAAMwI,MACxCG,iBAAkBb,IAAY9H,MAAMwI,MACpCvH,KAAM,CAAC,GAAI,GAAI,GAAI,MAMlB2H,EAAW,CACpBnB,OAAQ,CAAC,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACxHG,SAAU,CACN,CACJiB,cAAe,IACPzG,MAAO,WACPyF,gBAAiBC,IAAY9H,MAAMwI,MACnCC,YAAaX,IAAY9H,MAAMwI,MAC/BE,YAAa,EACbT,qBAAsBH,IAAY9H,MAAMwI,MACxCG,iBAAkBb,IAAY9H,MAAMwI,MACpCvH,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAG3E6H,UAAW,UAIFC,EAAe,CACxBtB,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACjGG,SAAU,CACN,CACIxF,MAAO,WACP4G,MAAM,EACNC,QAAS,EACTpB,gBAAiBC,IAAY9H,MAAM+H,QACnCU,YAAaX,IAAY9H,MAAM+H,QAC/BW,YAAa,EACbT,qBAAsBH,IAAY9H,MAAM+H,QACxCY,iBAAkBb,IAAY9H,MAAM+H,QACpC9G,KAAM,CAAC,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAM,IAAK,MAEzE,CACImB,MAAO,WACP4G,MAAM,EACNC,QAAS,EACTpB,gBAAiBC,IAAY9H,MAAMgI,KACnCS,YAAaX,IAAY9H,MAAMgI,KAC/BU,YAAa,EACbT,qBAAsBH,IAAY9H,MAAMgI,KACxCW,iBAAkBb,IAAY9H,MAAMgI,KACpC/G,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,QAGjFiI,cAAe,CACX,CACIxH,KAAM,cACNyH,MAAO,iBAEX,CACIzH,KAAM,kBACNyH,MAAO,gBAMNC,EAAwB,CACjCzB,UAAW,CACP0B,KAAM,CACFpI,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzCwG,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,QAEhE6B,OAAQ,CACJrI,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC1CwG,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,QAEhE8B,YAAa,CACTtI,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC1CwG,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,UAM3D+B,EAAe,CACxB7B,UAAW,CACPF,OAAQ,CAAC,YAAa,UACtBG,SAAU,CAAC,CACP3G,KAAM,CAAC,IAAK,KACZ4G,gBAAiB,CACbC,IAAY9H,MAAMgI,KAClBF,IAAY9H,MAAM+H,SAEtBE,qBAAsB,CAClBH,IAAY9H,MAAMgI,KAClBF,IAAY9H,MAAM+H,YAI9B7F,OAAQ,OACRuH,SAAU,QAIDC,EAAqB,CAC9BC,QAAS,CACL,CAAEC,OAAQ,CAAC,KAAO,OAAQlI,KAAM,gBAChC,CAAEkI,OAAQ,CAAC,MAAO,MAAOlI,KAAM,UAC/B,CAAEkI,OAAQ,EAAE,IAAM,QAASlI,KAAM,SACjC,CAAEkI,OAAQ,EAAE,KAAM,QAASlI,KAAM,UACjC,CAAEkI,OAAQ,CAAC,MAAO,OAAQlI,KAAM,cAChC,CAAEkI,OAAQ,CAAC,MAAO,MAAOlI,KAAM,iBAC/B,CAAEkI,OAAQ,CAAC,KAAM,QAASlI,KAAM,oBAChC,CAAEkI,OAAQ,CAAC,MAAO,OAAQlI,KAAM,yBAChC,CAAEkI,OAAQ,CAAC,IAAK,OAAQlI,KAAM,YAC9B,CAAEkI,OAAQ,CAAC,MAAO,MAAOlI,KAAM,SAC/B,CAAEkI,OAAQ,CAAC,OAAQ,OAAQlI,KAAM,WACjC,CAAEkI,OAAQ,CAAC,OAAQ,OAAQlI,KAAM,oCACjC,CAAEkI,OAAQ,CAAC,OAAQ,OAAQlI,KAAM,YACjC,CAAEkI,OAAQ,CAAC,OAAQ,OAAQlI,KAAM,uBACjC,CAAEkI,OAAQ,EAAE,KAAM,OAAQlI,KAAM,cAChC,CAAEkI,OAAQ,CAAC,KAAM,QAASlI,KAAM,SAChC,CAAEkI,OAAQ,CAAC,KAAM,MAAOlI,KAAM,WAC9B,CAAEkI,OAAQ,CAAC,OAAQ,OAAQlI,KAAM,eACjC,CAAEkI,OAAQ,CAAC,KAAM,QAASlI,KAAM,kCAChC,CAAEkI,OAAQ,CAAC,IAAK,OAAQlI,KAAM,aAC9B,CAAEkI,OAAQ,CAAC,KAAM,QAASlI,KAAM,YAChC,CAAEkI,OAAQ,EAAE,OAAQ,OAAQlI,KAAM,SAClC,CAAEkI,OAAQ,CAAC,MAAO,OAAQlI,KAAM,YAChC,CAAEkI,OAAQ,EAAE,KAAM,MAAOlI,KAAM,aAC/B,CAAEkI,OAAQ,CAAC,MAAO,OAAQlI,KAAM,WAChC,CAAEkI,OAAQ,CAAC,IAAM,MAAOlI,KAAM,mCAElCmI,cAAe,SAINC,EAAiB,CAC1BC,iBAAkB,UAClBpC,UAAW,CACPF,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtFxG,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAK9C+I,EAAe,CACxBrC,UAAW,CACPF,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtFxG,KAAM,CAAC,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3DmB,MAAO,SAEX6H,OAAQ,CACJvI,KAAM,cACNyH,MAAO,kBAiCFe,GAvBgBpC,IAAY9H,MAAM+H,QACtBD,IAAY9H,MAAM+H,QAETD,IAAY9H,MAAM+H,QACtBD,IAAY9H,MAAM+H,QAKnBD,IAAY9H,MAAMmK,QACtBrC,IAAY9H,MAAMmK,QAETrC,IAAY9H,MAAMmK,QACtBrC,IAAY9H,MAAMmK,QAUtB,CACtB1C,OAAQ,CAAC,QAAS,QAAS,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,SAAU,SAAU,QAAS,SACnHG,SAAU,CACN,CACIxF,MAAO,QACP4G,MAAM,EACNoB,YAAa,EACbC,YAAa,GACbxC,gBAAiByC,YAAUxC,IAAY9H,MAAM+H,QAAS,IACtDU,YAAaX,IAAY9H,MAAM+H,QAC/BwC,iBAAkBzC,IAAY9H,MAAMwI,MACpCgC,qBAAsB1C,IAAY9H,MAAMwI,MACxCiC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2BL,YAAUxC,IAAY9H,MAAM+H,QAAS,GAChE6C,sBAAuBN,YAAUxC,IAAY9H,MAAM+H,QAAS,GAC5D8C,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB9J,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAElE,CACImB,MAAO,WACP4G,MAAM,EACNoB,YAAa,EACbC,YAAa,GACbxC,gBAAiByC,YAAUxC,IAAY9H,MAAMgL,QAAS,IACtDvC,YAAaX,IAAY9H,MAAMgL,QAC/BT,iBAAkBzC,IAAY9H,MAAMwI,MACpCgC,qBAAsB1C,IAAY9H,MAAMwI,MACxCiC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2BL,YAAUxC,IAAY9H,MAAMgL,QAAS,GAChEJ,sBAAuBN,YAAUxC,IAAY9H,MAAMgL,QAAS,GAC5DH,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB9J,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAiC7D3B,EAAkB,CAC3B,aAAgB,CACZ,CACImC,GAAI,EACJL,MAAO,+CACPE,KAAM,WACNvB,OAAQ,WACRC,MAAO,UACPE,KAAM,CACF,CACIuB,GAAI,EACJC,KAAM,SACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,OACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,SACNG,OAAQ,gEAIpB,CACIJ,GAAI,EACJL,MAAO,+CACPE,KAAM,WACNvB,OAAQ,cACRC,MAAO,UACPE,KAAM,CACF,CACIuB,GAAI,EACJC,KAAM,SACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,OACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,SACNG,OAAQ,iEAKxB,SAAY,CACR,CACIJ,GAAI,EACJL,MAAO,uCACPE,KAAM,WACNvB,OAAQ,cACRC,MAAO,UACPE,KAAM,CACF,CACIuB,GAAI,EACJC,KAAM,SACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,OACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,SACNG,OAAQ,gEAIpB,CACIJ,GAAI,EACJL,MAAO,wCACPE,KAAM,UACNvB,OAAQ,UACRC,MAAO,UACPE,KAAM,CACF,CACIuB,GAAI,EACJC,KAAM,SACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,OACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,SACNG,OAAQ,iEAKxB,SAAY,CACR,CACIJ,GAAI,EACJL,MAAO,yCACPE,KAAM,UACNvB,OAAQ,YACRC,MAAO,SACPE,KAAM,CACF,CACIuB,GAAI,EACJC,KAAM,SACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,OACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,SACNG,OAAQ,gEAIpB,CACIJ,GAAI,EACJL,MAAO,6BACPE,KAAM,WACNvB,OAAQ,YACRC,MAAO,SACPE,KAAM,CACF,CACIuB,GAAI,EACJC,KAAM,SACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,OACNG,OAAQ,8DAEZ,CACIJ,GAAI,EACJC,KAAM,SACNG,OAAQ,iE","file":"static/js/86.47c23e74.chunk.js","sourcesContent":["/**\n * Project Task Management\n */\nimport React, { useState } from 'react'\nimport { IconButton, Button, List, ListItem, Avatar, TextField, Tooltip} from '@material-ui/core';\nimport { Badge, FormGroup, Input, Collapse } from 'reactstrap';\nimport { Scrollbars } from 'react-custom-scrollbars';\n//Data File\nimport { projectTaskData } from 'Routes/widgets/data';\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader';\n// card component\nimport { RctCardFooter } from 'Components/RctCard';\n//Helper\nimport { getTheDate, convertDateToTimeStamp } from 'Helpers/helpers';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction ProjectTaskManagement() {\n   const [sectionReload, setSectionReload] = useState(false);\n   const [projectData, setProjectData] = useState(projectTaskData);\n   const [collapse, setCollapse] = useState(false);\n   const [selectedProject, setSelectedProject] = useState(null);\n   const [newTask, setNewTask] = useState({\n      taskTitle: \"\",\n      taskDate: null,\n      status: \"\",\n      color: \"\",\n      completed: false,\n      team: null,\n   });\n   \n   //Close New Task\n   const closeForm = (key) => {\n      setSelectedProject(key);\n      setCollapse(false);\n   }\n\n   //Open New Task\n   const openForm = (key) => {\n      setSelectedProject(key);\n      setCollapse(true);\n   }\n\n   // on change schedule\n   const onChangeDueDate = (e) => {\n      let timestamp = convertDateToTimeStamp(e.target.value);\n      setNewTask({ ...newTask, taskDate: timestamp });\n   }\n\n   //Add New Task\n   const addNewTask = (key) => {\n      const { taskTitle, taskDate } = newTask;\n      if (taskTitle !== '' && taskDate) {\n         let newTask = {\n            title: taskTitle,\n            date: taskDate,\n            status: \"Planning\",\n            color: \"primary\",\n            team: [\n               {\n                  id: 1,\n                  name: \"Lucile\",\n                  avatar: \"https://reactify.theironnetwork.org/data/images/user-1.jpg\",\n               }\n            ]\n         };\n         setSectionReload(true);\n         setCollapse(true);\n         setTimeout(() => {\n            let projects = projectData;\n            projects[key].push(newTask);\n            setProjectData(projects);\n            setCollapse(false);\n            setSectionReload(false);\n            setNewTask({\n               taskTitle: \"\",\n               taskDate: null\n            });\n         }, 1500);\n      }\n   }\n\n   return (\n      <div className=\"task-management-wrapper\">\n         {sectionReload &&\n            <RctSectionLoader />\n         }\n         <Scrollbars className=\"rct-scroll\" autoHeight autoHeightMin={100} autoHeightMax={600} autoHide>\n            <ul className=\"mb-0\">\n               {Object.keys(projectData).map((project, key) => (\n                  <li key={key}>\n                     <div className=\"project-heading d-flex justify-content-between align-items-center border-bottom\">\n                        <h4 className=\"fw-semi-bold mb-0\">{project}</h4>\n                        <IconButton onClick={() => openForm(project)}>\n                           <i className=\"material-icons\">add_circle</i>\n                        </IconButton>\n                     </div>\n                     <List className=\"p-0\">\n                        {projectData && projectData[project].map((data, subKey) => (\n                           <ListItem\n                              button\n                              className=\"justify-content-between align-items-center border-bottom post-item\"\n                              key={subKey}\n                           >\n                              <div className=\"task-title pr-3\">\n                                 <h4 className=\"mb-5\">{data.title}</h4>\n                                 <span className=\"fs-12 text-base\">{getTheDate(data.date, 'DD MMM YYYY')}</span>\n                              </div>\n                              <div className=\"w-40 d-flex justify-content-between\">\n                                 <span><Badge color={data.color}>{data.status}</Badge></span>\n                                 <div className=\"team-avatar\">\n                                    <ul className=\"m-0 list-inline\">\n                                       {data.team.map((member, nestedSubkey) => (\n                                          <li className=\"list-inline-item\" key={nestedSubkey}>\n                                             <Tooltip id=\"tooltip-top\" title={member.name} placement=\"top\">\n                                                <Avatar src={member.avatar} alt=\"avatar\" className=\"rounded-circle\" />\n                                             </Tooltip>\n                                          </li>\n                                       ))}\n                                    </ul>\n                                 </div>\n                              </div>\n                           </ListItem>\n                        ))}\n                     </List>\n                     {(selectedProject === project) &&\n                        <Collapse isOpen={collapse}>\n                           <div className=\"d-flex p-4 form-wrap border-bottom justify-content-between\">\n                              <div className=\"mr-10\">\n                                 <TextField\n                                    id=\"taskName\"\n                                    onChange={(e) => setNewTask({ ...newTask, taskTitle: e.target.value })}\n                                    value={newTask.taskTitle}\n                                    label=\"Task Name\"\n                                    type=\"text\"\n                                    fullWidth\n                                    className=\"mx-5 mb-30\"\n                                 />\n                                 <TextField\n                                    id=\"date\"\n                                    label=\"Due Date\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                       shrink: true\n                                    }}\n                                    fullWidth\n                                    onChange={(e) => onChangeDueDate(e)}\n                                    className=\"mx-5\"\n                                 />\n                              </div>\n                              <div className=\"align-self-end d-flex flex-column text-center\">\n                                 <Button variant=\"contained\" color=\"primary\" className=\"mb-30 text-white  btn-xs\" onClick={() => addNewTask(project)}>\n                                    <span><IntlMessages id=\"button.add\" /></span>\n                                 </Button>\n                                 <Button variant=\"contained\" onClick={() => closeForm(project)} className=\"btn-xs btn-danger text-white\">\n                                    <span><IntlMessages id=\"button.cancel\" /></span>\n                                 </Button>\n                              </div>\n                           </div>\n                        </Collapse>\n                     }\n                  </li>\n               ))}\n            </ul>\n         </Scrollbars>\n         <RctCardFooter customClasses=\" d-flex justify-content-between align-items-center\">\n            <div className=\"d-flex w-40 align-items-center justify-content-between\">\n               <span className=\"fs-12 w-50 text-base\"><IntlMessages id=\"widgets.selectProject\" /></span>\n               <div className=\"app-selectbox-sm\">\n                  <FormGroup className=\"mb-0\">\n                     <Input\n                        type=\"select\"\n                        className=\"fs-12\"\n                        name=\"select\"\n                        id=\"projectSelect\"\n                     >\n                        <option disabled>Select Project</option>\n                        <option value=\"all\">all</option>\n                        <option value=\"BookingKoala\">BookingKoala</option>\n                        <option value=\"Reactify\">Reactify</option>\n                        <option value=\"Adminify\">Adminify</option>\n                     </Input>\n                  </FormGroup>\n               </div>\n            </div>\n            <span className=\"fs-12 text-base\">\n               <i className=\"mr-15 zmdi zmdi-refresh\"></i>\n               <IntlMessages id=\"widgets.updated10Minago\" />\n            </span>\n         </RctCardFooter>\n      </div>\n   )\n}\n\nexport default ProjectTaskManagement;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      maxRows = props.maxRows,\n      minRows = props.minRows,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"maxRows\", \"minRows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `minRows` instead'),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `maxRows` instead'),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","// widgets data\nimport ChartConfig from 'Constants/chart-config';\n\n// helpers\nimport { hexToRgbA } from 'Helpers/helpers';\n\n// Daily Sales\nexport const dailySales = {\n    label: 'Daily Sales',\n    chartdata: [100, 200, 125, 250, 200, 150, 200],\n    labels: ['9', '10', '11', '12', '13', '14', '15'],\n}\n\n// Space Used\nexport const spaceUsed = {\n    chartData: {\n        labels: ['Space Used', 'Space Left'],\n        datasets: [{\n            data: [275, 100],\n            backgroundColor: [\n                ChartConfig.color.primary,\n                ChartConfig.color.info\n            ],\n            hoverBackgroundColor: [\n                ChartConfig.color.primary,\n                ChartConfig.color.info\n            ]\n        }]\n    },\n}\n\n//Traffic Channel\nexport const trafficChannel = {\n    label: 'Direct User',\n    labels: ['Direct User', 'Referral', 'Facebook', 'Google', 'Instagram'],\n    chartdata: [8.5, 6.75, 5.5, 7, 4.75]\n}\n\n// top selling products\nexport const topSellingProducts = {\n    totalSales: '12,550',\n    earning: '$35,000',\n    products: [\n        {\n            id: 1,\n            productName: 'HD Classic Gold Headphone',\n            price: '300',\n          productImage: `${process.env.PUBLIC_URL}/assets/images/img/device-1.jpg`\n        },\n        {\n            id: 2,\n            productName: 'HD Classic Gold Headphone',\n            price: '300',\n           productImage: `${process.env.PUBLIC_URL}/assets/images/img/device-2.jpg`\n        },\n        {\n            id: 3,\n            productName: 'HD Classic Gold Headphone',\n            price: '300',\n           productImage: `${process.env.PUBLIC_URL}/assets/images/img/device-3.jpg`\n        }\n    ]\n}\n\n// site visitors\nexport const siteVisitors = [\n    { name: 'Page A', uv: 4000, pv: 2400 },\n    { name: 'Page B', uv: 3000, pv: 1398 },\n    { name: 'Page C', uv: 2000, pv: 9800 },\n    { name: 'Page D', uv: 2780, pv: 3908 },\n    { name: 'Page E', uv: 1890, pv: 4800 },\n    { name: 'Page F', uv: 2390, pv: 3800 },\n    { name: 'Page G', uv: 3490, pv: 4300 },\n]\n\n// visitors data\nexport const visitorsData = {\n    chartData: {\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        data: [600, 500, 650, 470, 520, 700, 500, 650, 580, 500, 650, 700]\n    },\n    monthly: 7233,\n    weekly: 5529\n}\n\n// sales data\nexport const salesData = {\n    chartData: {\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        data: [600, 500, 650, 470, 520, 700, 500, 650, 580, 500, 650, 700]\n    },\n    today: 6544,\n    totalRevenue: 9125\n}\n\n// orders data\nexport const ordersData = {\n    chartData: {\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        data: [600, 500, 650, 470, 520, 700, 500, 650, 580, 500, 650, 700]\n    },\n    today: 5652,\n    totalRevenue: 8520\n}\n\n// email statistics Data\nexport const emailStatisticsData = {\n    labels: ['Opened', 'Bounced', 'Spam', 'Unsent'],\n    datasets: [\n        {\n            label: 'Series A',\n            backgroundColor: ChartConfig.color.white,\n            borderColor: ChartConfig.color.primary,\n            borderWidth: 0,\n            hoverBackgroundColor: ChartConfig.color.white,\n            hoverBorderColor: ChartConfig.color.white,\n            data: [53, 15, 30, 7]\n        }\n    ]\n}\n\n// data use\nexport const dataUsed = {\n    labels: ['0.00', '1.0', '2.0', '3.0', '4.0', '5.0', '6.0', '7.0', '8.0', '9.0', '10.0', '11.0', '12.0', '13.0', '14.0', '15.0'],\n    datasets: [\n        {\n\t\t\t\tbarPercentage: 0.25,\n            label: 'Series A',\n            backgroundColor: ChartConfig.color.white,\n            borderColor: ChartConfig.color.white,\n            borderWidth: 4,\n            hoverBackgroundColor: ChartConfig.color.white,\n            hoverBorderColor: ChartConfig.color.white,\n            data: [65, 59, 80, 81, 56, 55, 40, 45, 35, 45, 65, 70, 75, 80, 30, 45]\n        }\n    ],\n    totalUsed: '200 GB'\n}\n\n// product stats\nexport const productStats = {\n    labels: ['2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017'],\n    datasets: [\n        {\n            label: 'Series A',\n            fill: false,\n            tension: 0,\n            backgroundColor: ChartConfig.color.primary,\n            borderColor: ChartConfig.color.primary,\n            borderWidth: 4,\n            hoverBackgroundColor: ChartConfig.color.primary,\n            hoverBorderColor: ChartConfig.color.primary,\n            data: [2500, 900, 400, 1100, 1250, 900, 2100, 3400, 1950, 2000, 700, 740]\n        },\n        {\n            label: 'Series B',\n            fill: false,\n            tension: 0,\n            backgroundColor: ChartConfig.color.info,\n            borderColor: ChartConfig.color.info,\n            borderWidth: 4,\n            hoverBackgroundColor: ChartConfig.color.info,\n            hoverBorderColor: ChartConfig.color.info,\n            data: [3800, 3300, 2300, 3500, 2800, 3200, 3100, 4100, 3500, 3000, 2500, 2300]\n        }\n    ],\n    customLegends: [\n        {\n            name: 'Admin Theme',\n            class: 'badge-primary'\n        },\n        {\n            name: 'Wordpress Theme',\n            class: 'badge-info'\n        }\n    ]\n}\n\n// email statistics\nexport const emailStatisticsV2Data = {\n    chartData: {\n        open: {\n            data: [80, 180, 165, 220, 130, 255, 245, 325],\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug'],\n        },\n        bounce: {\n            data: [275, 215, 235, 120, 190, 145, 170, 90],\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug']\n        },\n        unsubscribe: {\n            data: [275, 215, 235, 120, 190, 145, 170, 90],\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug']\n        }\n    }\n}\n\n// total revenue\nexport const totalRevenue = {\n    chartData: {\n        labels: ['Last Week', 'Target'],\n        datasets: [{\n            data: [100, 260],\n            backgroundColor: [\n                ChartConfig.color.info,\n                ChartConfig.color.primary\n            ],\n            hoverBackgroundColor: [\n                ChartConfig.color.info,\n                ChartConfig.color.primary\n            ]\n        }]\n    },\n    target: '$566',\n    lastWeek: '$100'\n}\n\n// online visitors data\nexport const onlineVisitorsData = {\n    markers: [\n        { latLng: [41.90, 12.45], name: 'Vatican City' },\n        { latLng: [43.73, 7.41], name: 'Monaco' },\n        { latLng: [-0.52, 166.93], name: 'Nauru' },\n        { latLng: [-8.51, 179.21], name: 'Tuvalu' },\n        { latLng: [43.93, 12.46], name: 'San Marino' },\n        { latLng: [47.14, 9.52], name: 'Liechtenstein' },\n        { latLng: [7.11, 171.06], name: 'Marshall Islands' },\n        { latLng: [17.3, -62.73], name: 'Saint Kitts and Nevis' },\n        { latLng: [3.2, 73.22], name: 'Maldives' },\n        { latLng: [35.88, 14.5], name: 'Malta' },\n        { latLng: [12.05, -61.75], name: 'Grenada' },\n        { latLng: [13.16, -61.23], name: 'Saint Vincent and the Grenadines' },\n        { latLng: [13.16, -59.55], name: 'Barbados' },\n        { latLng: [17.11, -61.85], name: 'Antigua and Barbuda' },\n        { latLng: [-4.61, 55.45], name: 'Seychelles' },\n        { latLng: [7.35, 134.46], name: 'Palau' },\n        { latLng: [42.5, 1.51], name: 'Andorra' },\n        { latLng: [14.01, -60.98], name: 'Saint Lucia' },\n        { latLng: [6.91, 158.18], name: 'Federated States of Micronesia' },\n        { latLng: [1.3, 103.8], name: 'Singapore' },\n        { latLng: [1.46, 173.03], name: 'Kiribati' },\n        { latLng: [-21.13, -175.2], name: 'Tonga' },\n        { latLng: [15.3, -61.38], name: 'Dominica' },\n        { latLng: [-20.2, 57.5], name: 'Mauritius' },\n        { latLng: [26.02, 50.55], name: 'Bahrain' },\n        { latLng: [0.33, 6.73], name: 'São Tomé and Príncipe' }\n    ],\n    totalVisitors: '1655+'\n}\n\n// traffic sources\nexport const trafficSources = {\n    totalActiveUsers: '359,234',\n    chartData: {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        data: [40, 30, 85, 50, 90, 45, 55, 45, 80, 72, 78, 63]\n    }\n}\n\n// total earns v2\nexport const totalEarnsV2 = {\n    chartData: {\n        labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n        data: [10, 120, 50, 150, 120, 70, 140, 150, 110, 130, 180, 85],\n        label: 'Earns'\n    },\n    legend: {\n        name: 'Total Earns',\n        class: 'badge-primary'\n    }\n}\n\n// traffic Status\nexport const trafficStatus = {\n    chartLabels: ['0.00', '1.0', '2.0', '3.0', '4.0', '5.0', '6.0'],\n    chartDatasets: [\n        {\n            label: 'Series A',\n            backgroundColor: ChartConfig.color.primary,\n            borderColor: ChartConfig.color.primary,\n            borderWidth: 1,\n            hoverBackgroundColor: ChartConfig.color.primary,\n            hoverBorderColor: ChartConfig.color.primary,\n            data: [65, 59, 80, 81, 56, 55, 40]\n        },\n        {\n            label: 'Series B',\n            backgroundColor: ChartConfig.color.default,\n            borderColor: ChartConfig.color.default,\n            borderWidth: 1,\n            hoverBackgroundColor: ChartConfig.color.default,\n            hoverBorderColor: ChartConfig.color.default,\n            data: [45, 39, 40, 60, 35, 25, 60]\n        }\n    ],\n    onlineSources: '3500',\n    today: '17,020',\n    lastMonth: '20.30%'\n}\n\n// total earns\nexport const totalEarns = {\n    labels: ['Jan 1', 'Jan 7', 'Jan 14', 'Jan 21', 'Jan 28', 'Feb 4', 'Feb 11', 'Feb 18', 'Feb 25', 'Feb 28', 'Mar 2', 'Mar 6'],\n    datasets: [\n        {\n            label: 'Sales',\n            fill: true,\n            lineTension: 0,\n            fillOpacity: 0.5,\n            backgroundColor: hexToRgbA(ChartConfig.color.primary, 0.8),\n            borderColor: ChartConfig.color.primary,\n            pointBorderColor: ChartConfig.color.white,\n            pointBackgroundColor: ChartConfig.color.white,\n            pointBorderWidth: 0,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: hexToRgbA(ChartConfig.color.primary, 1),\n            pointHoverBorderColor: hexToRgbA(ChartConfig.color.primary, 1),\n            pointHoverBorderWidth: 8,\n            pointRadius: 0,\n            pointHitRadius: 10,\n            data: [250, 350, 270, 420, 380, 220, 400, 550, 480, 190, 390, 380]\n        },\n        {\n            label: 'Visitors',\n            fill: true,\n            lineTension: 0,\n            fillOpacity: 0.5,\n            backgroundColor: hexToRgbA(ChartConfig.color.warning, 0.4),\n            borderColor: ChartConfig.color.warning,\n            pointBorderColor: ChartConfig.color.white,\n            pointBackgroundColor: ChartConfig.color.white,\n            pointBorderWidth: 0,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: hexToRgbA(ChartConfig.color.warning, 1),\n            pointHoverBorderColor: hexToRgbA(ChartConfig.color.warning, 1),\n            pointHoverBorderWidth: 8,\n            pointRadius: 0,\n            pointHitRadius: 10,\n            data: [600, 400, 500, 350, 650, 630, 450, 480, 650, 500, 530, 550,]\n        }\n    ]\n}\n\n// total sales\nexport const totalSales = {\n    label: 'Sales',\n    chartdata: [250, 310, 150, 420, 250, 450],\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n}\n\n// net profit\nexport const netProfit = {\n    label: 'Net Profit',\n    chartdata: [250, 310, 150, 420, 250, 450],\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n}\n\n// tax stats\nexport const taxStats = {\n    label: 'Tax',\n    chartdata: [250, 310, 150, 420, 250, 450],\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n}\n\n// expenses stats\nexport const expenses = {\n    label: 'Expenses',\n    chartdata: [250, 310, 150, 420, 250, 450],\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n}\n//Project Task Management\nexport const projectTaskData = {\n    'BookingKoala': [\n        {\n            id: 1,\n            title: \"Wireframing for dashboard sidebar and topbar\",\n            date: 1528368468,\n            status: \"Planning\",\n            color: \"primary\",\n            team: [\n                {\n                    id: 1,\n                    name: \"Maggie\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-1.jpg\",\n                },\n                {\n                    id: 2,\n                    name: \"Lisa\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-2.jpg\",\n                },\n                {\n                    id: 3,\n                    name: \"Lucile\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-3.jpg\",\n                }\n            ]\n        },\n        {\n            id: 2,\n            title: \"Wireframing for dashboard sidebar and topbar\",\n            date: 1529346600,\n            status: \"In Progress\",\n            color: \"success\",\n            team: [\n                {\n                    id: 1,\n                    name: \"Maggie\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-1.jpg\",\n                },\n                {\n                    id: 2,\n                    name: \"Lisa\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-2.jpg\",\n                },\n                {\n                    id: 3,\n                    name: \"Lucile\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-3.jpg\",\n                }\n            ]\n        }\n    ],\n    'Reactify': [\n        {\n            id: 1,\n            title: \"Create video placeholder for website\",\n            date: 1529951400,\n            status: \"In Progress\",\n            color: \"success\",\n            team: [\n                {\n                    id: 1,\n                    name: \"Maggie\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-1.jpg\",\n                },\n                {\n                    id: 2,\n                    name: \"Lisa\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-2.jpg\",\n                },\n                {\n                    id: 3,\n                    name: \"Lucile\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-3.jpg\",\n                }\n            ]\n        },\n        {\n            id: 2,\n            title: \"Social media ads banner for launching\",\n            date: 1531161000,\n            status: \"On Hold\",\n            color: \"success\",\n            team: [\n                {\n                    id: 1,\n                    name: \"Maggie\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-1.jpg\",\n                },\n                {\n                    id: 2,\n                    name: \"Lisa\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-2.jpg\",\n                },\n                {\n                    id: 3,\n                    name: \"Lucile\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-3.jpg\",\n                }\n            ]\n        }\n    ],\n    'Adminify': [\n        {\n            id: 1,\n            title: \"Create new design for frontend website\",\n            date: 1530729000,\n            status: \"Completed\",\n            color: \"danger\",\n            team: [\n                {\n                    id: 1,\n                    name: \"Maggie\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-1.jpg\",\n                },\n                {\n                    id: 2,\n                    name: \"Lisa\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-2.jpg\",\n                },\n                {\n                    id: 3,\n                    name: \"Lucile\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-3.jpg\",\n                }\n            ]\n        },\n        {\n            id: 2,\n            title: \"Update new logo everywhere\",\n            date: 1532716200,\n            status: \"Completed\",\n            color: \"danger\",\n            team: [\n                {\n                    id: 1,\n                    name: \"Maggie\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-1.jpg\",\n                },\n                {\n                    id: 2,\n                    name: \"Lisa\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-2.jpg\",\n                },\n                {\n                    id: 3,\n                    name: \"Lucile\",\n                    avatar: \"https://reactify.theironnetwork.org/data/images/user-3.jpg\",\n                }\n            ]\n        }\n    ]\n}"],"sourceRoot":""}