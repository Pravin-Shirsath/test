{"version":3,"sources":["../node_modules/@mui/icons-material/Folder.js","Routes/dashboard/TaskStatus/index.js","Routes/dashboard/ReuseComponent/CustomBreadcrumbs.js","../node_modules/reactstrap/es/Col.js","Routes/dashboard/ReuseComponent/EditDataset.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","TaskStatus","props","history","useHistory","location","useState","searchText","setSearchText","loading","deleteConfirmationDialog","useRef","selected","openEditDataset","setOpenEditDataset","activePage","totalPageCount","setTotalPageCount","datasetFiles","setDatasetFiles","filteredDatasetFiles","setFilteredDatasetFiles","useEffect","localStorage","getItem","getDatasetFiles","authToken","JSON","parse","datasetId","ViewFiles","then","res","console","log","status","data","results","updatedResults","map","result","selectedFile","parseInt","count","catch","error","response","NotificationManager","clear","push","className","name","content","currentPage","state","breadcrumbData","title","message","ref","style","justifyContent","type","placeholder","border","borderBottom","onChange","e","target","variant","color","cursor","length","itemsCountPerPage","pageRangeDisplayed","itemClass","linkClass","hideFirstLastPages","totalItemsCount","Modalopen","close","reloadlist","CustomBreadcrumbs","HandleNavigate","item","index","myarray","i","url","undefined","onClick","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","columnProp","isObject","_classNames","colSizeInterfix","colClass","mapToCssModules","classNames","_colClass","classes","React","createElement","_extends","EditDataset","open","setOpen","datasetName","setDatasetName","comment","setComment","dataset_name","onClose","margin","padding","marginTop","row","for","height","marginBottom","accessToken","UpadatDataset","id","success","err"],"mappings":"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","file":"static/js/52.63d2e380.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"\n}), 'Folder');\nexports.default = _default;","import \"./taskStatus.css\"\n\n/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Button from '@material-ui/core/Button'\nimport FolderIcon from '@mui/icons-material/Folder';\n \nimport Pagination from \"react-js-pagination\";\nimport {\n    ViewFiles\n  } from '../../../Api/'\n\nimport { useHistory } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications'\n// delete confirmation dialog\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n// update user form\n//  import UpdateUserForm from './UpdateUserForm'\n// page title bar\nimport PageTitleBar from '../../../Components/PageTitleBar/PageTitleBar'\n// intl messages\nimport IntlMessages from '../../../Util/IntlMessages'\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\n\nimport EditDataset from '../ReuseComponent/EditDataset';\nimport CustomBreadcrumbs from \"../ReuseComponent/CustomBreadcrumbs\";\n\n\nexport default function TaskStatus(props) {\n  const history = useHistory();\n  const {location}=props\n\n  const [searchText, setSearchText] = useState('');\n  \n  const [username, setUsername] = useState(\"\")\n\n  const [loading, setLoading] = useState(false)\n\n  const deleteConfirmationDialog = useRef()\n  const [selected, setSelectedItem] = useState({})\n\nconst [openEditDataset,setOpenEditDataset] = useState(false)\n\n  const [datasets, setDatasets] = useState([]);\n  const [activePage, setActivePage] = useState(1)\n  const [totalPageCount, setTotalPageCount] = useState('');\n  const [datasetFiles, setDatasetFiles] = useState([]);\n  const [filteredDatasetFiles, setFilteredDatasetFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    // conditional rendring\n    // if(isLoggedInBool !== \"true\"){\n    //   history.push(\"/login\")\n    //     localStorage.clear();\n    // } else {\n    // getCustomersListData();\n    getDatasetFiles()\n    // }\n  }, [])\n\n  const getDatasetFiles = () => {\n    const authToken = JSON.parse(localStorage.getItem(\"token\"));\n    const datasetId = localStorage?.getItem(\"datasetId\")\n    // const datasetId = 146\n\n    if(authToken !== null){\n        ViewFiles(authToken, datasetId, 1)\n        .then(res=> {\n            console.log(res, \"resss in viewDataset file\")\n            if(res?.status == 200){\n                console.log(res?.data?.results, \"dataaa of filesss in view datasetfile\")\n                const results = res?.data?.results;\n                const updatedResults = results.map(result=> {\n                    return {...result, selectedFile: false}\n                })\n\n                setDatasetFiles(updatedResults)\n                setFilteredDatasetFiles(updatedResults)\n                setTotalPageCount(parseInt(res?.data?.count));\n            }else {\n                console.log('Response from View project Datasets lists api in view project:', res)\n            }\n        })\n        .catch((error)=>{\n            console.log(\"error in viewdataset:\",error)\n            const status = error?.response?.status\n            if(status == 401){\n              NotificationManager.error(\"Something went wrong !\");\n              localStorage.clear();\n              history.push(\"/login\")\n            } else if(status == 500){\n              NotificationManager.error(\"Temporary connectivity issues.\");\n            }\n        })\n    } else {\n      localStorage.clear();\n      history.push(\"/login\")\n    }\n}\n\n  const allFiles = [1,2,3,4,5]\n\n  const handlePageChange = (pageNumber) => {\n    // console.log(\"pagination\", pageNumber)\n    // if (activePage !== pageNumber) {\n    //   const authToken = JSON.parse(localStorage.getItem('token'))\n    //   const datasetId = localStorage?.getItem(\"datasetId\")\n\n    //   if (authToken !== null) {\n    //       ViewFiles(authToken, datasetId, pageNumber)\n    //       .then((res) => {\n    //         if (res?.status === 200) {\n    //           setDatasetFiles(res?.data?.results);\n    //           setFilteredDatasetFiles(res?.data?.results);\n    //           setTotalPageCount(res?.data?.count);\n    //           console.log('Response from customerlist :', res)\n    //         } else {\n    //           // console.log('Response from customerlist:', res)\n    //         }\n    //       })\n    //       .catch((err) => {\n    //         // console.log('Response from customerlist:', err)\n    //       })\n    //   }\n    //   setActivePage(pageNumber)\n    // }\n  }\n\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>Automaton | Customers List</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      {/* <PageTitleBar\n        title={<IntlMessages id=\"sidebar.taskStatus\" />}\n        match={props.match}\n      /> */}\n     <CustomBreadcrumbs    currentPage={\"Task Status\"} data={location?.state?.breadcrumbData}  />\n\n                <DeleteConfirmationDialog title=\"Are You Sure Want To Delete?\"\n             message=\"This will delete your Dataset permanently.\"\n            //  onConfirm={() => Delete_Datset()}\n             ref={deleteConfirmationDialog} />\n      <RctCollapsibleCard>\n     \n        <div className=\"table-responsive\">\n            <div className=\"d-flex py-20 px-10 border-bottom\" style={{ justifyContent: 'space-between' }}>\n            <div className='search-row'>\n                <input type=\"text\" placeholder='Search' className='search-input py-2' style={{ border: \"none\", borderBottom: \"1px solid black\" }} value={searchText} onChange={(e) => setSearchText(e.target.value)} />\n                <Button variant=\"contained\" color=\"primary\" className=\"text-white mx-5\" style={{ cursor: \"pointer\" }} \n                // onClick={getSearchedCustomerData}\n                >Search</Button>\n            </div>\n            </div>\n\n            <div className='taskStatusContainer'>\n                {/* TOP */}\n                <div className=\"top\">\n                    {/* <div className=\"headingContainer\">\n                        <h1>Task-1</h1>\n                    </div> */}\n\n                    <div className=\"headingContainer dark-primary\">\n                        <h1 className=\"globalFontFamily\">Task-1</h1>\n                    </div>\n\n                    <div className=\"detailContainer\">\n                        {/* left */}\n                        <div className=\"left globalFontFamily\">\n                            <p><strong>Images:</strong> 5</p>\n                            <p><strong>Process Status:</strong> Pending</p>\n                            <p><strong>Date:</strong> 27/03/2023</p>\n                            <p><strong>Time:</strong> 03:15 AM</p>\n                        </div>\n\n                        {/* right */}\n                        <div className=\"right globalFontFamily\">\n                        <p><strong>Output:</strong> Orthomosaic(low)</p>\n                        <p>Elevation(Low) 3D Modal(High)</p>\n                        </div>\n                    </div>\n                </div>\n\n                {/* BOTTOM */}\n                <div className=\"bottom\">\n                    {\n                        allFiles.map(()=> {\n                            return(\n                                <div className=\"box\">\n                                    <FolderIcon className=\"folderIcon\" />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n\n            {filteredDatasetFiles.length == 0 && <center style={{ color: \"black\" }}>Data not available </center>}\n          {\n            datasetFiles?.length > 0 &&\n            <div className='paginationDiv'> \n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={6}\n                pageRangeDisplayed={5}\n                onChange={(e) => handlePageChange(e)}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                hideFirstLastPages={true}\n                totalItemsCount={totalPageCount}\n              />\n            </div>\n          }\n        </div>\n        {loading && <RctSectionLoader />}\n      </RctCollapsibleCard>\n\n      <EditDataset selected={selected} Modalopen={openEditDataset} close={()=>setOpenEditDataset(false)} reloadlist={getDatasetFiles}/>\n    </div>\n  )\n}\n","import React, { useEffect,useState } from 'react';\nimport { useHistory } from 'react-router';\n\n\nconst CustomBreadcrumbs = ({ currentPage, data =[] ,props}) => {\n\nconst [navData,setNavData]=useState(data)\n\n\nuseEffect(()=>{\n\n},[])\n\n  const history = useHistory();\n      console.log(data,\"daaata..\")\n  \n  const HandleNavigate = async (item,index)=>{\n    // const Data = [...navData]\n    let myarray=[]\n    // console.log(index,\"Data=\",Data)\n\n\n     for (let i = 0; i < index; i++) {\n       \n      myarray.push(data[i])\n     }\nconsole.log(myarray,\"myarray\")\n    \n    history.push(item.url,{breadcrumbData:myarray})\n  }\n\n  return (\n    <div className=\"page-title d-flex  align-items-center\">\n      {data != undefined  && data.length > 0 &&data.map((item, index) => (\n        <div key={index} className=\"page-title-wrap  d-flex  align-items-center mr-1\" style={{cursor:\"pointer\"}}>\n          \n        <i className=\"ti-angle-left text-dark  custombredcrum-icon\"></i> <span onClick={()=>HandleNavigate(item,index)} className=\"globalFontFamily custombredcrum-heding\">{item.name}</span>\n         \n        </div>\n      ))}\n      <div className=\"page-title-wrap   d-flex  align-items-center text-white m-0\"  style={{cursor:\"pointer\"}}><i className=\"ti-angle-left  text-white custombredcrum-icon\"></i><span className=\"globalFontFamily custombredcrum-heding\">{currentPage}</span></div>\n    </div>\n  );\n};\n\nexport default CustomBreadcrumbs;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import React, { useEffect, useState } from 'react'\nimport {\n    Progress, Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    FormFeedback\n} from 'reactstrap';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Avatar } from '@material-ui/core';\nimport { BASE_URL } from 'Api/APIConst';\nimport { NotificationManager } from 'react-notifications'\nimport { EditProjectDetails, UpadatDataset } from 'Api';\n\nconst EditDataset = ({ selected, Modalopen, close,reloadlist }) => {\n    const [open, setOpen] = useState(false)\n    console.log(selected)\n    const [datasetName, setDatasetName] = useState( \"\")\n    const [comment, setComment] = useState(\"\")\n    \n    \n\n\n    useEffect(() => {\n       if(selected){\n        setDatasetName(selected?.dataset_name || \"\")\n        setComment(selected?.comment)\n       }\n\n        console.log(datasetName,comment,\">>>>>.>>>\")\n        //  setImage(item?.project_image)\n        setOpen(Modalopen)\n\n    }, [Modalopen])\n\n\n\n\n   \n    const SaveEditDetails = () => {\n      \n            const accessToken = JSON.parse(localStorage.getItem('token'))\n           if(datasetName != \"\" || comment != \"\"){\n\n               if (accessToken !== null) {\n                   UpadatDataset(accessToken,selected?.id,datasetName,comment)\n                       .then((res) => {\n                           if (res?.status === 200) {\n                            if(reloadlist){\n                               reloadlist()\n                               setOpen(false)\n                               setDatasetName(\"\")\n                               setComment(\"\")\n                              \n                                if(close){\n                                   close()\n                                   }\n                                   NotificationManager.success(\" Datset updated succesfully!\") \n                            }\n                               console.log('Response from update dataset  :', res)\n                           } else {\n                               // console.log('Response from customerlist:', res)\n   \n                               NotificationManager.error(\"Dataset details update failed!\")\n                           }\n                       })\n                       .catch((err) => {\n                           console.log('Response from Upadat dataset:', err)\n                       })\n               }\n           }else{\n            NotificationManager.error(\"All field is empty\")\n           }\n\n    }\n\n\n    return (\n        <Dialog\n            onClose={() => (close(false), setOpen(false))}\n            open={open}\n\n        >\n            <DialogContent style={{ margin: 0, padding: 0 }}>\n                <div className=\"user-profile-widget\">\n                \n                    <div className=\"p-20\">\n                    \n                    <div style={{ marginTop: \"30px\" }}>\n                            <FormGroup row >\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex \">\n                                      \n                                        <span>Dataset Name<span className=\"text-danger madatory-field\">*</span></span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"input-md\"\n                                        sm={10}\n                                        onChange={(e)=>setDatasetName(e.target.value)}\n                                        value={datasetName}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <FormGroup row >\n\n\n                                <Col sm={12} className=\"d-flex  align-items-center justify-content-center\">\n                                    <Label for=\"firstName\" sm={3} className=\"d-flex primary-dark\">\n                                       \n                                        <span> Comment</span>\n                                    </Label>\n                                    <Input\n                                        type=\"text\"\n                                        // className=\"input-lg\"\n                                        style={{height:\"100px\"}}\n                                        value={comment}\n                                        onChange= {(e)=>{setComment(e.target.value)}}\n                                        sm={10}\n                                    />\n                                </Col>\n\n                            </FormGroup>\n                            <div className=\"d-flex align-items-center justify-content-end\" style={{ marginTop: '30px', marginBottom: \"30px\" }}>\n                                <Button variant=\"contained\" color=\"primary\"  className=\"mx-2 d-flex justify-content-center align-items-center px-3\" onClick={SaveEditDetails}>Save</Button>\n                                <Button variant=\"contained\" color=\"danger\"   className=\"mx-2 d-flex justify-content-center align-items-center\"  onClick={() => (close(false), setOpen(false))}>Cancel</Button>\n                               \n                                \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default EditDataset\n"],"sourceRoot":""}