{"version":3,"sources":["Components/Widgets/NewCustomers.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js"],"names":["NewCustomers","props","deleteConfirmationDialogRef","useRef","useState","sectionReload","setSectionReload","newCustomers","setNewCustomers","selectedDeletedCustomer","setSelectedDeletedCustomer","editCustomerModal","setEditCustomerModal","editCustomer","setEditCustomer","snackbar","setSnackbar","successMessage","setSuccessMessage","addNewCustomerForm","setAddNewCustomerForm","customer_email","customer_name","id","photo_url","addNewCustomerDetails","setAddNewCustomerDetails","useEffect","getNewCustomers","api","get","then","response","data","catch","error","toggleEditCustomerModal","onChangeCustomerDetails","key","value","onChangeCustomerAddNewForm","className","autoHeight","autoHeightMin","autoHeightMax","autoHide","map","customer","charAt","src","alt","width","height","type","onClick","onEditCustomer","current","open","onDeleteCustomer","variant","color","ref","title","message","onConfirm","close","customers","index","indexOf","setTimeout","splice","deleteCustomer","isOpen","toggle","for","name","onChange","e","target","defaultValue","customer_id","readOnly","newCustomer","Date","newAllCustomers","push","onSubmitAddNewCustomerForm","indexOfCustomer","i","length","update","$set","onSubmitCustomerEditDetailForm","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","SnackbarContent","React","action","classes","_props$role","role","other","_objectWithoutProperties","Paper","_extends","square","elevation","clsx","root","withStyles","theme","emphasis","palette","backgroundColor","emphasize","background","default","typography","body2","_defineProperty","getContrastText","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","marginLeft","paddingLeft","marginRight","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","children","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","nodeRef","activatedRef","syntheticEventRef","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","handleClickAway","useEventCallback","event","insideReactTree","document","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","ownerDocument","contains","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","doc","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","Snackbar","_props$anchorOrigin","_props$autoHideDurati","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","timerAutoHide","_React$useState","exited","setExited","handleClose","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","handlePause","handleResume","window","concat","capitalize","appear","in","createChainedFunction","timeout","direction","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","position","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip"],"mappings":"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","file":"static/js/77.1fe7d9dd.chunk.js","sourcesContent":["/**\n * New Customers Widget\n */\nimport React, { useState, Fragment, useEffect, useRef } from 'react';\nimport update from 'react-addons-update';\nimport {\n   Modal,\n   ModalHeader,\n   ModalBody,\n   ModalFooter,\n   Form,\n   FormGroup,\n   Label,\n   Input\n} from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Scrollbars } from 'react-custom-scrollbars';\n// api\nimport api from 'Api';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader';\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog';\n\nfunction NewCustomers(props) {\n   const deleteConfirmationDialogRef = useRef();\n   const [sectionReload, setSectionReload] = useState(false);\n   const [newCustomers, setNewCustomers] = useState(null);\n   const [selectedDeletedCustomer, setSelectedDeletedCustomer] = useState(null);\n   const [editCustomerModal, setEditCustomerModal] = useState(false);\n   const [editCustomer, setEditCustomer] = useState(null);\n   const [snackbar, setSnackbar] = useState(false);\n   const [successMessage, setSuccessMessage] = useState('');\n   const [addNewCustomerForm, setAddNewCustomerForm] = useState(false);\n   const [addNewCustomerDetails, setAddNewCustomerDetails] = useState({\n      customer_email: '',\n      customer_name: '',\n      id: '',\n      photo_url: ''\n   });\n\n   useEffect(() => {\n      getNewCustomers();\n   },[])\n\n   // get new customers\n   const getNewCustomers = () => {\n      setSectionReload(true);\n      api.get('newCustomers.js')\n         .then((response) => {\n            setNewCustomers(response.data);\n            setSectionReload(false);\n         })\n         .catch(error => {\n            setNewCustomers(null);\n            setSectionReload(false);\n         })\n   }\n\n   // on delete customer\n   const onDeleteCustomer = (customer) =>  {\n      deleteConfirmationDialogRef.current.open();\n      setSelectedDeletedCustomer(customer);\n   }\n\n   // delete customer\n   const deleteCustomer = () => {\n      deleteConfirmationDialogRef.current.close();\n      setSectionReload(true)\n      let customers = newCustomers;\n      let index = customers.indexOf(selectedDeletedCustomer);\n      setTimeout(() => {\n         customers.splice(index, 1);\n         setNewCustomers(customers);\n         setSectionReload(false);\n         setSnackbar(true);\n         setSuccessMessage('Customer Deleted Successfully');\n      }, 1500);\n   }\n\n   // edit customer\n   const onEditCustomer = (customer) => {\n      setEditCustomerModal(true);\n      setEditCustomer(customer);\n      setAddNewCustomerForm(false);\n   }\n\n   // toggle edit customer modal\n   const toggleEditCustomerModal = () => {\n      setEditCustomerModal(!editCustomerModal);\n   }\n\n   // submit customer edit form\n   const onSubmitCustomerEditDetailForm = () => {\n      if (editCustomer.customer_name !== '' && editCustomer.customer_email !== ''){\n         setEditCustomer(false);\n         setSectionReload(true);\n         let indexOfCustomer;\n         for (let i = 0; i < newCustomers.length; i++) {\n            const customer = newCustomers[i];\n            if (customer.customer_id === editCustomer.customer_id) {\n               indexOfCustomer = i;\n            }\n         }\n         setTimeout(() => {\n            setSectionReload(false);\n            setSnackbar(true);\n            setEditCustomerModal(false);\n            setSuccessMessage('Customer Updated Success');\n            setNewCustomers(update(newCustomers,\n               {\n                  [indexOfCustomer]: { $set: editCustomer }\n               }\n            ))\n         }, 1500);\n      }\n   }\n\n   // on change customer details\n   const onChangeCustomerDetails = (key, value) => {\n      setEditCustomer({\n         ...editCustomer,\n         [key]: value\n      })\n   }\n\n   // add new customer\n   const addNewCustomer = () => {\n      setEditCustomerModal(true);\n      setAddNewCustomerForm(true);\n      setEditCustomer(null);\n      setAddNewCustomerDetails({\n         customer_email: '',\n         customer_name: '',\n         id: '',\n         photo_url: ''\n      });\n   }\n\n   // on change customer add new form value\n   const onChangeCustomerAddNewForm = (key, value) => {\n      setAddNewCustomerDetails({\n         ...addNewCustomerDetails,\n         [key]: value\n      })\n   }\n\n   // on submit add new customer form\n   const onSubmitAddNewCustomerForm = () =>  {\n      if (addNewCustomerDetails.customer_name !== '' && addNewCustomerDetails.customer_email !== ''){\n         setEditCustomerModal(false);\n         setSectionReload(true);\n        \n         let newCustomer = addNewCustomerDetails;\n            newCustomer.id = new Date();\n            newCustomer.photo_url = '';\n         let newAllCustomers = newCustomers;\n         setTimeout(() => {\n            newAllCustomers.push(newCustomer);\n            setNewCustomers(newAllCustomers);\n            setSectionReload(false);\n            setSnackbar(true);\n            setSuccessMessage('Customer Added Successfully');\n         }, 1500);\n      }\n   }\n\n   return (\n      <Fragment>\n         {sectionReload &&\n            <RctSectionLoader />\n         }\n         <Scrollbars className=\"rct-scroll\" autoHeight autoHeightMin={100} autoHeightMax={290} autoHide>\n            <ul className=\"list-group new-customer-list\">\n               {newCustomers && newCustomers.map((customer, key) => (\n                  <li className=\"list-group-item d-flex justify-content-between\" key={key}>\n                     <div className=\"d-flex align-items-start\">\n                        <div className=\"media\">\n                           <div className=\"media-left mr-15\">\n                              {customer.photo_url === '' ?\n                                 <Avatar>{customer.customer_name.charAt(0)}</Avatar>\n                                 : <img src={customer.photo_url} alt=\"project logo\" className=\"media-object rounded-circle\" width=\"40\" height=\"40\" />\n                              }\n                           </div>\n                           <div className=\"media-body\">\n                              <span className=\"d-block fs-14\">{customer.customer_name}</span>\n                              <span className=\"d-block fs-12 text-muted\">{customer.customer_email}</span>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"d-flex align-items-end\">\n                        <button type=\"button\" className=\"text-primary\" onClick={() => onEditCustomer(customer)}>\n                           <i className=\"zmdi zmdi-edit\"></i>\n                        </button>\n                        <button type=\"button\" className=\"text-danger\" onClick={() => onDeleteCustomer(customer)}>\n                           <i className=\"zmdi zmdi-close\"></i>\n                        </button>\n                     </div>\n                  </li>\n               ))}\n            </ul>\n         </Scrollbars>\n         <div className=\"d-flex p-3\">\n            <Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => addNewCustomer()}><IntlMessages id=\"widgets.addNew\" /></Button>\n         </div>\n         {/* Delete Customer Confirmation Dialog */}\n         <DeleteConfirmationDialog\n            ref={deleteConfirmationDialogRef}\n            title=\"Are You Sure Want To Delete?\"\n            message=\"Are You Sure Want To Delete Permanently This Customer.\"\n            onConfirm={() => deleteCustomer()}\n         />\n         {/* Customer Edit Modal*/}\n         {editCustomerModal &&\n            <Modal\n               isOpen={editCustomerModal}\n               toggle={toggleEditCustomerModal}\n            >\n               <ModalHeader toggle={toggleEditCustomerModal}>\n                  {addNewCustomerForm ? 'Add New Customer' : 'Edit Customer'}\n               </ModalHeader>\n               <ModalBody>\n                  {addNewCustomerForm ?\n                     <Form>\n                        <FormGroup>\n                           <Label for=\"customerName\">Name</Label>\n                           <Input\n                              type=\"text\"\n                              name=\"name\"\n                              id=\"customerName\"\n                              value={addNewCustomerDetails.customer_name}\n                              onChange={(e) => onChangeCustomerAddNewForm('customer_name', e.target.value)}\n                           />\n                        </FormGroup>\n                        <FormGroup>\n                           <Label for=\"customerEmail\">Email</Label>\n                           <Input\n                              type=\"email\"\n                              name=\"email\"\n                              id=\"customerEmail\"\n                              value={addNewCustomerDetails.customer_email}\n                              onChange={(e) => onChangeCustomerAddNewForm('customer_email', e.target.value)}\n                           />\n                        </FormGroup>\n                     </Form>\n                     : <Form>\n                        <FormGroup>\n                           <Label for=\"customerId\">Id</Label>\n                           <Input\n                              type=\"text\"\n                              name=\"name\"\n                              id=\"customerId\"\n                              defaultValue={editCustomer.customer_id}\n                              readOnly\n                           />\n                        </FormGroup>\n                        <FormGroup>\n                           <Label for=\"customerName\">Name</Label>\n                           <Input\n                              type=\"text\"\n                              name=\"name\"\n                              id=\"customerName\"\n                              value={editCustomer.customer_name}\n                              onChange={(e) => onChangeCustomerDetails('customer_name', e.target.value)}\n                           />\n                        </FormGroup>\n                        <FormGroup>\n                           <Label for=\"customerEmail\">Email</Label>\n                           <Input\n                              type=\"email\"\n                              name=\"email\"\n                              id=\"customerEmail\"\n                              value={editCustomer.customer_email}\n                              onChange={(e) => onChangeCustomerDetails('customer_email', e.target.value)}\n                           />\n                        </FormGroup>\n                     </Form>\n                  }\n               </ModalBody>\n               <ModalFooter>\n                  {addNewCustomerForm ?\n                     <div>\n                        <Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => onSubmitAddNewCustomerForm()}><IntlMessages id=\"button.add\" /></Button>{' '}\n                        <Button variant=\"contained\" className=\"btn-danger text-white\" onClick={toggleEditCustomerModal}><IntlMessages id=\"button.cancel\" /></Button>\n                     </div>\n                     : <div><Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => onSubmitCustomerEditDetailForm()}><IntlMessages id=\"button.update\" /></Button>{' '}\n                        <Button variant=\"contained\" className=\"btn-danger text-white\" onClick={toggleEditCustomerModal}><IntlMessages id=\"button.cancel\" /></Button></div>\n                  }\n               </ModalFooter>\n            </Modal>\n         }\n         <Snackbar\n            anchorOrigin={{\n               vertical: 'top',\n               horizontal: 'center',\n            }}\n            open={snackbar}\n            onClose={() => setSnackbar(false)}\n            autoHideDuration={2000}\n            message={<span id=\"message-id\">{successMessage}</span>}\n         />\n      </Fragment>\n   );\n}\n\nexport default NewCustomers;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event) {\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$disableReactTr = props.disableReactTree,\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      onClickAway = props.onClickAway,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var activatedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(function () {\n      activatedRef.current = true;\n    }, 0);\n    return function () {\n      activatedRef.current = false;\n    };\n  }, []); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviours like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\n      var doc = ownerDocument(nodeRef.current);\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n\n  var childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired before the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);"],"sourceRoot":""}