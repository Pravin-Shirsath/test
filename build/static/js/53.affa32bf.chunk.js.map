{"version":3,"sources":["Routes/dashboard/rechargeModal/Payment.js","Routes/dashboard/rechargeModal/index.js","Routes/dashboard/ReuseComponent/CustomBreadcrumbs.js"],"names":["Payment","open","handle","useState","opend","setOpend","console","log","useEffect","Modal","isOpen","centered","class","id","for","or","type","maxlength","placeholder","onClick","style","position","top","right","fontWeight","Recharge","props","useHistory","location","loading","setRecharge","setFilteredRecharges","selectedPlan","setSelectedPlan","modalOpen","setModalOpen","additionalspace","setAdditionalspace","amountTotal","setAmountTotal","JSON","parse","localStorage","getItem","couponText","setCouponText","discount","setDiscount","CoupanDiscount","RechargePlan","accessToken","GetRechargedPlan","then","res","status","data","results","undefined","length","catch","err","ErrorHandling","response","discount_type","discount_value","parseInt","NotificationManager","error","calculate","DiscountCheck","PaybleAmount","className","Helmet","name","content","CustomBreadcrumbs","currentPage","state","breadcrumbData","RctCollapsibleCard","fullBlock","value","onChange","e","isNaN","parseFloat","Total","per_gb_rate","AddspceEvent","target","Button","CuponValidCheck","setItem","stringify","Success","color","display","justifyContent","alignItems","RctSectionLoader","history","HandleNavigate","item","index","myarray","i","push","url","map","cursor"],"mappings":"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","file":"static/js/53.affa32bf.chunk.js","sourcesContent":["import React ,{ useEffect,useState }  from 'react'\n// import { useEffect } from 'react-virtualized/node_modules/@types/react'\nimport \"./payment.css\"\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Input,\n    Form,\n    FormGroup,\n    Label,\n    Col\n  } from 'reactstrap'\n  import CloseIcon from '@mui/icons-material/Close';\nconst Payment = ({open,handle}) => {\n    const [opend ,setOpend]=useState(false) \n    console.log(open,handle)\nuseEffect(()=>{\n    setOpend(open)\n  \n\n\n\n},[open])\nconst HandleClose = ()=>{\n     setOpend(false);\n     if(handle){\n\n        handle(false)\n    }\n}\n  return (\n    <div>\n<Modal isOpen={opend}\n        // size=\"mg\"\n        centered={true}>\n      <div class=\"ckeckout-container m-5\">\n  <div id=\"Checkout\" class=\"inline\">\n      <h1>Pay Invoice</h1>\n      <div class=\"card-row\">\n          <span class=\"visa\"></span>\n          <span class=\"mastercard\"></span>\n          <span class=\"amex\"></span>\n          <span class=\"discover\"></span>\n      </div>\n      <form>\n          <div class=\"form-group\">\n              <label for=\"PaymentAmount\">Payment amount</label>\n              <div class=\"amount-placeholder\">\n                  <span>$</span>\n                  <span>1100.00</span>\n              </div>\n          </div>\n          <div class=\"form-group\">\n              <label or=\"NameOnCard\">Name on card</label>\n              <input id=\"NameOnCard\" class=\"form-control\" type=\"text\" maxlength=\"255\"></input>\n          </div>\n          <div class=\"form-group\">\n              <label for=\"CreditCardNumber\">Card number</label>\n              <input id=\"CreditCardNumber\" class=\"null card-image form-control\" type=\"text\"></input>\n          </div>\n          <div class=\"expiry-date-group form-group\">\n              <label for=\"ExpiryDate\">Expiry date</label>\n              <input id=\"ExpiryDate\" class=\"form-control\" type=\"text\" placeholder=\"MM / YY\" maxlength=\"7\"></input>\n          </div>\n          <div class=\"security-code-group form-group\">\n              <label for=\"SecurityCode\">Security code</label>\n              <div class=\"input-container\" >\n                  <input id=\"SecurityCode\" class=\"form-control\" type=\"text\" ></input>\n                  <i id=\"cvc\" class=\"fa fa-question-circle\"></i>\n              </div>\n              <div class=\"cvc-preview-container two-card hide\">\n                  <div class=\"amex-cvc-preview\"></div>\n                  <div class=\"visa-mc-dis-cvc-preview\"></div>\n              </div>\n          </div>\n          {/* <div class=\"zip-code-group form-group\">\n              <label for=\"ZIPCode\">ZIP/Postal code</label>\n              <div class=\"input-container\">\n                  <input id=\"ZIPCode\" class=\"form-control\" type=\"text\" maxlength=\"10\"></input>\n                  <a tabindex=\"0\" role=\"button\" data-toggle=\"popover\" data-trigger=\"focus\" data-placement=\"left\" data-content=\"Enter the ZIP/Postal code for your credit card billing address.\"><i class=\"fa fa-question-circle\"></i></a>\n              </div>\n          </div> */}\n          <button id=\"PayButton\" class=\"btn btn-block btn-success submit-button\" type=\"submit\">\n              <span class=\"submit-button-lock\"></span>\n              <span class=\"align-middle\">Pay $1100.00</span>\n          </button>\n          <CloseIcon onClick={HandleClose} style={{position:\"absolute\",top:5,right:5,fontWeight:800}}></CloseIcon>\n      </form>\n  </div>\n</div>\n</Modal>\n    </div>\n  )\n}\n\nexport default Payment\n\n","import \"./recharge.css\"\nimport Payment from './Payment'\n\n/**\n * User Management Page\n */\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport { Link, useHistory } from 'react-router-dom';\n \n// page title bar\nimport PageTitleBar from '../../../Components/PageTitleBar/PageTitleBar'\n// intl messages\nimport IntlMessages from '../../../Util/IntlMessages'\n// rct card box\nimport RctCollapsibleCard from '../../../Components/RctCollapsibleCard/RctCollapsibleCard'\n// rct section loader\nimport RctSectionLoader from '../../../Components/RctSectionLoader/RctSectionLoader'\nimport '../../../Assets/css/user.css'\nimport \"../../../Assets/css/main.css\"\n\nimport {\n  Progress, Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Col,\n  FormFeedback, CustomInput\n} from 'reactstrap';\nimport { CuponValidCheck, GetRechargedPlan } from \"Api\";\nimport { NotificationManager } from 'react-notifications'\nimport { ErrorHandling } from \"Constants/ErrorHandling\";\nimport CustomBreadcrumbs from \"../ReuseComponent/CustomBreadcrumbs\";\nimport UppyModal from \"Components/Header/UppyModal\";\n\nexport default function Recharge(props) {\n  const history = useHistory();\n  const {location}=props\n  const [loading, setLoading] = useState(false)\n  const [recharge, setRecharge] = useState([])\n  const [filteredRecharges, setFilteredRecharges] = useState([])\n  const [totalPageCount, setTotalPageCount] = useState(0)\n  const [selectedPlan, setSelectedPlan] = useState(null)\n  const [modalOpen,setModalOpen]=useState(false)\n  const [additionalspace, setAdditionalspace] = useState(0)\n  const [paybleAmount, setPaybleAmount] = useState(0)\n\n  // amount total is calculation space * per gb rate\n  const [amountTotal, setAmountTotal] = useState(0)\n  const [couponText, setCouponText] = useState(JSON.parse(localStorage.getItem(\"Couponcode\")) || \"\")\n  const [discount, setDiscount] = useState(0)\n  const [CoupanDiscount, setCouponDiscount] = useState(JSON.parse(localStorage.getItem(\"Discount\")) || { \"discount_value\": 0, \"discount_type\": \"\" })\n\n\n\n\n  useEffect(() => {\n    const isLoggedInBool = localStorage.getItem(\"isLoggedIn\")\n    RechargePlan()\n  }, [])\n\n\n\n\n  const RechargePlan = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (accessToken !== null) {\n      GetRechargedPlan(accessToken, 1)\n        .then((res) => {\n          if (res?.status === 200) {\n            if (res?.data?.results) {\n              if (res?.data?.results != undefined) {\n                if (res?.data?.results.length == 1) {\n                  setSelectedPlan(res?.data?.results[0])\n                }else{\n                  \n                }\n              }\n            }\n\n            setRecharge(res?.data?.results)\n            setFilteredRecharges(res?.data?.results)\n            ;\n            console.log('Response fromRecharged list :', res)\n\n          } else {\n            console.log('Response from fromRecharged:', res)\n          }\n        })\n        .catch((err) => {\n\n          ErrorHandling(err)\n\n\n          // console.log(\"status of invalid token\", err?.response?.data, err?.response?.status)\n          if (err?.response?.status == 401) {\n\n          } else {\n            // console.log('Response from customerlist:', err)\n          }\n        })\n    }\n  }\n\n\n\n  const DiscountCheck=()=>{\n    if (CoupanDiscount.discount_type === \"\") {\n      setDiscount(0)\n\n    } else if (CoupanDiscount.discount_type === \"amount\") {\n\n      if (CoupanDiscount.discount_value <= amountTotal) {\n        setDiscount(parseInt(CoupanDiscount.discount_value))\n\n      } else {\n        setDiscount(0)\n        if(amountTotal != 0){\n\n          NotificationManager.error(`coupon can not be applied below ${parseInt(CoupanDiscount.discount_value)} rupees`);\n        }\n      }\n    } else if (CoupanDiscount.discount_type == \"percentage\") {\n\n      if (amountTotal != 0) {\n        let calculate = parseInt(amountTotal) * (parseInt(CoupanDiscount.discount_value) / 100)\n        setDiscount(calculate)\n\n      } else {\n        setDiscount(0)\n       \n\n      }\n\n\n\n    }\n\n  }\n\n  useEffect(()=>{\n    DiscountCheck()\n  },[amountTotal])\n\n\n  const AddspceEvent = (e) => {\n    console.log(e, typeof (e), isNaN(e))\n\n    /** if  AddSpace input value Nan or \" \" handle  and calculate amount handle*/\n    if (!isNaN(e) || e === '') {\n\n      let Value = parseFloat(e);\n      if (Value < 0) {\n        setAmountTotal(0)\n        setAdditionalspace(0)\n        NotificationManager.error(\"Value cannot be negative. Please enter a valid Value.\");\n        console.log(\"\");\n      } else {\n        setAdditionalspace(e)\n\n      }\n      /** if  selected pland is or default selllected plan is available pergb rate and add space calculation set*/\n\n      if (selectedPlan) {\n        let Total = (parseInt(e) * parseInt(selectedPlan?.per_gb_rate))\n        console.log(Total, \"total\")\n        if (!isNaN(Total)) {\n          setAmountTotal(parseInt(Total))\n        } else {\n          setAmountTotal(0)\n        }\n      }\n\n      /** if  Discount check */\n\n    \n\n    }\n\n  }\n\n\n\n\n  const CopanApplay = () => {\n    const accessToken = JSON.parse(localStorage.getItem('token'))\n    if (couponText != \"\") {\n      if (accessToken !== null) {\n\n\n        CuponValidCheck(accessToken, couponText)\n          .then((res) => {\n            console.log(\"coupan=\", res)\n            if (res?.status === 200) {\n              if (res?.data?.[0]) {\n                localStorage.setItem(\"Discount\", JSON.stringify(res?.data?.[0]))\n                localStorage.setItem(\"Couponcode\", JSON.stringify(couponText))\n                NotificationManager.Success(\"Copon Apply\");\n              }\n            } else {\n              console.log('Response from fromRecharged:', res)\n            }\n          })\n          .catch((err) => {\n\n            ErrorHandling(err)\n\n\n          })\n      }\n    } else {\n      NotificationManager.error(\"Coupon code is empty\");\n\n    }\n  }\n\n\n    const  PaybleAmount =()=>{\n     if(amountTotal >= discount){\n      return parseInt(amountTotal)- parseInt(discount)\n\n     }else{\n       \n       return parseInt(amountTotal)\n     }\n\n    }\n\n\n\n  return (\n    <div className=\"user-management\">\n      <Helmet>\n        <title>Automaton | Customers List</title>\n        <meta name=\"description\" content=\"Automaton Widgets\" />\n      </Helmet>\n      {/* <PageTitleBar\n        title={<IntlMessages id=\"sidebar.recharge\" />}\n        match={props.match}\n      /> */}\n      <CustomBreadcrumbs    currentPage={\"Recharge Modal\"} data={location?.state?.breadcrumbData}  />\n{/* \n      <div className=\"row \">\n        {filteredRecharges &&\n          filteredRecharges.map((item, i) => {\n\n\n            return <RctCollapsibleCard\n\n              colClasses=\"col-sm-12 col-md-3 col-lg-3  rounded\"\n\n              fullBlock\n              key={i}\n            >\n              <div className=\"shadow project-card-shadow\">\n                <section className=\"bg-primary text-white px-3 shadow rounded d-flex  align-items-center py-3 \">\n                  <div className=\"ml-4  align-items-center \">\n\n                    <h2 className=\"\">{item?.subscription_name} </h2>\n                    <h3>{item.per_gb_rate} ₹ / GB </h3>\n                  </div>\n                </section>\n\n\n              </div>\n\n            </RctCollapsibleCard>\n          })\n        }\n\n\n      </div> */}\n    \n\n      <RctCollapsibleCard fullBlock>\n        <div className=\"table-responsive dark-primary-text\">\n          <div className='rechargeBoxContainer'>\n            <div className=\"heading dark-primary\">\n              <h1 className=\"globalFontFamily\">Recharge</h1>\n            </div>\n\n            <div className=\"firstRow recharge-modal-row light-primary\">\n              <div className=\"left\">\n                <p className=\"wrapper\"><p className=\"text globalFontFamily\">Additional Space</p> <p className=\"inputMaterial globalFontFamily\"><input type=\"number\" value={additionalspace} onChange={(e) => AddspceEvent(e.target.value)} /> GB <span className=\"diff globalFontFamily\">@{selectedPlan?.per_gb_rate} ₹ / GB</span></p></p>\n              </div>\n\n              <div className=\"mid globalFontFamily\"><p>=</p></div>\n\n              <div className=\"right globalFontFamily\"><p>{amountTotal} ₹</p></div>\n            </div>\n\n            <div className=\"secondRow recharge-modal-row light-primary\">\n              <div className=\"left\">\n                <p><span className=\"inputContainer\"><input value={couponText} onChange={(e) => setCouponText(e.target.value)} /></span> <Button onClick={CopanApplay} color=\"primary\" style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>Apply Coupon</Button></p>\n              </div>\n\n              <div className=\"mid\">\n                <p className=\"globalFontFamily\">=</p>\n              </div>\n\n              <div className=\"right globalFontFamily\"><p><span className=\"operator globalFontFamily\">-</span>{discount} ₹</p></div>\n            </div>\n\n            <div className=\"thirdRow recharge-modal-row light-primary\">\n              <div className=\"left\"></div>\n\n              <div className=\"mid\"></div>\n\n              <div className=\"right\">\n                <p className=\"globalFontFamily\"> {PaybleAmount()} ₹</p>\n              </div>\n            </div>\n\n            <div className=\"fourthRow recharge-modal-row light-primary\">\n              <p className=\"globalFontFamily\">\n                Net Payable <span>{PaybleAmount()} ₹</span>\n              </p>\n            </div>\n\n            <div className=\"fifthRow\">\n              <p>\n                {/* <Button color=\"primary\" style={{ padding: \"10px 50px\" }}>Proceed To Checkout</Button> */}\n                <Button color=\"primary\"  onClick={()=>setModalOpen(true)}>Proceed To Checkout</Button>\n              </p>\n            </div>\n          </div>\n        </div>\n        {loading && <RctSectionLoader />}\n\n        <Payment open={modalOpen}  handle={setModalOpen}/>\n      </RctCollapsibleCard>\n    </div>\n  )\n}\n","import React, { useEffect,useState } from 'react';\nimport { useHistory } from 'react-router';\n\n\nconst CustomBreadcrumbs = ({ currentPage, data =[] ,props}) => {\n\nconst [navData,setNavData]=useState(data)\n\n\nuseEffect(()=>{\n\n},[])\n\n  const history = useHistory();\n      console.log(data,\"daaata..\")\n  \n  const HandleNavigate = async (item,index)=>{\n    // const Data = [...navData]\n    let myarray=[]\n    // console.log(index,\"Data=\",Data)\n\n\n     for (let i = 0; i < index; i++) {\n       \n      myarray.push(data[i])\n     }\nconsole.log(myarray,\"myarray\")\n    \n    history.push(item.url,{breadcrumbData:myarray})\n  }\n\n  return (\n    <div className=\"page-title d-flex  align-items-center\">\n      {data != undefined  && data.length > 0 &&data.map((item, index) => (\n        <div key={index} className=\"page-title-wrap  d-flex  align-items-center mr-1\" style={{cursor:\"pointer\"}}>\n          \n        <i className=\"ti-angle-left text-dark  custombredcrum-icon\"></i> <span onClick={()=>HandleNavigate(item,index)} className=\"globalFontFamily custombredcrum-heding\">{item.name}</span>\n         \n        </div>\n      ))}\n      <div className=\"page-title-wrap   d-flex  align-items-center text-white m-0\"  style={{cursor:\"pointer\"}}><i className=\"ti-angle-left  text-white custombredcrum-icon\"></i><span className=\"globalFontFamily custombredcrum-heding\">{currentPage}</span></div>\n    </div>\n  );\n};\n\nexport default CustomBreadcrumbs;\n"],"sourceRoot":""}